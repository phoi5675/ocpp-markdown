= B. Provisioning
:!chapter-number:
:sectnums:

<<<

== Introduction

이 기능 블록은 CSO가 충전소를 프로비저닝하고, 네트워크에서 충전소를 허용하고, 충전소에서 구성 정보를 검색하는 데 도움이 되는 모든 기능을 설명합니다. 또한 충전소 구성에 대한 정보를 검색하고, 구성을 변경하는 등의 기능으로 구성됩니다. 이 장에서는 충전소를 재설정하고 새 NetworkConnectionProfile로 마이그레이션하는 방법도 다룹니다.

[[transactions_before_being_accepted_by_a_csms]]
=== Transactions before being accepted by a CSMS

충전소 운영자는 CSMS에서 충전소를 수락하기 전에 충전소가 거래를 수락하도록 구성할 수 있습니다. 이러한 동작을 구현하려는 당사자는 해당 거래가 CSMS에 전달될 수 있는지 여부가 불확실하다는 점을 알아야 합니다.

재시작(예: 원격 재설정 명령, 정전, 펌웨어 업데이트, 소프트웨어 오류 등으로 인해) 후 충전소는 반드시 CSMS에 다시 연락하여 BootNotification 요청을 보내야 합니다. 충전소가 CSMS에서 <<boot_notification_response,BootNotificationResponse>>를 수신하지 못하고 올바르게 사전 설정된 내장형 비휘발성 실시간 클록 하드웨어가 없는 경우 충전소에 유효한 날짜 및 시간 설정이 없어 나중에 거래의 날짜와 시간을 확인하기 어렵거나 불가능할 수 있습니다.

또한 CSMS가 장시간 또는 무기한으로 수락됨이 아닌 상태를 표시하는 경우도 있습니다(예: 구성 오류로 인해).

충전소가 CSMS에서 수락된 적이 없는 경우(현재 연결 설정, URL 등을 사용하여) 충전소에서 모든 충전 서비스를 거부하는 것이 좋습니다. 사용자를 인증할 수 없고 실행 중인 트랜잭션이 프로비저닝 프로세스와 충돌할 수 있기 때문입니다.

이것이 지원되는 경우 이 동작은 구성 변수 <<tx_before_accepted_enabled,`TxBeforeAcceptedEnabled`>>를 통해 구성할 수 있습니다.

<<<

== Use cases & Requirements

=== Booting a Charging Station

:sectnums!:
[[cold_boot_charging_station]]
=== B01 - Cold Boot Charging Station

.B01 - 콜드 부트 충전소
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |콜드 부트 충전소
|2 |ID |B01
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |이 사용 사례의 목적은 전원이 켜지는 충전소가 CSMS에 등록하고 올바른 상태 정보를 제공할 수 있도록 하는 것입니다.
|4 |설명 |이 사용 사례는 CSMS가 어떤 충전소가 액세스하는지 제어하는 ​​방법을 설명합니다. CSMS에 연결된 충전소를 제어하려면 충전소가 <<boot_notification_request,BootNotificationRequest>>를 보내야 합니다. 이 요청에는 충전소에 대한 몇 가지 일반 정보가 포함되어 있습니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** 충전소에 전원이 공급됩니다. +
**2.** 충전소에서 <<boot_notification_request,BootNotificationRequest>>를 CSMS로 전송합니다. +
**3.** CSMS에서 <<boot_notification_response,BootNotificationResponse>>를 _Accepted_ 상태로 반환합니다. +
**4.** _선택 사항:_ 충전소에서 <<status_notification_request,StatusNotificationRequest>>를 각 커넥터에 대한 CSMS로 _Unavailable_ 상태로 전송합니다. +
**5.** 충전소에서 <<status_notification_request,StatusNotificationRequest>>를 각 커넥터에 대한 CSMS로 전송합니다. (재)부팅 전에 CSMS에서 상태가 _사용 불가_ 또는 _예약됨_으로 설정된 경우 커넥터는 이 상태로 돌아가야 하며, 그렇지 않은 경우 상태가 _사용 가능_이어야 하고, 진행 중이었던 트랜잭션을 재개할 때 상태가 _점유됨_이어야 합니다. +
**6.** 정상적인 운영이 재개됩니다. +
**7.** 충전소가 CSMS에 HeartbeatRequest를 보냅니다.
|{nbsp} |_대체 시나리오_
|<<cold_boot_charging_station_pending,B02 - 콜드 부트 충전소 - 보류 중>> +
<<cold_boot_charging_station_rejected,B03 - 콜드 부트 충전소 - 거부됨>>
|5 |필수 조건 |충전소의 전원이 꺼졌습니다.
|6 |사후 조건
|**성공한 사후 조건:** +
충전소가 _유휴_ 상태이고 _수락됨_입니다.

**실패 사후 조건:** +
충전소가 _거부됨_ 상태를 수신했습니다. <<cold_boot_charging_station_rejected,B03 - 콜드 부트 충전소 - 거부됨>>이 적용됩니다.

충전소가 _보류_ 상태를 수신했습니다. <<cold_boot_charging_station_pending,B02 - 콜드 부트 충전소 - 보류>>이 적용됩니다.
|===

.시퀀스 다이어그램: 콜드 부트 충전소
image::part2/images/figure_10.svg[시퀀스 다이어그램: 콜드 부트 충전소]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리
|**1.** CSMS와 충전소 간의 통신 연결 초기 설정 안 됨: CSMS와의 연결을 다시 시도하세요. +
**2.** CSMS에서 응답 없음/시간 초과: 충전소는 대기 간격 후에 <<boot_notification_request,BootNotificationRequest>>를 다시 보냅니다. 충전소는 이 간격을 스스로 선택합니다(이 간격을 포함하는 <<boot_notification_response,BootNotificationResponse>>를 받지 못했기 때문에). 이렇게 하면 CSMS에 요청이 넘쳐나는 것을 방지할 수 있습니다.
|8 |참고
|자체 검사를 위한 여러 옵션이 가능합니다. 일부 충전소는 부팅하고 _Unavailable_로 상태 알림을 보낸 다음, 모든 하드웨어를 검사하고 충전소가 가동되면 _Available_ 상태로 새 StatusNotifications를 보냅니다. 그러나 자체 검사를 수행하고 <<boot_notification_request,BootNotificationRequest>>를 보내는 데 필요한 순서는 없습니다. 충전소는 <<boot_notification_request, BootNotificationRequest>>를 보내기 _전에_ 자체 검사를 수행하고 (모바일) 네트워크 연결이 설정되고 <<boot_notification_request, BootNotificationRequest>>가 전송되기 전에 상태를 확인할 수도 있습니다. +
충전소나 EVSE에 문제가 있는 경우 상태는 _Faulted_로 설정해야 합니다. _Reserved_ 및 _Unavailable_ 상태는 재부팅 후에도 지속됩니다.
|===

[[cold_boot_charging_station_requirements]]
=== B01 - Cold Boot Charging Station - Requirements

.B01 - 요구 사항
[cols="^.^2,<.^6,<.^6,<.^4",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의 |참고

|B01.FR.01 |시작 후. |충전소는 구성에 대한 정보와 함께 <<boot_notification_request,BootNotificationRequest>>를 CSMS로 보내야 합니다.
|정보: 버전, 공급업체 등
|B01.FR.02 |B01.FR.01 +
CSMS는 충전소에서 <<boot_notification_request,BootNotificationRequest>>를 수신했습니다.
|CSMS는 충전소를 수락할지 여부를 나타내기 위해 응답해야 합니다. |{nbsp}
|B01.FR.03 |리부팅 후(예: 원격 재설정 명령, 정전, 펌웨어 업데이트, 소프트웨어 오류 등)
|충전소는 CSMS에 다시 연결하고 부팅하거나 재부팅할 때마다 <<boot_notification_request,BootNotificationRequest>>를 전송해야 합니다. |{nbsp}
|B01.FR.04 |CSMS가 <<boot_notification_response,BootNotificationResponse>>로 응답하고 상태가 `Accepted`이고 +
`interval` > 0인 경우
|충전소는 응답 메시지의 간격에 따라 하트비트 간격을 조정해야 합니다. |{nbsp}
|B01.FR.05 |CSMS가 <<boot_notification_response,BootNotificationResponse>>로 응답하고 상태가 Accepted인 경우
|충전소는 각 커넥터에 대해 현재 상태와 함께 <<status_notification_request,StatusNotificationRequest>>를 보내야 합니다. |{nbsp}
|B01.FR.06 |충전소는 <<boot_notification_response,BootNotificationResponse>>를 수신했습니다. +
그리고 +
충전소는 시간 동기화를 위해 하트비트를 사용하도록 구성되었습니다 <<timesource,`TimeSource`>>
|충전소는 충전소의 내부 시계를 제공된 CSMS의 현재 시간과 동기화해야 합니다. |{nbsp}
|B01.FR.07 |충전소 또는 EVSE가 Change Availability 명령에 의해 _Unavailable_ 상태로 설정된 경우.
|_Unavailable_ 상태는 재부팅 시에도 지속되어야 합니다. |{nbsp}
|B01.FR.08 |물리적 전원 켜기/재부팅과 BootNotification의 성공적인 완료 사이, CSMS가 _Accepted_ 또는 _Pending_을 반환하는 경우.
|충전소는 CSMS에 다른 OCPP 요청을 보내서는 안 됩니다(<<boot_notification_request,BootNotificationRequest>> 제외). 여기에는 이전 세션에서 충전소에 여전히 있는 캐시된 OCPP 메시지가 포함됩니다.
|_Pending_ 상태에서 메시지를 보내는 것에 대한 자세한 내용은 <<cold_boot_charging_station_pending,B02 - Cold Boot Charging Station - Pending>>(예: B02.FR.02)을 참조하세요.
|B01.FR.09 |B01.FR.01 |충전소는 reason 필드에 <<boot_notification_request,BootNotificationRequest>> 메시지를 보낸 이유를 표시해야 합니다.
|사용할 이유에 대해서는 <<boot_reason_enum_type,BootReasonEnumType>>을 참조하세요.
|B01.FR.10 |충전소가 상태가 _Accepted_가 아닌 <<boot_notification_response,BootNotificationResponse>>를 수신했습니다. +
그리고 +
충전소가 RPC Framework: CALL 메시지를 전송하는데, 이 메시지는 <<boot_notification_request,BootNotificationRequest>>가 아니거나 다음 메시지 중 하나에 의해 트리거된 메시지가 아닙니다. <<trigger_message_request,TriggerMessageRequest>>, <<get_base_report_reuqest,GetBaseReportRequest>>, <<get_report_request,GetReportRequest>>.
|CSMS는 RPC Framework로 응답해야 합니다. +
CALLERROR: SecurityError.
|충전소는 수락되기 전에 다른 메시지를 보내는 것을 시작할 수 없습니다.
|B01.FR.11 |B01.FR.01 및 +
보안 프로필 3이 사용됩니다.
|CSMS는 <<boot_notification_request,BootNotificationRequest>>의 일련 번호를 인증서 일반 이름의 일련 번호와 비교해야 합니다. |{nbsp}
|B01.FR.12 |B01.FR.11 및 +
<<boot_notification_request,BootNotificationRequest>>의 일련 번호가 인증서 일반 이름의 일련 번호와 같지 않습니다.
|CSMS는 WebSocket 연결을 닫아야 합니다. |{nbsp}
|B01.FR.13 |EVSE가 예약된 경우| _예약됨_ 상태는 재부팅 시에도 지속되어야 합니다. |{nbsp}
|===

[[cold_boot_charging_station_pending]]
=== B02 - Cold Boot Charging Station - Pending

.B02 - 콜드 부트 충전 스테이션 - 보류 중
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |콜드 부트 충전 스테이션 - 보류 중
|2 |ID |B02
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|{nbsp} d|_부모 사용 사례_ |<<cold_boot_charging_station,B01 - 콜드 부트 충전 스테이션>>
|3 |목표
|**1.** 충전 스테이션에 아직 CSMS에서 수락되지 않았음을 알리는 것: _보류_ 상태. +
**2.** CSMS에 특정 구성 정보를 검색하거나 설정하는 방법을 제공하는 것. +
**3.** CSMS가 예를 들어 CSMS 재부팅 후 CSMS의 부하를 제한할 수 있는 방법을 제공합니다.
|4 |설명 |이 사용 사례는 CSMS가 _Pending_ 상태를 사용하여 아직 수락되지 않았다고 충전소에 알렸을 때 CSMS와 충전소의 동작을 설명합니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** 충전소에 전원이 켜졌습니다. +
**2.** 충전소가 <<boot_notification_request,BootNotificationRequest>>를 CSMS로 보냅니다. +
**3.** CSMS가 <<boot_notification_response,BootNotificationResponse>>를 _Pending_ 상태로 응답합니다. +
**4.** 그런 다음 CSMS가 충전소에 메시지를 보내 충전소의 구성을 변경할 수 있습니다. +
**5.** 충전소는 간격 필드에 표시된 초 수 후에 <<boot_notification_request,BootNotificationRequest>>를 다시 전송합니다. (<<boot_notification_response,BootNotificationResponse>>부터의 간격)
|5 |필수 조건(들) ​​
|**1.** CSMS는 충전소를 _보류_ 상태로 설정해야 합니다. +
**2.** 충전소가 시작됩니다(즉, 전원이 꺼진 후 전원이 켜짐).
|6 |사후 조건(들) ​​
|**성공 사후 조건:** +
충전소가 _보류_ 상태입니다.

**실패 사후 조건:** +
충전소가 _거부됨_ 상태, <<cold_boot_charging_station_rejected,B03 - 콜드 부트 충전소 - 거부됨>>을 수신했습니다.
|===

.시퀀스 다이어그램: 콜드 부트 충전 스테이션 - 보류 중
image::part2/images/figure_11.svg[시퀀스 다이어그램: 콜드 부트 충전 스테이션 - 보류 중]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리
|**1.** CSMS와 충전 스테이션 간에 초기 연결이 설정되지 않은 경우: CSMS에 연결을 다시 시도하고 <<boot_notification_request,BootNotificationRequest>>를 다시 보냅니다. +
**2.** CSMS에서 응답 없음/시간 초과: 충전 스테이션은 대기 간격 후에 <<boot_notification_request,BootNotificationRequest>>를 다시 보냅니다. 이 대기 간격은 이전 <<boot_notification_response,BootNotificationResponse>>의 간격을 기반으로 하거나 충전 스테이션 자체에서 선택할 수 있습니다. 후자의 경우, 충전소는 CSMS에 요청이 범람하는 것을 방지하는 방식으로 이 간격을 선택합니다.
|8 |주의 |CSMS가 <<boot_notification_response,BootNotificationResponse>>를 _Accepted_ 상태로 반환하면 <<cold_boot_charging_station,B01 - Cold Boot Charging Station>>이 적용됩니다.
|===

==== B02 - Cold Boot Charging Station - Pending - Requirements

.B02 - 요구 사항
[cols="^.^2,<.^6,<.^6,<.^4",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의 |참고

|B02.FR.01 |충전소가 _보류_ 상태를 수신한 후.
|CSMS는 충전소에서 정보를 검색하기 위해 메시지를 보내거나(사용 사례 B06, B07, B08에서 설명한 대로) <<set_variables_request,SetVariablesRequest>>를 통해 구성을 변경할 수 있습니다(사용 사례 B05에서 설명한 대로). 충전소는 이러한 메시지에 응답해야 합니다.
|보류 상태는 CSMS가 충전소를 수락하기 전에 충전소에서 특정 정보를 검색하거나 설정하려고 한다는 것을 나타낼 수 있습니다.
|B02.FR.02 |CSMS가 아직 <<boot_notification_request,BootNotificationRequest>>에 <<boot_notification_response,BootNotificationResponse>>에서 _Accepted_ 상태로 응답하지 않은 경우.
|충전소는 CSMS가 다음 메시지 중 하나를 사용하여 그렇게 하도록 지시하지 않는 한 CSMS에 RPC Framework: CALL 메시지(<<boot_notification_request,BootNotificationRequest>> 제외)를 보내서는 안 됩니다. <<trigger_message_request,TriggerMessageRequest>>, <<get_base_report_reuqest,GetBaseReportRequest>>, <<get_report_request,GetReportRequest>>. |{nbsp}
|B02.FR.03 |CSMS가 아직 <<boot_notification_request,BootNotificationRequest>>에 <<boot_notification_response,BootNotificationResponse>>에서 _Accepted_ 상태를 나타내는 응답을 하지 않은 경우.
|충전소 운영자는 충전소를 구성하여 거래를 수락하고 CSMS로 보낼 <<transaction_event_response,TransactionEventRequest>> 메시지를 대기열에 넣을 수 있습니다.
|이 동작을 구현하려는 당사자는 해당 거래가 CSMS에 전달될 수 있는지 여부가 불확실하다는 것을 알아야 합니다.
|B02.FR.04 |CSMS가 아직 <<boot_notification_response,BootNotificationResponse>>에서 _Accepted_ 상태를 나타내는 <<boot_notification_request,BootNotificationRequest>>에 응답하지 않은 경우.
|충전소는 <<trigger_message_request,TriggerMessageRequest>>로 요청하지 않는 한 <<boot_notification_response,BootNotificationResponse>>의 Interval 필드 값보다 일찍 <<boot_notification_request,BootNotificationRequest>>를 보내서는 안 됩니다. |{nbsp}
|B02.FR.05 |_Pending_ 상태이고 <<request_start_transaction_request,RequestStartTransactionRequest>> 또는 <<request_stop_transaction_request,RequestStopTransactionRequest>>를 수신하는 경우
|충전소는 <<request_start_transaction_response,RequestStartTransactionResponse>> 또는 <<request_stop_transaction_response,RequestStopTransactionResponse>>로 _거부됨_ 상태로 응답해야 합니다. (충전소가 거래를 시작할 수 있도록 허용된 경우에도 B02.FR.03 참조. CSMS가 RequestStartTransaction 등을 사용하려면 먼저 충전소를 수락해야 함) |{nbsp}
|B02.FR.06 |CSMS가 보류 상태를 반환하는 경우
|통신 채널은 충전소나 CSMS에 의해 닫히지 않아야 함 |{nbsp}
|B02.FR.07 |<<boot_notification_response,BootNotificationResponse>>의 간격이 0이고 상태가 _Accepted_가 아닌 경우
|충전소는 CSMS에 요청이 범람하지 않도록 자체적으로 대기 간격을 선택해야 함. |{nbsp}
|B02.FR.08 |<<boot_notification_response,BootNotificationResponse>>의 간격이 0보다 크고 상태가 _Accepted_가 아닌 경우,
|충전소는 설정된 간격이 지난 후 <<boot_notification_request,BootNotificationRequest>>를 보내야 합니다. |{nbsp}
|B02.FR.09 |충전소에서 <<boot_notification_response,BootNotificationResponse>>를 수신했으며 상태는 _Pending_입니다. +
그리고 +
충전소에서 RPC 프레임워크: CALL 메시지를 전송하는데, 이 메시지는 <<boot_notification_request,BootNotificationRequest>>가 아니고 다음 메시지 중 하나에 의해 트리거된 메시지도 아닙니다. +
<<trigger_message_request,TriggerMessageRequest>>, <<get_base_report_reuqest,GetBaseReportRequest>>, <<get_report_request,GetReportRequest>>.
|CSMS는 RPC 프레임워크로 응답해야 합니다. +
CALLERROR: SecurityError.
|충전소는 수락되기 전에 다른 메시지를 보내는 것을 시작할 수 없습니다.
|===

<<<

[[cold_boot_charging_station_rejected]]
=== B03 - Cold Boot Charging Station - Rejected

.B03 - 콜드 부트 충전 스테이션 - 거부됨
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |콜드 부트 충전 스테이션 - 거부됨
|2 |ID |B03
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|{nbsp} d|_부모 사용 사례_ |<<cold_boot_charging_station,B01 - 콜드 부트 충전 스테이션>>
|3 |목표 |충전 스테이션에 CSMS에서 아직 수락되지 않았다는 사실을 알리는 것: _거부됨_ 상태.
|4 |설명 |이 사용 사례는 CSMS와 충전소의 동작을 설명하는데, 충전소가 CSMS로부터 _거부됨_ 상태를 사용하여 (아직) 수락되지 않았다는 통보를 받을 때입니다.
|{nbsp} |_행위자_ |충전소, CSMS
|{nbsp} |_시나리오 설명_
|**1.** 충전소에 전원이 공급됩니다. +
**2.** 충전소가 <<boot_notification_request,BootNotificationRequest>>를 CSMS로 보냅니다. +
**3** CSMS가 <<boot_notification_response,BootNotificationResponse>>를 충전소에 _거부됨_ 상태로 응답합니다. +
**4.** 충전소는 간격 필드에 표시된 초 후에 <<boot_notification_request,BootNotificationRequest>>를 다시 보냅니다. (<<boot_notification_response,BootNotificationResponse>>부터의 간격).
|5 |필수 조건(들)
|**1.** CSMS는 충전소를 _거부됨_ 상태로 설정해야 합니다. +
**2.** 충전소의 전원이 꺼졌습니다.
|6 |사후 조건(들) |충전소는 _거부됨_ 상태를 유지합니다.
|===

.시퀀스 다이어그램: 콜드 부트 충전소 - 거부됨
image::part2/images/figure_12.svg[시퀀스 다이어그램: 콜드 부트 충전소 - 거부됨]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |CSMS에서 응답이 없거나 시간 초과가 발생하는 경우: 충전소는 대기 간격 후에 <<boot_notification_request,BootNotificationRequest>>를 다시 보냅니다. 이 대기 간격은 이전 <<boot_notification_response,BootNotificationResponse>>의 간격을 기반으로 하거나 충전소 자체에서 선택할 수 있습니다. 후자의 경우 충전소는 CSMS에 요청이 넘쳐나는 것을 방지하는 방식으로 이 간격을 선택합니다.
|8 |참고 |_거부됨_ 상태 동안 충전소는 더 이상 CSMS에서 도달할 수 없습니다. 충전소는 예를 들어 통신 채널을 닫거나 통신 하드웨어를 종료할 수 있습니다.
+
또한 CSMS는 예를 들어 시스템 리소스를 확보하기 위해 통신 채널을 닫을 수 있습니다.

충전소의 BootNotification이 CSMS에서 수락될 때까지 어떠한 거래도 수락하지 않는 것이 좋습니다. 참조: <<transactions_before_being_accepted_by_a_csms, CSMS에서 수락하기 전의 거래>>

CSMS가 <<boot_notification_response,BootNotificationResponse>>와 수락됨 상태를 반환하면 <<cold_boot_charging_station,B01 - 콜드 부트 충전 스테이션>>이 적용됩니다.
|===

==== B03 - Cold Boot Charging Station - Rejected - Requirements

.B03 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B03.FR.01 |충전소가 <<transactions_before_being_accepted_by_a_csms,Transactions before being accepted by a CSMS>>를 허용하도록 구성된 경우
|충전소는 로컬에서 승인된 거래를 허용할 수 있습니다.
|B03.FR.02 |CSMS가 _거부됨_ 상태를 반환하는 경우. 예를 들어 충전소가 블랙리스트에 있는 경우.
|충전소는 재시도 간격이 만료될 때까지 CSMS에 OCPP 메시지를 보내서는 안 됩니다.
|B03.FR.03 |CSMS가 충전소에서 <<boot_notification_request,BootNotificationRequest>>를 거부한 경우
|CSMS는 어떠한 메시지도 시작해서는 안 됩니다.
|B03.FR.04 |B03.FR.03 |충전소는 다음 <<boot_notification_request,BootNotificationRequest>>를 보내야 할 때까지 연결을 닫을 수 있습니다.
|B03.FR.05 |<<boot_notification_response,BootNotificationResponse>>의 간격이 0이고 상태가 _Accepted_가 아닌 경우
|충전소는 CSMS에 요청이 범람하지 않도록 자체적으로 대기 간격을 선택해야 합니다.
|B03.FR.06 |<<boot_notification_response,BootNotificationResponse>>의 간격이 0보다 크고 상태가 _Accepted_가 아닌 경우
|충전소는 설정된 간격이 지난 후 <<boot_notification_request,BootNotificationRequest>>를 보내야 합니다.
|B03.FR.07 |B03.FR.03 +
AND +
충전소에서 <<boot_notification_request,BootNotificationRequest>>가 아닌 메시지를 보냅니다.
|CSMS는 RPC 프레임워크로 응답해야 합니다: CALLERROR: SecurityError.
|B03.FR.08 |B03.FR.03 +
AND +
CSMS에서 충전소에서 <<boot_notification_request,BootNotificationRequest>>에 대한 응답이 아닌 메시지를 보냅니다.
|충전소에서 RPC 프레임워크로 응답해야 합니다: CALLERROR: SecurityError.
|===

<<<

[[b04_offline_behavior_idle_charging_station]]
=== B04 - Offline Behavior Idle Charging Station

.B04 - 오프라인 동작 유휴 충전소
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |오프라인 동작 유휴 충전소
|2 |ID |B04
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |충전소의 독립 실행형 작동을 달성합니다.
|4 |설명 |이 사용 사례는 통신이 불가능한 경우 충전소가 독립 실행형으로 작동하도록 설계되었음을 설명합니다. 이 상황에서 충전소는 _오프라인_이라고 합니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** CSMS 또는 통신을 사용할 수 없습니다. +
**2.** 충전소는 단독으로 작동합니다. +
**3.** 연결이 복구되었습니다. +
**4.** _오프라인_ 기간이 <<offline_threshold,OfflineThreshold>> 구성 변수의 값을 초과하는 경우: 충전소는 각 커넥터에 대해 <<status_notification_request,StatusNotificationRequest>>를 CSMS로 보냅니다. 그렇지 않으면 오프라인 기간 동안 상태가 변경된 커넥터에 대해서만 <<status_notification_request,StatusNotificationRequest>>를 보냅니다. +
**5.** 충전소는 <<heartbeat_request,HeartbeatRequest>>를 CSMS로 보냅니다. +
**6.** CSMS는 <<heartbeat_response,HeartbeatResponse>>로 응답합니다.
|5 |필수 조건 |BootNotification이 이전에 수락되었고 충전소가 단독으로 작동할 수 있습니다.
|6 |사후 조건 |_Offline_ 동작 기간 후 연결이 복구되면 CSMS는 충전소와 EVSE의 상태를 알게 됩니다.
|===

.시퀀스 다이어그램: 오프라인 동작 유휴 충전소
image::part2/images/figure_13.svg[시퀀스 다이어그램: 오프라인 동작 유휴 충전소]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |오프라인 상황은 충전소가 연결을 다시 설정하려고 시도하여 처리해야 하는 선호되지 않는 작동 모드입니다.
|8 |비고 |해당 없음
|===

==== B04 - Offline Behavior Idle Charging Station - Requirements

.B04 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B04.FR.01 |_오프라인_이 되고 +
_오프라인_ 기간이 <<오프라인_임계값,오프라인임계값>> 구성 변수의 값을 초과한 후.
|충전소는 <<상태_알림_요청,상태알림요청>>을 보내 모든 커넥터의 현재 상태를 보고해야 합니다.
|B04.FR.02 |_오프라인_이 되고 _오프라인_ 기간이 <<오프라인_임계값,오프라인임계값>> 구성 변수의 값을 초과하지 않은 후.
|충전소는 <<status_notification_request,StatusNotificationRequest>>를 보내서 상태 변경이 발생한 커넥터의 현재 상태만 보고해야 합니다.
|===

:sectnums:
=== Configuring a Charging Station

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |충전소 구성을 관리하려면 장치 모델 개념에 대한 기본적인 이해가 필수적입니다. 이러한 개념은 "OCPP 2.0.1: 1부 - 아키텍처 및 토폴로지", 4장에서 설명합니다.
|===

:sectnums!:
=== B05 - Set Variables

.B05 - 변수 설정
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |변수 설정
|2 |ID |B05
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS가 충전소의 변수를 변경할 수 있는 기능을 제공합니다.
|4 |설명 |충전소에는 CSMS가 구성/변경할 수 있는 많은 변수가 있을 수 있습니다. CSMS는 이러한 변수를 사용하여 예를 들어 충전소의 동작에 영향을 미칠 수 있습니다. 이 사용 사례는 CSMS가 충전소에 구성 요소의 변수 값을 설정하도록 요청하는 방법을 설명합니다. CSMS는 요청당 두 개 이상의 값을 설정하도록 요청할 수 있습니다.
|{nbsp} d|_Actors_ |CSMS, 충전소
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS를 트리거하여 충전소에서 하나 이상의 변수를 설정하도록 요청합니다. +
**2.** CSMS가 충전소에 <<set_variables_request,SetVariablesRequest>>를 보냅니다. +
**3.** 충전소는 <<set_variables_response,SetVariablesResponse>>로 응답하여 변경을 실행할 수 있었는지 여부를 나타냅니다.
|5 |필수 조건 |해당 없음
|6 |사후 조건
|**성공한 사후 조건:** +
**1.** 변경이 _성공적으로_ 실행되었습니다. +
**실패한 사후 조건:** +
**1.** 변수는 지원되지만 설정을 변경할 수 없으며 충전소는 _거부됨_ 상태로 응답합니다. +
**2.** 변수는 _지원되지 않습니다_, 충전소는 _UnknownVariable_ 상태로 응답합니다.
|===

.시퀀스 다이어그램: 변수 설정
image::part2/images/figure_14.svg[시퀀스 다이어그램: 변수 설정]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |n/a
|8 |참고 사항
|속성 유형 Actual은 변수의 실제 값에 해당하는 반면 속성 유형 Target, MinSet 및 MaxSet은 이 변수에 설정된 대상, 최소 및 최대 값에 해당합니다.

이는 예를 들어 가장 잘 설명할 수 있습니다. 냉각 시스템은 1000~5000rpm 사이의 팬 속도로 작동하도록 구성되어 있습니다. 이러한 경계는 MinSet 및 MaxSet 속성으로 표현됩니다. 현재 팬 속도는 실제 속성으로 표현됩니다. 원하는 팬 속도는 목표 속성으로 표현됩니다.
|===

==== B05 - Set Variables - Requirements

.B05 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B05.FR.01 |충전소가 X개의 <<set_variables_data_type,SetVariableData>> 요소가 있는 <<set_variables_request,SetVariablesRequest>>를 수신할 때
|충전소는 <<set_variables_response,SetVariablesResponse>>로 응답해야 하며, <<set_variables_request,SetVariablesRequest>>의 모든 <<set_variable_data_type,SetVariableData>> 요소에 대해 동일한(X)개의 <<set_variables_result_type,SetVariableResult>> 요소가 있어야 합니다.
|B05.FR.02 |B05.FR.01 |<<set_variables_response,SetVariablesResponse>>의 모든 <<set_variable_result_type,SetVariableResult>> 요소에는 <<set_variables_request,SetVariablesRequest>>의 <<set_variable_data_type,SetVariableData>> 요소 중 하나와 동일한 구성 요소와 변수 조합이 포함되어야 합니다.
|B05.FR.03 |B05.FR.02 +
AND +
<<set_variables_request,SetVariablesRequest>>에 _attributeType_이 포함된 경우
| <<set_variables_response,SetVariablesResponse>>의 해당 <<set_variable_result_type,SetVariableResult>> 요소에도 동일한 _attributeType_이 포함되어야 합니다.
|B05.FR.04 | 충전소가 <<set_variables_request,SetVariablesRequest>>를 수신하고 <<set_variable_data_type,SetVariableData>>에 알 수 없는 <<component_type,Component>>가 포함된 경우
| 충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,UnknownComponent>>로 설정해야 합니다.
|B05.FR.05 |충전소가 <<set_variables_request,SetVariablesRequest>>를 수신할 때, <<component_type,Component>>에 대해 알려지지 않은 변수가 <<set_variable_data_type,SetVariableData>>에 있는 경우
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,UnknownVariable>>로 설정해야 합니다.
|B05.FR.06 |충전소가 <<set_variables_request,SetVariablesRequest>>를 수신하고 <<attribute_enum_type,attributeType>>이 <<set_variable_data_type,SetVariableData>>의 주어진 <<variable_type,Variable>>에 대해 알려지지 않은 경우
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,NotSupportedAttributeType>>으로 설정해야 합니다.
|B05.FR.07 |충전소가 <<set_variables_request,SetVariablesRequest>>를 수신하고 <<set_variable_data_type,SetVariableData>>의 주어진 <<variable_type,Variable>>에 대해 잘못 포맷된 _value_를 포함하는 경우
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Rejected>>로 설정해야 합니다. (자세한 내용은 선택 사항인 _statusInfo_ 요소에서 제공할 수 있습니다.)
|B05.FR.08 |충전소가 <<set_variables_request,SetVariablesRequest>>를 수신하고 _value_가 <<set_variable_data_type,SetVariableData>>의 주어진 <<variable_type,Variable>>의 범위보다 낮거나 높을 때
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Rejected>>로 설정해야 합니다. (자세한 정보는 선택 사항인 _statusInfo_ 요소에서 제공할 수 있습니다.)
|B05.FR.09 |NOT (B05.FR.04 to B05.FR.08) AND +
충전소가 <<set_variables_request,SetVariablesRequest>>를 <<set_variable_data_type,SetVariableData>>의 <<variable_type,Variable>>에 대해 수신했지만 설정할 수 없는 경우
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Rejected>>로 설정해야 합니다. +
(변수가 _ReadOnly_인 경우 발생하지만, 기술적 문제로 인해 변수 설정이 실패할 때도 발생할 수 있습니다.)
|B05.FR.10 |충전소가 <<set_variable_data_type,SetVariableData>>에서 주어진 _value_를 설정할 수 있는 경우
|충전소는 해당 <<set_variable_result_type,SetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Accepted>>로 설정해야 합니다.
|B05.FR.11 |{nbsp}
|CSMS는 <<items_per_message_set_variables,`ItemsPerMessageSetVariables`>>를 통해 충전소에서 보고한 것보다 더 많은 <<set_variable_data_type,SetVariableData>> 요소를 <<set_variables_request,SetVariablesRequest>>에 보내서는 안 됩니다.
|B05.FR.12 |충전소가 _attributeType_ 없이 <<set_variables_request,SetVariablesRequest>>를 수신하는 경우.
|<<set_variables_response,SetVariablesResponse>>의 해당 <<set_variable_result_type,SetVariableResult>> 요소에는 _attributeType_ Actual이 포함되어야 합니다.
|B05.FR.13 |{nbsp}
|CSMS는 동일한 <<component_type,Component>>, <<variable_type,Variable>> 및 _AttributeType_ 조합을 사용하여 단일 <<set_variable_data_type,SetVariableData>> 요소를 여러 개 포함해서는 안 됩니다. 생략된 _AttributeType_은 _Actual_ 값으로 간주됩니다.
|===

<<<

=== B06 - Get Variables

.B06 - 변수 가져오기
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |변수 가져오기
|2 |ID |B06
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS에 하나 이상의 구성 요소의 하나 이상의 변수에 대한 속성 값을 검색할 수 있는 기능을 제공합니다.
|4 |설명 |이 사용 사례는 CSMS가 충전소에 하나 이상의 구성 요소의 하나 이상의 변수에 대한 속성 값을 보내도록 요청하는 방법을 설명합니다. 한 번의 호출로 모든 변수의 모든 속성을 가져오는 것은 불가능합니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS를 트리거하여 충전소에서 여러 변수를 요청합니다. +
**2.** CSMS가 <<get_variables_request,GetVariablesRequest>>와 요청된 변수 목록을 사용하여 충전소에 여러 변수를 요청합니다. +
**3.** 충전소가 <<get_variabels_response,GetVariablesResponse>>와 함께 요청된 변수로 응답합니다. +
**4.** CSMS가 CSO에 선택적 알림을 보냅니다.
|5 |필수 조건 |해당 없음
|6 |사후 조건
|**성공한 사후 조건:** +
충전소가 요청된 모든 변수를 보낼 수 있었습니다. +
**실패한 사후 조건:** +
충전소가 요청된 모든 변수를 보낼 수 없었습니다.
|===

.시퀀스 다이어그램: 변수 가져오기
image::part2/images/figure_15.svg[시퀀스 다이어그램: 변수 가져오기]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |n/a
|8 |주의 |n/a
|===

==== B06 - Get Variables - Requirements

.B06 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B06.FR.01 |충전소가 X개의 <<get_variables_data_type,GetVariableData>> 요소가 포함된 <<get_variables_request,GetVariablesRequest>>를 수신할 때
|충전소는 <<get_variables_response,GetVariablesResponse>>로 응답해야 하며, X개의 <<get_variable_result_type,GetVariableResult>> 요소가 동일해야 하며, <<get_variables_request,GetVariablesRequest>>의 모든 <<get_variable_data_type,GetVariableData>> 요소에 대해 하나씩 응답해야 합니다.
|B06.FR.02 |B06.FR.01 |<<get_variables_response,GetVariablesResponse>>의 모든 <<get_variable_result_type,GetVariableResult>> 요소는 <<get_variables_request,GetVariablesRequest>>의 <<get_variable_data_type,GetVariableData>> 요소 중 하나와 동일한 _component_ 및 _variable_ 조합을 포함해야 합니다.
|B06.FR.03 |B06.FR.02 +
AND +
<<get_variables_request,GetVariablesRequest>>에 _attributeType_이 포함된 경우
| <<get_variables_response,GetVariablesResponse>>의 해당 <<get_variable_result_type,GetVariableResult>> 요소에도 동일한 _attributeType_이 포함되어야 합니다.
|B06.FR.04 |B06.FR.01 | <<get_variables_response,GetVariablesResponse>>의 모든 <<get_variable_result_type,GetVariableResult>> 요소에는 <<get_variables_request,GetVariablesRequest>>의 요청된 _attributeType_의 속성 값이 있는 _attributeValue_가 포함되어야 합니다.
|B06.FR.05 |{nbsp}
|CSMS는 충전소에서 <<items_per_message_get_variables,`ItemsPerMessageGetVariables`>>를 통해 보고한 것보다 더 많은 GetVariableData 요소를 <<get_variables_request,GetVariablesRequest>>에 보내서는 안 됩니다.
|B06.FR.06 |충전소가 <<get_variable_data_type,GetVariableData>>에 알 수 없는 <<component_type,Component>>가 포함된 <<get_variables_request,GetVariablesRequest>>를 수신하는 경우
|충전소는 해당 <<get_variable_result_type,GetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,UnknownComponent>>로 설정하고 _attributeValue_를 생략해야 합니다.
|B06.FR.07 |충전소가 <<get_variables_request,GetVariablesRequest>>를 수신하고 <<component_type,Component>>에 대해 알려지지 않은 <<get_variable_data_type,GetVariableData>>

에 있는 <<get_variables_request,GetVariablesRequest>>를 수신하는 경우 |충전소는 해당 <<get_variable_result_type,GetVariableResult>>의 _attributeStatus_ 필드를 UnknownVariable로 설정하고 _attributeValue_를 생략해야 합니다.
|B06.FR.08 |충전소가 <<get_variables_request,GetVariablesRequest>>를 수신하고 <<attribute_enum_type,attributeType>>이 <<get_variable_data_type,GetVariableData>>의 주어진 <<variable_type,Variable>>에 대해 알려지지 않은 경우
|충전소는 해당 <<get_variable_result_type,GetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,NotSupportedAttributeType>>으로 설정하고 _attributeValue_를 생략해야 합니다.
|B06.FR.09 |충전소가 <<get_variables_request,GetVariablesRequest>>를 수신하면 <<get_variable_data_type,GetVariableData>>의 <<variable_type,Variable>>이 _WriteOnly_인 경우
|충전소는 해당 <<get_variable_result_type,GetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Rejected>>로 설정해야 합니다.
|B06.FR.10 |충전소가 <<get_variables_request,GetVariablesRequest>>에서 요청한 _value_를 가져올 수 있는 경우
|충전소는 해당 <<get_variable_result_type,GetVariableResult>>의 _attributeStatus_ 필드를 <<set_variable_status_enum_type,Accepted>>로 설정하고 _attributeValue_를 찾은 값으로 설정해야 합니다.
|B06.FR.11 |충전소가 _attributeType_ 없이 <<get_variables_request,GetVariablesRequest>>를 수신하는 경우.
|<<get_variabels_response,GetVariablesResponse>>의 해당 <<get_variable_result_type,GetVariableResult>> 요소에는 _attributeType_ Actual이 포함되어야 합니다.
|B06.FR.13 |NOT B06.FR.08 +
AND +
충전소에 요청된 구성 요소 변수의 _attributeType_에 대한 _attributeValue_가 없습니다.
|충전소는 _attributeValue_로 빈 문자열을 반환해야 합니다. +
참고: 예를 들어 _attributeType_ `Target`이 지원되더라도 아직 설정되지 않은 경우 발생할 수 있습니다.
|B06.FR.14 |B06.FR.01 AND +
_instance_에 대한 값이 <<get_variable_data_type,GetVariableData>>의 _component_ 및/또는 _variable_에 제공됩니다.
|충전소는 <<get_variable_result_type,GetVariableResult>>에서 해당 구성 요소 및/또는 변수의 지정된 인스턴스를 반환해야 합니다.
|B06.FR.15 |B06.FR.01 AND +
<<get_variable_data_type,GetVariableData>>의 _component_ 및/또는 _variable_에 대한 _instance_에 값이 제공되지 않거나 빈 문자열이 제공되지 않음 AND +
_instance_가 없는 구성 요소 및/또는 변수가 존재하지 않음
|충전소는 <<get_variable_data_type,GetVariableResult>> 항목에서 <<get_variable_data_type,GetVariableData>>에 대한 _attributeStatus_ `UnknownComponent` 또는 `UnknownVariable`을 반환해야 합니다.
|B06.FR.16 |충전소가 <<items_per_message_get_variables,`ItemsPerMessageGetVariables`>>에서 허용하는 것보다 더 많은 <<get_variable_data_type,GetVariableData>> 요소가 포함된 <<get_variables_request,GetVariablesRequest>>를 수신합니다.
|충전소는 CALLERROR(OccurenceConstraintViolation)로 응답할 수 있습니다.
|B06.FR.17 |충전소가 <<bytes_per_message_get_variables,`BytesPerMessageGetVariables`>>에서 허용하는 것보다 더 많은 바이트 길이의 <<get_variables_request,GetVariablesRequest>>를 수신합니다.
|충전소는 CALLERROR(FormatViolation)로 응답할 수 있습니다.
|===

<<<

=== B07 - Get Base Report

.B07 - 기본 보고서 가져오기
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |기본 보고서 가져오기
|2 |ID |B07
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS가 <<report_base_enum_type,ReportBase>>에 정의된 대로 미리 정의된 보고서를 요청할 수 있도록 합니다.
|4 |설명 |이 사용 사례는 CSMS가 충전소에 <<report_base_enum_type,ReportBase>>에 정의된 대로 미리 정의된 보고서를 보내도록 요청하는 방법을 설명합니다. 결과는 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지에서 비동기적으로 반환됩니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS를 트리거하여 충전소에 보고서를 요청합니다. +
**2.** CSMS가 <<get_base_report_reuqest,GetBaseReportRequest>>로 충전소에 보고서를 요청합니다. +
**3.** 충전소가 <<get_base_report_response,GetBaseReportResponse>>로 응답합니다.
**4.** 충전소가 비동기적으로 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지로 결과를 보냅니다. +
**5.** CSMS가 <<notify_report_request,NotifyReportRequest>>마다 <<notify_report_response,NotifyReportResponse>>로 응답합니다.
|5 |필수 조건 |해당 없음
|6 |사후 조건
|**성공한 사후 조건:** +
충전소에서 요청한 보고서를 보낼 수 있었습니다.

**실패한 사후 조건:** +
충전소에서 요청한 보고서를 보낼 수 _없었습니다_.
|===

.시퀀스 다이어그램: 기본 보고서 가져오기
image::part2/images/figure_16.svg[시퀀스 다이어그램: 기본 보고서 가져오기]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |해당 없음
|8 |비고 |해당 없음
|===

==== B07 - Get Base Report - Requirements

.B07 - 요구 사항
[cols="^.^2,<.^6,<.^6,<.^4",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의 |참고

|B07.FR.01 |충전소가 지원되는 _reportBase_ +에 대한 <<get_base_report_reuqest,getBaseReportRequest>>를 수신하고
B07.FR.13이 아닌 경우
|충전소는 `Accepted`와 함께 <<get_base_report_response,getBaseReportResponse>>를 보내야 합니다. |{nbsp}
|B07.FR.02 |충전소가 지원되지 않는 _reportBase_에 대한 <<get_base_report_reuqest,getBaseReportRequest>>를 수신하는 경우
|충전소는 `NotSupported`로 <<get_base_report_response,getBaseReportResponse>>를 보내야 합니다. |{nbsp}
|B07.FR.03 |B07.FR.01 |충전소는 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지를 통해 요청된 정보를 CSMS로 보내야 합니다. |{nbsp}
|B07.FR.04 |B07.FR.01 +
AND +
<<get_base_report_reuqest,getBaseReportRequest>>에는 _requestId_가 포함되어 있습니다.
|이 <<get_base_report_reuqest,getBaseReportRequest>>에 대한 모든 <<notify_report_request,NotifyReportRequest>> 전송에는 동일한 _requestId_가 포함되어야 합니다. |{nbsp}
|B07.FR.05 |B07.FR.02 |충전소는 CSMS에 <<notify_report_request,NotifyReportRequest>>를 보내서는 안 됩니다. |{nbsp}
|B07.FR.07 |B07.FR.01 및 +
_reportBase_가 <<report_base_enum_type,ConfigurationInventory>>인 경우
|그러면 충전소는 <<notify_report_request,NotifyReportRequest>>로 응답하여 운영자가 설정할 수 있는 모든 구성 요소 변수(_VariableCharacteristics_ 포함)를 보고해야 합니다. | {nbsp}
|B07.FR.08 |B07.FR.01 및 +
_reportBase_가 <<report_base_enum_type,FullInventory>>인 경우
|그러면 충전소는 <<notify_report_request,NotifyReportRequest>>로 응답하여 모든 구성 요소 변수(_VariableCharacteristics_ 포함)를 보고해야 합니다.
최소한 <<충전_인프라_관련, 충전 인프라 관련>>에 언급된 필수 변수는 보고되어야 하며, 구현된 각 기능 블록과 관련된 <<컨트롤러_구성 요소, 섹션 1 컨트롤러 구성 요소>>에 있는 필수 변수도 보고되어야 합니다.
|B07.FR.09 |B07.FR.01 AND +
_reportBase_가 <<report_base_enum_type,SummaryInventory>>인 경우
|그러면 충전소는 <<notify_report_request,NotifyReportRequest>>로 응답하여 충전소의 가용성 및 상태와 관련된 구성 요소 및 변수, 특히 충전소, EVSE 및 커넥터의 운영 상태와 오류 상태를 보고해야 합니다.
|충전소의 현재 충전 가용성과 기존 문제 상태와 관련된 구성 요소/변수를 나열하는 (요약) 보고서입니다.

충전소 구성 요소의 경우: +
- 가용성 상태. +
각 EVSE 구성 요소의 경우: +
- 가용성 상태. +
각 커넥터 구성 요소의 경우: +
- 가용성 상태(알려져 있고 EVSE와 다른 경우). +
비정상 상태의 모든 구성 요소의 경우: +
- 활성(문제, 트립, 과부하, 폴백) 변수. +
- 구성 요소의 다른 진단 관련 변수.
|B07.FR.10 |{nbsp} |<<notify_report_request,NotifyReportRequest>>의 seqNo 필드에 포함된 시퀀스 번호는 보고서당 증가합니다. 따라서 첫 번째 보고서 부분을 포함하는 <<notify_report_request,NotifyReportRequest>> 메시지는 값이 _0_인 seqNo를 가져야 합니다. |{nbsp}
|B07.FR.11 |B07.FR.08 |충전소에서 지원하는 변수의 모든 속성 유형은 값이 없더라도(설정되지 않은 경우에도) 보고되어야 합니다.
|이를 통해 CSMS는 충전소에서 지원하는 속성 유형을 알 수 있습니다.
|B07.FR.12 |{nbsp} |충전소는 최소한 기본 보고서인 <<report_base_enum_type,ConfigurationInventory>> 및 <<report_base_enum_type,FullInventory>>를 지원해야 합니다. |{nbsp}
|B07.FR.13 |충전소가 일시적으로 보고서 요청을 실행할 수 없는 경우
|충전소는 `Rejected`와 함께 <<get_base_report_response,getBaseReportResponse>>를 보내야 합니다. |{nbsp}
|B07.FR.14 |충전소가 처음으로 CSMS에 연결되거나 CSMS가 충전소의 기기 모델이 변경되었을 것으로 의심할 때마다(예: 펌웨어 업데이트 또는 하드웨어 변경 후)
|CSMS는 _reportBase_ = `FullInventory`로 <<get_base_report_reuqest,GetBaseReportRequest>>를 요청하여 모든 기기 모델 구성 요소와 변수의 전체 목록을 검색해야 합니다.
|고정된 기기 모델이 변경되지 않는 알려진 충전소 세트를 기반으로 하는 구현이 있을 수 있으므로 의무화되지 않습니다.
|===

==== B08 - Get Custom Report

.B08 - 사용자 정의 보고서 가져오기
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |사용자 정의 보고서 가져오기
|2 |ID |B08
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS에 ComponentCriteria 및/또는 ComponentVariables 목록과 일치하는 모든 구성 요소 및 변수에 대한 보고서를 요청할 수 있는 기능을 제공합니다.
|4 |설명 |이 사용 사례는 CSMS가 충전소에 ComponentCriteria 및/또는 ComponentVariables 목록과 일치하는 모든 구성 요소 및 변수에 대한 보고서를 보내도록 요청하는 방법을 설명합니다. 결과는 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지로 비동기적으로 반환됩니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS를 트리거하여 충전소에 보고서를 요청합니다. +
**2.** CSMS가 <<get_report_request,GetReportRequest>>로 충전소에 보고서를 요청합니다. +
**3.** 충전소가 <<get_report_response,GetReportResponse>>로 응답합니다. +
**4.** 충전소가 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지로 비동기적으로 결과를 보냅니다. +
**5.** CSMS가 NotifyReportResponse로 응답합니다.
|5 |필수 조건 |해당 없음
|6 |사후 조건
|**성공한 사후 조건:** +
충전소에서 요청한 보고서를 보낼 수 있었습니다.

**실패한 사후 조건:** +
충전소에서 요청한 보고서를 보낼 수 _없었습니다_.
|===

.시퀀스 다이어그램: 사용자 지정 보고서 가져오기
image::part2/images/figure_17.svg[시퀀스 다이어그램: 사용자 지정 보고서 가져오기]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |해당 없음
|8 |비고 |해당 없음
|===

==== B08 - Get Custom Report - Requirements

.B08 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B08.FR.01 |NOT B08.FR.15 AND +
충전소가 지원되는 _기준_에 대한 <<get_report_request,getReportRequest>>를 수신하는 경우
|충전소는 <<generic_device_model_status_enum_type,Accepted>>와 함께 <<get_report_response,getReportResponse>>를 보내야 합니다.
|B08.FR.02 |충전소가 지원되지 않는 _기준_에 대한 <<get_report_request,getReportRequest>>를 수신하는 경우
|충전소는 <<get_report_response,getReportResponse>>와 함께 <<generic_device_model_status_enum_type,NotSupported>>
|B08.FR.03 |B08.FR.01 |충전소는 요청된 정보를 하나 이상의 <<notify_report_request,NotifyReportRequest>> 메시지를 통해 CSMS로 전송해야 합니다.
|B08.FR.04 |B08.FR.01 및 +
<<get_report_request,getReportRequest>>에는 _requestId_가 포함되어 있습니다.
|이 <<get_report_request,getReportRequest>>에 대해 전송된 모든 <<notify_report_request,NotifyReportRequest>>에는 동일한 _requestId_가 포함되어야 합니다.
|B08.FR.05 |B08.FR.01 및 +
_componentCriteria_와 _componentVariables_가 모두 비어 있지 않습니다.
|이 <<get_report_request,getReportRequest>>에 대해 전송된 모든 <<notify_report_request,NotifyReportRequest>>는 _componentCriteria_ 및 _componentVariables_ 집합으로 제한되어야 합니다.
|B08.FR.06 |{nbsp} |한 <<get_report_request,getReportRequest>> 메시지에서 _componentVariables_의 최대 수는 <<items_per_message_get_report,`ItemsPerMessageGetReport`>> 구성 변수에서 제공됩니다.
|B08.FR.07 |B08.FR.01 AND +
_ComponentCriteria_에는 다음이 포함됩니다. _Active_
|충전소는 변수 _Active_가 _true_로 설정된 모든 구성 요소 또는 <<notify_report_request,NotifyReportRequest>>에서 _Active_ 변수가 없는 모든 구성 요소를 보고해야 합니다.
|B08.FR.08 |B08.FR.01 +
AND +
_ComponentCriteria_에는 다음이 포함됩니다. _Available_
|충전소는 변수 _Available_이 _true_로 설정된 모든 구성 요소 또는 _Available_ 변수가 없는 모든 구성 요소를 <<notify_report_request,NotifyReportRequest>>에 보고해야 합니다.
|B08.FR.09 |B08.FR.01 AND +
_ComponentCriteria_에는 다음이 포함됩니다. _Enabled_
|충전소는 변수 _Enabled_가 _true_로 설정된 모든 구성 요소 또는 _Enabled_ 변수가 없는 모든 구성 요소를 <<notify_report_request,NotifyReportRequest>>에 보고해야 합니다.
|B08.FR.10 |B08.FR.01 AND +
_ComponentCriteria_에는 다음이 포함됩니다. _Problem_
|충전소는 <<notify_report_request,NotifyReportRequest>>에서 변수 _Problem_이 _true_로 설정된 모든 구성 요소를 보고해야 합니다.
|B08.FR.11 |B08.FR.01 AND +
_componentCriteria_가 없고 AND +
_componentVariables_가 비어 있지 않습니다.
|이 getReportRequest에 대해 전송된 모든 <<notify_report_request,NotifyReportRequest>>는 _componentVariables_의 집합으로 제한됩니다.
|B08.FR.12 |B08.FR.01 |<<notify_report_request,NotifyReportRequest>>에서 보고된 변수는 _variableCharacteristics_를 포함해야 합니다.
|B08.FR.13 |B08.FR.01 AND +
두 개 이상의 _componentCriteria_가 제공됩니다.
|충전소는 제공된 기준 중 하나 이상을 갖는 모든 구성 요소를 보고해야 합니다(논리적 OR).
|B08.FR.14 |{nbsp} |<<notify_report_request,NotifyReportRequest>>의 seqNo 필드에 포함된 시퀀스 번호는 보고서마다 증가합니다. 따라서 첫 번째 보고서 부분을 포함하는 <<notify_report_request,NotifyReportRequest>> 메시지는 값이 _0_인 seqNo를 가져야 합니다.
|B08.FR.15 |충전소가 기준 조합으로 <<get_report_request,GetReportRequest>>를 수신하여 빈 결과 집합이 생성되는 경우.
|충전소는 <<get_report_response,GetReportResponse>>(_status_=`EmptyResultSet`)로 응답해야 합니다.
|B08.FR.16 |충전소가 일시적으로 보고서 요청을 실행할 수 없는 경우
|충전소는 `Rejected`로 <<get_base_report_response,getBaseReportResponse>>를 보내야 합니다.
|B08.FR.17 |충전소가 <<items_per_message_get_report,`ItemsPerMessageGetReport`>>에서 허용하는 것보다 더 많은 ComponentVariableType 요소가 포함된 <<get_report_request,GetReportRequest>>를 수신합니다.
|충전소는 CALLERROR(OccurenceConstraintViolation)로 응답할 수 있습니다.
|B08.FR.18 |충전소가 <<bytes_per_message_get_report,`BytesPerMessageGetReport`>>에서 허용하는 것보다 더 많은 바이트 길이의 <<get_report_request,GetReportRequest>>를 수신합니다.
|충전소는 CALLERROR(FormatViolation)로 응답할 수 있습니다.
|B08.FR.20 |충전소가 _variable_이 누락된 _componentVariable_ 요소가 포함된 <<get_report_request,GetReportRequest>>를 수신하는 경우
|충전소는 _componentVariable_의 _component_의 모든 _변수_에 대해 보고해야 합니다.
|B08.FR.21 |충전소가 _componentVariable_ 요소가 있는 <<get_report_request,GetReportRequest>>를 수신하고 _변수_는 있지만 _인스턴스_가 없는 경우
|충전소는 _componentVariable_의 _component_의 _변수_의 모든 인스턴스에 대해 보고해야 합니다.
|B08.FR.22 |B08.FR.11 AND +
충전소가 _component.evse.id_가 있는 _componentVariable_ 요소에 _component_가 포함된 <<get_report_request,GetReportRequest>>를 수신하지만 _component.evse.connector_가 없는 경우
|충전소는 모든 _component.evse.connector_에 대해 이 _component.name_, _component.instance_ 및 _component.evse.id_가 있는 구성 요소를 보고해야 하며, 이때 B08.FR.24를 고려해야 합니다.
|B08.FR.23 |B08.FR.11 AND +
충전소가 _component.evse.id_가 없는 _componentVariable_ 요소에 _component_가 포함된 <<get_report_request,GetReportRequest>>를 수신하는 경우
|충전소는 _component.evse_ 필드(_component.evse_가 없는 최상위 구성 요소 포함)에 대해 이 _component.name_, _component.instance_가 있는 구성 요소를 보고해야 하며, B08.FR.24를 고려해야 합니다.
|B08.FR.24 |B08.FR.11 AND +
충전소가 _component.instance_에 대한 값이 있는 _componentVariable_ 요소에 _component_가 포함된 <<get_report_request,GetReportRequest>>를 수신하는 경우
|충전소는 B08.FR.22, B08.FR.23을 고려하면서 모든 _component.instance_ 필드에 대해 이 _component.name_이 포함된 구성 요소를 보고해야 합니다.
|B08.FR.25 |B08.FR.11 AND +
충전소가 _component.instance_ 필드가 없는 _componentVariable_ 요소에 _component_가 포함된 <<get_report_request,GetReportRequest>>를 수신하는 경우
|충전소는 모든 _component.instance_ 필드에 대해 이 _component.name_이 있는 구성 요소 또는 _component.instance_ 필드가 없는 구성 요소를 보고해야 하며, B08.FR.22, B08.FR.23을 고려합니다.
|===

<<<

[[setting_a_new_networkconnectionprofile]]
=== B09 - Setting a new NetworkConnectionProfile

.B09 - 새 NetworkConnectionProfile 설정
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |새 NetworkConnectionProfile 설정.
|2 |ID |B09
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS가 충전소의 연결 세부 정보를 업데이트할 수 있도록 합니다.
|4 |설명 |CSMS가 충전소의 연결 세부 정보를 업데이트합니다. 예를 들어 새 CSMS로 마이그레이션을 준비할 때입니다. 이 사용 사례를 완료한 후 충전소에서 CSMS로의 연결 데이터가 업데이트되었습니다.
|{nbsp} d|_Actors_ |충전소, CSMS
|{nbsp} d|_시나리오 설명_ |충전소는 숫자로 식별되는 최소 두 개의 네트워크 구성 슬롯을 지원합니다. 사용 가능한 슬롯 번호는 충전소에서 변수 <<network_configuration_priority,NetworkConfigurationPriority>>의 _valuesList_에 보고합니다. +
예를 들어: 기본 보고서의 valuesList "0,1,2"는 CSMS에 0, 1, 2로 번호가 매겨진 세 개의 구성 슬롯을 사용할 수 있음을 알려줍니다(반드시 설정되지는 않음). +
활성 연결에 사용되는 구성 슬롯 번호는 변수 OCPPCommCtrlr.ActiveNetworkProfile에 의해 보고됩니다.

**1.** CSMS는 업데이트된 연결 프로필과 <<network_configuration_priority,NetworkConfigurationPriority>>의 _valuesList_에서 _configurationSlot_을 포함하는 <<set_network_profile_request,SetNetworkProfileRequest>> PDU를 보냅니다. +
**2.** 충전소는 PDU를 수신하고, 콘텐츠를 검증하고, 새 데이터를 저장합니다. +
**3.** 충전소는 <<set_network_profile_response,SetNetworkProfileResponse>> PDU를 보내 응답합니다. 상태는 _Accepted_
|5 |필수 조건 |CSMS에서 제공한 데이터가 충전소의 기능과 일치합니다.
|6 |사후 조건 |충전소가 새 연결 데이터를 저장할 수 있었습니다.
|===

.시퀀스 다이어그램: 네트워크 연결 프로필 설정
image::part2/images/figure_18.svg[시퀀스 다이어그램: 네트워크 연결 프로필 설정]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|8 |오류 처리 |새 NetworkConnectionProfile의 활성화는 <<migrate_to_new_csms,B10 - 마이그레이션에 설명되어 있습니다. 새 CSMS로>>. 이 사용 사례 중 오류는 현재 데이터 연결에 파괴적이지 않습니다. 오류 처리에 대한 자세한 설명은 <<migrate_to_new_csms,B10 - 새 CSMS로 마이그레이션>>
|9 |주의 |현재 활성화된 NetworkConnectionProfile에 변경 사항이 적용되더라도 <<migrate_to_new_csms,B10 - 새 CSMS로 마이그레이션>>에서 설명한 대로 재부팅이 발생할 때까지는 활성화되지 않습니다.
|===

==== B09 - Setting a new NetworkConnectionProfile - Requirements

.B09 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B09.FR.01 |<<set_network_profile_request,SetNetworkProfileRequest>>를 수신하면 |충전소는 콘텐츠를 검증하고, 새 데이터를 저장하고, 성공하면 <<set_network_profile_response,SetNetworkProfileResponse>> 메시지를 보내 응답해야 합니다. 메시지의 상태는 _Accepted_입니다.
|B09.FR.02 |<<set_network_profile_request,SetNetworkProfileRequest>>를 수신하면 |충전소는 콘텐츠를 검증해야 합니다. 콘텐츠가 유효하지 않은 경우 충전소는 <<set_network_profile_response,SetNetworkProfileResponse>> 메시지를 보내서 응답해야 하며, 상태는 _Rejected_
|B09.FR.03 |새로운 네트워크 프로필 설정이 실패하는 경우입니다. |충전소는 <<set_network_profile_response,SetNetworkProfileResponse>> 메시지를 보내서 응답해야 합니다. 상태는 _Failed_
|B09.FR.04 | <<set_network_profile_request,SetNetworkProfileRequest>>를 수신하고 +
<<network_connection_profile_type,NetworkConnectionProfile>>에 구성 변수 <<security_profile,SecurityProfile>>에 저장된 것보다 낮은 securityProfile이 포함되어 있는 경우
|충전소는 <<set_network_profile_response,SetNetworkProfileResponse>> 메시지를 보내서 응답해야 합니다. 상태는 _Rejected_
|B09.FR.05 | <<set_network_profile_request,SetNetworkProfileRequest>>의 _configurationSlot_ 값이 <<network_configuration_priority,NetworkConfigurationPriority>>의 valuesList에 있는 항목과 일치하지 않는 경우
|충전소는 <<set_network_profile_response,SetNetworkProfileResponse>> 메시지를 _Rejected_ 상태로 보내 응답
|B09.FR.06 |{nbsp} |충전소는 네트워크 연결 프로필에 대해 최소 두 개의 구성 슬롯을 지원해야 합니다.
|===

<<<

[[migrate_to_new_csms]]
==== B10 - Migrate to new CSMS

.B10 - 새 CSMS로 마이그레이션
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |다른 NetworkConnectionProfile을 사용하여 새 CSMS로 마이그레이션합니다.
|2 |ID |B10
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |이 사용 사례를 완료한 후 충전소는 새 CSMS에 연결합니다.
|4 |설명 |이 사용 사례는 <<network_configuration_priority,`NetworkConfigurationPriority`>>에서 <<network_connection_profile_type,NetworkConnectionProfiles>>의 순서를 변경하여 충전소에 새 CSMS에 연결하도록 지시하는 방법을 설명합니다.
|{nbsp} d|_Actors_ |충전소, CSMS 1, CSMS 2
|{nbsp} d|_시나리오 설명_ |충전소는 숫자로 식별되는 최소 두 개의 네트워크 구성 슬롯을 지원합니다. 사용 가능한 슬롯 번호는 충전소에서 변수 <<network_configuration_priority,NetworkConfigurationPriority>>의 _valuesList_에 보고합니다. +
예를 들어: 기본 보고서의 _valuesList_ = "0,1,2"는 CSMS에 0, 1, 2로 번호가 매겨진 세 개의 구성 슬롯을 사용할 수 있음을 알려줍니다(하지만 반드시 설정되지는 않음). +
<<network_configuration_priority,NetworkConfigurationPriority>>의 _value_는 네트워크 구성이 연결을 시도하는 순서를 보고합니다. +
예를 들어: 값 "1,0"은 충전소가 먼저 구성 슬롯 1을 시도하고 <<network_profile_connection_attempts,NetworkProfileConnectionAttempts>>에 구성된 시도 횟수 이후에 실패하면 구성 슬롯 0에 연결을 시도한다는 것을 의미합니다.

**1.** CSMS 1은 <<set_variables_request,SetVariablesRequest>>를 통해 <<network_configuration_priority,`NetworkConfigurationPriority`>> 구성 변수에 대한 새 값을 설정하여 CSMS 2의 NetworkConnectionProfile이 목록에서 첫 번째가 되고 CSMS 1에 대한 기존 연결이 목록에서 두 번째가 되도록 합니다. +
**2.** 충전소는 _Accepted_ 상태의 SetVariablesResponse로 응답합니다. +
**3.** CSMS 1은 충전소에 `OnIdle` 재설정을 수행하도록 지시합니다. +
**4.** 충전소가 재부팅되고 새로운 기본 NetworkConnectionProfile을 통해 CSMS 2에 연결됩니다.
|5 |필수 조건 |사용 사례 <<setting_a_new_networkconnectionprofile,B09 - 새 NetworkConnectionProfile 설정>>이 이 사용 사례 이전에 성공적으로 실행되었습니다. +
CSMS에서 제공한 데이터가 충전소의 기능과 일치합니다.
|6 |사후 조건 |충전소가 다른 <<network_connection_profile_type,NetworkConnectionProfiles>>를 통해 연결됩니다.
|===

.시퀀스 다이어그램: 새 ConnectionProfile로 마이그레이션
image::part2/images/figure_19.svg[시퀀스 다이어그램: 새 ConnectionProfile로 마이그레이션]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |n/a
|8 |주의 |<<reset_with_ongoing_transaction,B12 - Reset - With Ongoing Transaction>>과 마찬가지로 진행 중인 트랜잭션이 있는 경우 충전소는 이러한 트랜잭션이 완료될 때까지 기다렸다가 Reset을 수행한 다음 다른 CSMS에 연결합니다. +
운영자가 즉시 전환을 수행하려면 먼저 트랜잭션을 중지해야 합니다.
|===

[[migrate_to_new_network_connection_profile_requirements]]
==== B10 - Migrate to new NetworkConnectionProfile - Requirements

.B10 - 요구 사항
[cols="^.^2,<.^6,<.^6,<.^4",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의 |참고

|B10.FR.01 |구성 변수 <<network_configuration_priority,`NetworkConfigurationPriority`>>를 포함하는 <<set_variables_request,SetVariablesRequest>>를 수신하고 메시지의 NetworkProfile 슬롯에 모두 유효한 구성이 포함된 경우 |{nbsp}
충전소는 <<set_variables_response,SetVariablesResponse>>를 _Accepted_ 또는 _RebootRequired_ 상태로 전송해야 합니다. |{nbsp}
|B10.FR.02 |<<set_variables_request,SetVariablesRequest>>를 수신하고 구성 변수 <<network_configuration_priority,`NetworkConfigurationPriority`>>를 포함하고 메시지의 NetworkProfile 슬롯 중 하나에 유효한 구성이 없는 경우
|충전소는 <<set_variables_response,SetVariablesResponse>>를 _Rejected_ 상태로 전송해야 합니다.
|선택적 요소 _statusInfo_를 사용하여 추가 정보를 제공할 수 있습니다.
|B10.FR.03 |B10.FR.04 그리고 +
연결에 실패하는 경우
|충전소는 <<network_configuration_priority,`NetworkConfigurationPriority`>>의 항목당 <<network_profile_connection_attempts,`NetworkProfileConnectionAttempts`>>에 구성된 횟수만큼 시도해야 합니다. |{nbsp}
|B10.FR.04 |B10.FR.01 또는 B09.FR.01 및 +
재부팅 후
|충전소는 <<network_configuration_priority,`NetworkConfigurationPriority`>>의 첫 번째 항목에 연결을 시작해야 합니다. |{nbsp}
|B10.FR.05 |{nbsp}
|충전소를 작동 불능으로 설정하는 것이 좋습니다(<<change_availability_request,ChangeAvailabilityRequest>>를 통해). 이렇게 하면 새 거래를 시작할 수 없고, <<reset_request,ResetRequest>>를 보내기 전에 충전소의 거래 메시지 대기열이 비어 있을 때까지 기다릴 수 있습니다. 그렇지 않으면 충전소가 거래 시작을 받지 못한 새 CSMS에 거래 관련 메시지를 보낼 수 있으며, 이전 시스템은 종료된 메시지를 놓치게 됩니다. 대기열에 진행 중인 거래에 대한 거래가 아직 있는지 확인하려면 <<get_transaction_status_request,getTransactionStatusRequest>> 메시지를 사용할 수 있습니다. |{nbsp}
|B10.FR.06 |{nbsp}
|충전소는 새 CSMS에 연결을 시도하기 전에 이전 CSMS에서 연결을 끊어야 합니다.
|{nbsp}
|B10.FR.07 |B10.FR.03 AND +
<<network_configuration_priority,`NetworkConfigurationPriority`>>의 모든 항목에 대한 <<network_profile_connection_attempts,`NetworkProfileConnectionAttempts`>>가 모두 실패했습니다.
|충전소는 폴백하여 마지막으로 성공적으로 연결한 <<network_connection_profile_type,NetworkConnectionProfile>>에 '다시 연결'을 시작해야 합니다.
|이 요구 사항에서 '재연결'은 섹션 5.3에서 설명한 재연결 메커니즘을 말합니다. "4부 - WebSockets를 통한 JSON 구현 가이드"의 재연결.
|===

:sectnums:
=== Resetting a Charging Station

:sectnums!:
[[reset_without_ongoing_transaction]]
=== B11 - Reset - Without Ongoing Transaction

.B11 - 재설정 - 진행 중인 거래 없음
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |재설정 - 진행 중인 거래 없음
|2 |ID |B11
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS가 진행 중인 거래가 없는 동안 충전소에 자체 또는 EVSE를 재설정하도록 요청할 수 있도록 합니다.
|4 |설명 |이 사용 사례는 CSMS가 <<reset_request,ResetRequest>>를 보내 충전소에 자체 또는 EVSE를 재설정하도록 요청하는 방법을 다룹니다. (<<reset_request,ResetRequest>>에 선택적 매개변수 _evseId_가 포함된 경우 특정 EVSE의 재설정만 요청됩니다.) 예를 들어 충전소가 제대로 작동하지 않는 경우 필요할 수 있습니다.
|{nbsp} d|_Actors_ |충전소, CSMS, CSO
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS에 충전소 또는 EVSE를 재설정하도록 요청합니다. +
**2.** CSMS가 <<reset_request,ResetRequest>>를 보내 충전소가 자체 또는 EVSE를 재설정하도록 요청합니다. +
**3.** CSMS가 OnIdle 또는 Immediate 재설정을 요청합니다. +
**4.** 충전소가 ResetResponse로 응답하여 충전소가 자체 또는 EVSE를 재설정할 수 있는지 여부를 +
나타냅니다. +
**5.** CSMS가 CSO에 선택적 알림을 보냅니다. +
**6.** evseId가 제공되지 않은 경우에만 재설정 후 충전소는 사용 사례 B01과 같이 진행됩니다.
|{nbsp} d|_대체 시나리오_ |<<reset_with_ongoing_transaction,B12 - 진행 중인 트랜잭션으로 재설정>>
|5 |필수 조건 |진행 중인 트랜잭션이 없습니다.
|6 |사후 조건
|**성공적인 사후 조건:** +
충전소가 자체 또는 EVSE를 재설정할 수 있었습니다.

**실패 사후 조건:** +
충전소가 자체 또는 EVSE를 재설정할 수 _없었습니다_.
|===

.시퀀스 다이어그램: 트랜잭션 없이 재설정
image::part2/images/figure_20.svg[시퀀스 다이어그램: 트랜잭션 없이 재설정]

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |n.a
|8 |주의 |지속적인 상태: 예를 들어 EVSE가 _사용 불가_로 설정된 경우 지속되어야 합니다.

충전소는 <<reset_response,ResetResponse>>로 응답합니다.
|===

==== B11 - Reset - Without Ongoing Transaction - Requirements

.B11 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B11.FR.01 |충전소가 <<reset_request,ResetRequest>>를 수신할 때.
|충전소는 <<reset_response,ResetResponse>>로 응답해야 합니다.
|B11.FR.02 |CSMS에서 상태가 _Inoperative_로 설정된 경우.
|충전소를 재부팅한 후 EVSE는 재부팅 전과 마찬가지로 _Unavailable_ 상태로 돌아가야 합니다.
|B11.FR.03 |B11.FR.01 +
AND _evseId_ 매개변수가 제공되지 않음 +
AND +
<<reset_response,ResetResponse>>가 _Accepted_되었습니다.
|충전소는 StatusNotification(Unavailable)을 보낼 수 있으며 재부팅을 시작해야 합니다.
|B11.FR.04 |B11.FR.03 |충전소는 사용 사례 <<cold_boot_charging_station,B01 - Cold Boot Charging Station>>에 설명된 대로 진행해야 합니다.
|B11.FR.05 |EVSE의 상태가 _Reserved_인 경우.
|충전소 재부팅 또는 EVSE 재설정 후 EVSE는 _Reserved_ 상태로 돌아가야 합니다.
|B11.FR.06 |B11.FR.01 +
AND +
예를 들어 중단할 수 없는 펌웨어 업데이트가 진행 중입니다.
|충전소는 _거부됨_ 상태로 응답해야 합니다.
|B11.FR.07 |B11.FR.01 +
및 +
충전소는 지금 재설정을 수행할 수 없지만 나중에 재설정을 예약했습니다.
|충전소는 _예약됨_ 상태로 응답해야 합니다.
|B11.FR.08 |B11.FR.01 +
및 _evseId_ 매개변수가 제공됩니다. +
및 +
<<reset_response,ResetResponse>>가 _수락됨_이었습니다.
|충전소는 EVSE에 대한 StatusNotification(사용 불가능)을 보낼 수 있으며 _evseId_ 매개변수로 참조되는 EVSE 재설정을 시작해야 합니다.
|B11.FR.09 |B11.FR.01 +
AND _evseId_ 매개변수가 제공됨 +
AND +
충전소가 개별 EVSE 재설정을 지원하지 않음
|충전소는 <<reset_response,ResetResponse>> _Rejected_를 반환해야 함
|B11.FR.10 |충전소가 개별 EVSE 재설정을 지원하는 경우
|충전소는 EVSE에 대해 장치 모델 변수 <<allow_reset,AllowReset>>을 true로 설정해야 함
|===

<<<

[[reset_with_ongoing_transaction]]
=== B12 - Reset - With Ongoing Transaction

.B12 - 재설정 - 진행 중인 트랜잭션
[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|번호 |유형 |설명

|1 |이름 |재설정 - 진행 중인 트랜잭션
|2 |ID |B12
|{nbsp} d|_기능 블록_ |B. 프로비저닝
|3 |목표 |CSMS가 진행 중인 트랜잭션이 있는 동안 충전소에 자체 또는 EVSE를 재설정하도록 요청할 수 있도록 합니다.
|4 |설명 |이 사용 사례는 CSMS가 <<reset_request,ResetRequest>>를 보내 충전소에 자체 또는 EVSE를 재설정하도록 요청하는 방법을 다룹니다. (<<reset_request,ResetRequest>>에 선택적 매개변수 evseId가 포함된 경우 특정 EVSE의 재설정만 요청됩니다.) 예를 들어 충전소가 제대로 작동하지 않는 경우 필요할 수 있습니다. CSMS는 충전소가 모든 거래를 스스로 종료하고 재부팅하거나 모든 진행 중인 거래가 정상적으로 종료될 때까지(EV 사용자가) 기다린 다음 재부팅할 수 있습니다.
|{nbsp} d|_Actors_ |충전소, CSMS, CSO
|{nbsp} d|_시나리오 설명_
|**1.** CSO가 CSMS에 충전소 또는 EVSE를 재설정하도록 요청합니다. +
**2.** CSMS가 <<reset_request,ResetRequest>>를 보내 충전소가 스스로 또는 EVSE를 재설정하도록 요청합니다. +
**3a.** OnIdle 재설정을 수신하면 충전소는 <<reset_response,ResetResponse(Scheduled)>>로 응답하여 모든 진행 중인 거래가 종료된 후 충전소가 자체 또는 EVSE를 재설정하려고 시도할 것임을 나타냅니다. 충전소는 충전을 계속하고 사용 가능한 모든 EVSE(또는 _evseId_가 제공된 경우 요청에서 제공된 EVSE만)를 상태 _Unavailable_로 설정하고 모든 거래가 완료되고 모든 <<transaction_event_request,TransactionEventRequest>>(<<transaction_event_enum_type,eventType = Ended>>) 메시지가 전송될 때까지 기다립니다. +
**3b.** 즉시 재설정을 수신하면 충전소는 <<reset_response,ResetResponse(Accepted)>>로 응답하여 충전소가 자체 또는 EVSE를 재설정하려고 시도할 것임을 나타냅니다. 충전소는 진행 중인 모든 거래(또는 요청에서 제공된 EVSE에서 ​​실행 중인 거래만, _evseId_가 제공된 경우)를 종료하고 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지를 전송하려고 시도합니다. +
**4.** evseId가 제공되지 않은 경우에만 충전소가 재부팅되고 방금 부팅된 상태로 돌아갑니다. <<cold_boot_charging_station,B01 - Cold Boot Charging Station 적용>>.
|{nbsp} d|_대체 시나리오_ |<<reset_without_ongoing_transaction,B11 - 진행 중인 거래 없이 재설정>>
|5 |필수 조건 |거래가 진행 중입니다.
|6 |사후 조건
|**성공한 사후 조건:** +
충전소가 자체 또는 EVSE를 재설정할 수 있었습니다.

**실패 사후 조건:** +
충전소가 자체 또는 EVSE를 재설정할 수 없습니다.
|===

:figure-caption!: 
.그림 21a: 시퀀스 다이어그램: 진행 중인 트랜잭션으로 OnIdle 재설정
image::part2/images/figure_21a.svg[시퀀스 다이어그램: 진행 중인 트랜잭션으로 OnIdle 재설정]

.그림 21b: 시퀀스 다이어그램: 진행 중인 트랜잭션으로 즉시 재설정
image::part2/images/figure_21b.svg[시퀀스 다이어그램: 진행 중인 트랜잭션으로 즉시 재설정]

:figure-caption: Figure

[cols="^.^1s,<.^2s,<.^7",%autowidth.stretch,frame=all,grid=all]
|===
|7 |오류 처리 |<<reset_request,ResetRequest>>를 수락한 후, CSMS에 전달할 수 없는 <<transaction_event_request,TransactionEventRequest>> 메시지는 반드시 큐에 넣어야 합니다.
|8 |주의 |해당 없음
|===

==== B12 - Reset - With Ongoing Transaction - Requirements

.B12 - 요구 사항
[cols="^.^2,<.^5,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|ID |전제 조건 |요구 사항 정의

|B12.FR.01 |충전소가 <<reset_request,ResetRequest(OnIdle)>>를 수신하고 거래가 진행 중인 경우
|충전소는 <<reset_response,ResetResponse(Scheduled)>>로 응답하여 충전소 또는 EVSE의 모든 거래가 종료된 후 충전소가 자체 또는 EVSE를 재설정할지 여부를 표시해야 합니다.
|B12.FR.02 |충전소가 <<reset_request,ResetRequest(Immediate)>>를 수신하고 거래가 진행 중인 경우
|충전소는 <<reset_response,ResetResponse(Accepted)>>로 응답하여 충전소가 자체 또는 EVSE를 재설정할지 여부를 나타냅니다.
|B12.FR.03 |_evseId_가 제공되지 않은 경우 +
AND +
거래가 진행 중이고 OnIdle 재설정이 수신된 경우.
|충전소의 거래는 <<e06_stop_transaction_options,E06 - Stop Transaction>>과 같이 재부팅 전에 정상적으로 종료되어야 합니다.
|B12.FR.04 |_evseId_가 제공되지 않은 경우 +
AND +
거래가 진행 중이고 Immediate Reset이 수신된 경우.
|충전소는 진행 중인 모든 거래를 종료하고 재부팅을 수행하기 전에 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지를 보내야 합니다.
|B12.FR.05 |_evseId_ 없이 Immediate Reset을 수신하고 <<transaction_event_response,TransactionEventResponse>>가 시간 초과 내에 수신되지 않는 경우.
|충전소는 <<transaction_event_request,TransactionEventRequest>>를 대기열에 넣고 재부팅한 후 <<transaction_event_request,TransactionEventRequest>>를 다시 보내야 합니다.
|B12.FR.06 |CSMS에서 상태가 _Inoperative_로 설정된 경우.
|충전소 재부팅 또는 EVSE 재설정 후 EVSE는 충전소 재부팅 또는 EVSE 재설정 이전과 마찬가지로 _사용 불가_ 상태로 돌아가야 합니다.
|B12.FR.07 |_evseId_가 제공된 경우 +
및 +
EVSE에서 ​​거래가 진행 중이고 OnIdle 재설정이 수신된 경우.
|EVSE의 거래는 <<e06_stop_transaction_options,E06 - Stop Transaction>>과 같이 재설정 전에 정상적으로 종료되어야 합니다.
|B12.FR.08 |_evseId_가 제공된 경우 +
및 +
EVSE에서 ​​거래가 진행 중이고 Immediate Reset이 수신된 경우.
|충전소는 EVSE에서 ​​진행 중인 거래를 종료하고 재설정을 수행하기 전에 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지를 보내야 합니다.
|B12.FR.09 |B12.FR.01 +
그리고 _evseId_ 매개변수가 제공됨 +
그리고 +
충전소는 개별 EVSE 재설정을 지원하지 않음
|충전소는 <<reset_response,ResetResponse>> _Rejected_를 반환해야 합니다.
|===
