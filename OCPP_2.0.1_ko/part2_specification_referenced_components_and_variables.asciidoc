= Referenced Components and Variables
:!chapter-number:

:sectnums:
[[controller_components]]
== Controller Components

이 섹션에서는 OCPP 2.0에 도입된 '컨트롤러' 구성 요소에 대한 개요를 제공합니다. 컨트롤러 구성 요소는 'Ctrlr' 접미사로 인식할 수 있으며 특정 기능의 구성을 담당합니다. 이 문서에서 설명하는 대부분의 <<referenced_components_and_variables,'Referenced' components>>는 '컨트롤러' 구성 요소입니다.

아래 표에는 모든 컨트롤러 구성 요소의 요약이 포함되어 있습니다. 자세한 내용은 2부 - 부록을 참조하세요.


[cols="<.^2,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Controller     |Component Description

|AlignedDataCtrlr |클럭 정렬 미터 데이터 보고와 관련된 구성을 담당합니다.
|AuthCacheCtrlr |충전기 사용 인증을 위한 로컬 캐시 사용과 관련된 구성을 담당합니다.
|AuthCtrlr |충전기 사용 인증 사용과 관련된 구성을 담당합니다.
|CHAdeMOCtrlr |CHAdeMO 컨트롤러와 관련된 구성을 담당합니다.
|ClockCtrlr |충전기에서 시간 추적 관리를 구성하는 수단을 제공합니다.
|CustomizationCtrlr |DataTransfer 메시지와 CustomData 확장을 사용하여 사용자 지정 공급업체별 구현과 관련된 구성을 담당합니다.
|DeviceDataCtrlr |충전기 장치 모델 데이터의 교환 및 저장과 관련된 구성을 담당합니다.
|DisplayMessageCtrlr |충전기 사용자에게 메시지를 표시하는 것과 관련된 구성을 담당합니다.
|ISO15118Ctrlr |ISO 15118 컨트롤러와 관련된 구성을 담당합니다.
|LocalAuthListCtrlr |충전기 사용을 위한 로컬 인증 목록 사용과 관련된 구성을 담당합니다.
|MonitoringCtrlr |모니터링 이벤트 데이터 교환과 관련된 구성을 담당합니다.
|OCPPCommCtrlr |충전기와 CSMS 간의 정보 교환과 관련된 구성을 담당합니다.
|ReservationCtrlr |예약과 관련된 구성을 담당합니다.
|SampledDataCtrlr |샘플링된 미터 데이터 보고와 관련된 구성을 담당합니다.
|SecurityCtrlr |충전기와 CSMS 간의 통신 보안과 관련된 구성을 담당합니다.
|SmartChargingCtrlr |스마트 충전과 관련된 구성을 담당합니다.
|TariffCostCtrlr |요금 및 비용 표시와 관련된 구성을 담당합니다.
|TxCtrlr |트랜잭션 특성 및 동작과 관련된 구성을 담당합니다.
|===

모든 컨트롤러 구성 요소에는 '활성화됨' 변수가 있습니다. 이 변수는 특정 기능을 활성화/비활성화하는 데 사용할 수 있습니다. 충전기의 모든 데이터는 컨트롤러 구성 요소의 일부가 아니므로 기능을 비활성화할 때 충전기에 저장된 관련 데이터는 변경되거나 제거되지 않습니다. +
예를 들어, 활성된 예약이 있을 때 ReservationCtrlr이 비활성화되면 EVSE를 사용할 수 있지만 예약 항목은 여전히 ​​그대로 있습니다. 사용되지 않을 뿐입니다. 나중에 ReservationCtrlr이 다시 활성화되면 예약 항목이 만료되지 않고 진행 중인 거래가 없는 한 예약 항목이 다시 활성화됩니다. 그 사이에 거래가 시작된 경우 해당 거래는 활성 상태로 유지됩니다. 그러면 예약이 만료된 것으로 간주됩니다.

<<<

[[referenced_components_and_variables]]
== Referenced Components and Variables

아래는 이 사양에서 표준화된 역할을 가진 모든 구성 변수 조합의 목록입니다.

이러한 구성 변수는 OCPP 1.x의 구성 키를 대체합니다.

목록은 기능에 따라 나뉩니다. <<general, General>>, <<security_related, Security>>, <<authorization_related,Authorization>>, <<local_authorization_list_management_related, Local Authorization List Management related>>, <<authorization_cache_related, Authorization Cache>>, <<transaction_related, Transaction>>, <<metering_related, Metering>>, <<reservation_related, Reservation>>, <<smart_charging_related, Smart Charging>>, <<tariff_cost_related, Tariff & Cost>>, <<diagnostics_related, Diagnostics>>, <<display_message_related, Display Message>> 및 <<charging_infrastructure_related, Charging Infrastructure related>>.

특정 기능 블록에 언급된 필수 구성 변수는 해당 기능 블록을 지원하는 경우에만 충전기에서 지원해야 합니다.

"Part 1 - Architecture & Topology"의 4장에서 장치 모델의 구성 요소 및 변수 주소 지정에 대해 참조하세요.

이 문서의 모든 구성 변수에 대한 요구 사항:

- 쓰기 가능한 모든 변수는 VariableAttribute 필드 _persistence_ = true를 가져야 하며 따라서 영구적인 방식으로 저장해야 합니다.
- 정의되지 않은 모든 필드는 비워두어야 합니다.
- *(별표)로 표시된 모든 필드는 가능한 모든 값을 가질 수 있습니다.
- AttributeType이 제공되지 않으면 CSMS 및 충전기는 AttributeType이 Actual이라고 가정해야 합니다.

[cols="^.^1s,10",%autowidth.stretch]
|===
|참고 |JSON/Websocket 동작을 제어하는 ​​데 특화된 여러 구성 변수에 대해서는 _'OCPP 2.0 Part 4 - JSON over Websockets implementation guide'_ 를 참조하세요.
|===

[[general]]
=== General

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |WebSocket 관련 변수는 <<ocpp2_0_part4,"OCPP-2.0.1 Part 4 JSON over WebSockets">>에 설명되어 있습니다.
|===

==== `ActiveNetworkProfile`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|ActiveNetworkProfile
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기가 네트워크에 연결할때 사용하는 구성 프로필을 나타냅니다. 이 구성 변수는 NetworkConnectionProfile이 구현될 때만 구현하면 됩니다.
|===

[[allow_new_sessions_pending_firmware_update]]
==== `AllowNewSessionsPendingFirmwareUpdate`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ChargingStation
.3+|Variable |variableName 2+d|AllowNewSessionsPendingFirmwareUpdate
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 펌웨어 업데이트를 위해 모든 EVSE가 Available상태를 기다리고 있을 때 EVSE에 새로운 세션이 시작할 수 없는지를 나타냅니다. +
  펌웨어 업데이트가 설치를 대기하고 있고, 해당 변수가 _true_ 값일때, 충전기는 사용가능한 EVSE들을 Unavailable 상태로 바꿔 업데이트를 보류합니다. 즉 펌웨어 업데이트를 수행하기 위해 충전기의 모든 EVSE가 사용가능할 시점까지 더 많은 시간이 소요될 수 있습니다.
|===

==== `DefaultMessageTimeout`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|MessageTimeout
  |variableInstance 2+d|Default
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|메시지 타임아웃의 목적은 통신 오류나 소프트웨어 오류로 인해 메시지가 도착하지 않았을 때 요청 메시지를 보내지 않은 것으로 간주하고 다른 작업을 계속할 수 있도록 하는 것입니다. 충전기의 메시지 타임아웃 설정은 _NetworkConnectionProfile_ 의 messageTimeout 필드에서 구성할 수 있습니다.
|===

[[file_transfer_protocols]]
==== `FileTransferProtocols`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|FileTransferProtocols
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|지원되는 파일 전송 프로토콜의 목록입니다.

  사용 가능한 값: FTP, FTPS, HTTP, HTTPS, SFTP.
|===

==== `HeartbeatInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|HeartbeatInterval
  |variableAttributes |mutability d|ReadWrite
  .3+|variableCharacteristics |unit d|s
      |dataType d|integer
      |minLimit d|1
|Description 3+d|CSMS와의 OCPP 교환 없는 비활성 간격이후 충전기가 보내야하는 <<heartbeat_request,HeartbeatRequest>>.
|===

[[network_configuration_priority]]
==== `NetworkConfigurationPriority`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|NetworkConfigurationPriority
  .2+|variableAttributes |attributeType d|Actual
    |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|SequenceList
    |valueList d|List of possible values
|Description 3+d|사용 가능한 네트워크 연결 프로필의 우선순위를 쉼표로 구분하여 정렬한 목록입니다. 네트워크 구성 프로필에 사용 가능한 프로필 슬롯 목록은 이 변수의 valueList 특성을 통해 보고되어야 합니다.
|===

[[network_profile_connection_attempts]]
==== `NetworkProfileConnectionAttempts`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|NetworkProfileConnectionAttempts
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기가 다른 프로필로 전환하기 전에 시도하는 연결 횟수를 지정합니다.
|===

[[offline_threshold]]
==== `OfflineThreshold`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|OfflineThreshold
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|충전기의 오프라인 기간이 OfflineThreshold를 초과했다면 충전기가 다시 온라인이 되었을때 자신의 커넥터의 <<status_notification_request,StatusNotificationRequest>>를 보내는것을 권장합니다.
|===

==== `QueueAllMessages`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|QueueAllMessages
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 로 설정되면 충전기는 모든 메시지를 CSMS에 전달될 때까지 대기열에 넣습니다. +
  _false _로 설정되면 충전기는 E04.FR.01 및 기타 요구 사항에서 요구하는 대로 거래 관련 메시지만 대기열에 넣습니다. +
  이 변수가 _true_ 로 설정되고 충전기의 메모리가 부족하면 충전기는 TransactionEvent 메시지를 마지막으로 삭제해야 하며 측정/미터 데이터를 삭제할 때 충전기는 중간 값을 먼저 삭제해야 하며(첫 번째 값, 세 번째 값, 다섯 번째 등) 측정/미터 데이터의 시작 또는 끝에서 값을 삭제하지 않아야 합니다. 기본값 = false
|===

[[message_attempts_transaction_event]]
==== `MessageAttemptsTransactionEvent`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|MessageAttempts
  |variableInstance 2+d|TransactionEvent
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|CSMS가 <<transaction_event_request,TransactionEventRequest>> 메시지 처리를 실패할때 충전기가 얼마나 자주 이것을 전송하는것을 시도 할지에 대한 값입니다.
|===

[[message_attempt_interval_transaction_event]]
==== `MessageAttemptIntervalTransactionEvent`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.6+|Variable |variableName 2+d|MessageAttemptInterval
  |variableInstance 2+d|TransactionEvent
  .2+|variableAttributes |attributeType d|Actual
    |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|CSMS가 <<transaction_event_request,TransactionEventRequest>> 메시지 처리를 실패하였을때 충전기가 메시지를 재전송전 대기하는 기간입니다.
|===

[[unlock_on_ev_side_disconnect]]
==== `UnlockOnEVSideDisconnect`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|UnlockOnEVSideDisconnect
  |variableAttributes |mutability d|ReadWrite/ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면, 충전기는 EV에서 케이블이 분리될 때 충전기 쪽의 케이블을 잠금 해제해야 합니다. 고정 케이블만 있는 EVSE의 경우 가변성은 ReadOnly여야 하고 실제 값은 false여야 합니다. 고정 케이블과 소켓이 있는 충전기의 경우 변수는 소켓에만 적용됩니다.
|===

==== `WebSocketPingInterval`

이 구성 변수는 <<ocpp2_0_part4,"OCPP-2.0.1 Part 4 JSON over WebSockets">>에 설명되어 있습니다..

==== `ResetRetries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|ResetRetries
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기 리셋이 실패했을 때 리셋을 재시도하는 횟수입니다.
|===

==== `MessageFieldLength`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|FieldLength
  |variableInstance 2+d|<message>.<field>
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 변수는 표준 OCPP 메시지 스키마에 정의된 길이보다 <메시지>의 <필드> 길이가 클 경우 해당 길이를 보고하는 데 사용됩니다.
|===

[[items_per_message_get_report]]
==== `ItemsPerMessageGetReport`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|GetReport
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|하나의 <<get_report_request,GetReportRequest>> 또는 <<get_monitoring_report_request,GetMonitoringReportRequest>> 메시지로 전송할 수 있는 ComponentVariable 항목의 최대 수입니다.
|===

[[items_per_message_get_variables]]
==== `ItemsPerMessageGetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|GetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<get_variables_request,GetVariablesRequest>>의 GetVariableData 객체의 최대 개수입니다.
|===

[[bytes_per_message_get_report]]
==== `BytesPerMessageGetReport`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|GetReport
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<get_report_request,GetReportRequest>> 또는 <<get_monitoring_report_request,GetMonitoringReportRequest>> 메시지 크기에 제약을 둡니다.
|===

[[bytes_per_message_get_variables]]
==== `BytesPerMessageGetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|GetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<get_variables_request,GetVariablesRequest>> 메시지 크기에 제약을 둡니다.
|===

[[configuration_value_size]]
==== `ConfigurationValueSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ConfigurationValueSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|1000
|Description 3+d|이 구성 변수는 SetVariableData.attributeValue 및 VariableCharacteristics.valueList 필드를 제한하는 데 사용할 수 있습니다. 이러한 값의 최대 크기는 항상 동일하게 유지됩니다.
|===

[[reporting_value_size]]
==== `ReportingValueSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ReportingValueSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|2500
|Description 3+d|이 구성 변수는 GetVariableResult.attributeValue, VariableAttribute.value 및 EventData.actualValue 필드를 제한하는 데 사용할 수 있습니다. 이러한 값의 최대 크기는 항상 동일하게 유지됩니다.
|===

[[items_per_message_set_variables]]
==== `ItemsPerMessageSetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|SetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<set_variables_request,SetVariablesRequest>>에서 SetVariableData 객체의 최대 개수입니다.
|===

==== `BytesPerMessageSetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|SetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<set_variables_request,SetVariablesRequest>> 메시지 크기에 제약을 둡니다.
|===

==== `DateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|DateTime
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|DateTime
|Description 3+d|현재 날짜와 시간을 포함합니다. 
|===

[[ntp_source]]
==== `NtpSource`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|NtpSource
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valuesList |DHCP, manual
|Description 3+d|NTP 클라이언트가 구현되면 이 변수를 사용하여 클라이언트를 구성할 수 있습니다. DHCP를 통해 제공된 NTP 서버를 사용하거나 수동으로 구성된 NTP 서버를 사용합니다.
|===

[[ntp_server_uri]]
==== `NtpServerUri`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|NtpServerUri
  |variableInstance 2+d|Single digit, multiple servers allowed, primary NtpServer has instance '1', the secondary has instance '2'. etc
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|NTP 클라이언트가 구현되면 이 변수를 사용하여 클라이언트를 구성할 수 있습니다. 여기에는 NTP 서버의 주소가 포함됩니다.

여러 NTP 서버를 구성할 수 있습니다. 이는 백업 NTP 서버가 될 수 있습니다. NTP 클라이언트를 지원하는 경우 동시에 여러 NTP 서버에 연결하여 보다 안정적인 시간 소스를 얻을 수도 있습니다.
|===

[[timeoffset]]
==== `TimeOffset`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|TimeOffset
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|구성된 현재 로컬 시간 오프셋은 "+01:00", "-02:00" 등의 형식으로 제공됩니다.

TimeOffset을 사용하는 경우 <<timezone,`TimeZone`>>을 구현하지 않는 것이 좋습니다. 충전기에 <<timeoffset,`TimeOffset`>>과 <<timezone,`TimeZone`>>을 모두 구현한 경우 두 가지를 동시에 사용하지 않는 것을 권장합니다.

시간 오프셋은 화면표시 목적입니다.
|===

[[next_time_offset_transition_datetime]]
==== `NextTimeOffsetTransitionDateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|NextTimeOffsetTransitionDateTime
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|DateTime
|Description 3+d|다음 시간 오프셋 전환의 날짜 시간. 이 날짜 시간에 EV 운전자에게 표시되는 시계에는 <<time_offset_next_transition,`TimeOffsetNextTransition`>>을 통해 구성된 대로 새 오프셋이 지정됩니다. +
이를 사용하여 일광 절약 시간 기간의 다음 시작 또는 종료를 수동으로 구성할 수 있습니다.
|===

[[time_offset_next_transition]]
==== `TimeOffsetNextTransition`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeOffset
  |variableInstance 2+d|NextTransition
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|다음 로컬 시간 오프셋은 "+01:00", "-02:00" 등의 형식으로 표시됩니다. +
<<next_time_offset_transition_datetime,`NextTimeOffsetTransitionDateTime`>>을 통해 구성된 대로 다음 시간 오프셋 전환에 설정되는 새 오프셋입니다. +
이를 사용하여 일광 절약 시간 기간의 시작 또는 종료에 대한 오프셋을 수동으로 구성할 수 있습니다.
|===

[[timesource]]
==== `TimeSource`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeSource
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|SequenceList
    |valuesList d|List of all implemented time sources. Possible values: Heartbeat, NTP, GPS, RealTimeClock, MobileNetwork, RadioTimeTransmitter
|Description 3+d|이 변수를 통해 충전기는 1개 이상이 구현된 경우 CSMS에 클록 소스를 구성하는 옵션을 제공합니다.

가능한 소스 목록을 제공함으로써 CSO는 대체 소스를 구성할 수 있습니다.

예: +
"NTP,Heartbeat"는 NTP를 사용하지만 NTP 서버 중 어느 것도 응답하지 않으면 Heartbeat를 통한 시간 동기화를 사용한다는 것을 의미합니다.

참고: RadioTimeTransmitter: 전 세계 여러 지역에서 저주파 무선 송신기는 정확한 현지 시간 정보를 제공합니다(예: 독일의 DCF77, 영국의 MSF, 일본의 JJY 등). 이러한 무선 시간 클록은 충전기의 시간 소스로 사용할 수 있습니다. 충전기는 방송된 시간을 UTC로 변환해야 합니다. 이 경우 <<timezone,`TimeZone`>>, <<timeoffset,`TimeOffset`>>, <<next_time_offset_transition_datetime,`NextTimeOffsetTransitionDateTime`>> 및 <<time_offset_next_transition,`TimeOffsetNextTransition`>>을 사용할 수 있습니다.
|===

[[timezone]]
==== TimeZone

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|TimeZone
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|"Europe/Oslo", "Asia/Singapore" 등의 형식으로 구성된 현재 로컬 시간대

시간대를 사용하는 경우 <<timeoffset,`TimeOffset`>>을 구현하지 않는 것이 좋습니다. 충전기에 <<timeoffset,`TimeOffset`>>과 <<timezone,`TimeZone`>>을 모두 구현한 경우 두 가지를 동시에 사용하지 않는 것이 좋습니다.

시간대는 표시 목적으로 사용됩니다.
|===

==== `TimeAdjustmentReportingThreshold`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeAdjustmentReportingThreshold
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|시계 시간이 TimeAdjustmentReportingThreshold 초보다 더 앞이나 뒤로 조정되면 충전기에서 SecurityEventNotification("SettingSystemTime")을 보냅니다. 적절한 값은 20초입니다.
|===

==== `CustomImplementationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|CustomizationCtrlr
.4+|Variable |variableName 2+d|CustomImplementationEnabled
  |variableInstance 2+d|<VendorId>
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 표준 구성 변수는 충전기가 지원하는 사용자 정의 구현을 활성화/비활성화하는 데 사용할 수 있습니다.

{nbsp}

It is recommended to first check if the custom behavior is able to be implemented using the device model, otherwise DataTransfer message(s) and/or CustomData fields can be used.
|===

[[security_related]]
=== Security related

[[basic_auth_password]]
==== `BasicAuthPassword`

기본 인증 암호는 HTTP 기본 인증에 사용됩니다. 구성 값은 쓰기 전용이므로 CSMS가 모든 구성 값을 읽을 때 실수로 일반 텍스트로 저장할 수 없습니다.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|BasicAuthPassword
  |variableAttributes |mutability d|WriteOnly
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|40 (Max length of the BasicAuthPassword)
|Description 3+d|기본 인증 암호는 HTTP 기본 인증에 사용됩니다. 암호는 최소 16자에서 최대 40자(영숫자 문자 및 passwordString에서 허용하는 특수 문자)로 구성된 충분히 높은 엔트로피를 가진 임의로 선택된 passwordString이어야 합니다. 암호는 UTF-8로 인코딩된 문자열로 전송되어야 합니다(옥텟 문자열이나 base64로 인코딩되면 안됨). 이 구성 변수는 CSMS가 모든 구성 변수를 읽을 때 실수로 일반 텍스트로 저장할 수 없습도록 쓰기 전용으로 되어있습니다. 이 구성 변수는 "Security profile 3 -TLS with client side certificates"이 구현되지 않는 한 필수입니다.
|===

==== `Identity`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|Identity
  |variableAttributes |mutability d|ReadOnly or ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|48 (Charging Station Identity)
|Description 3+d|충전기 ID. ID는 <<primitive_datatypes,identifierString>>이지만 이 값은 기본 인증 사용자 이름으로도 사용되므로 콜론 문자 ':'는 사용하면 안 됩니다. +
최대 길이는 <<emi3_b0,[EMI3-BO]>> "Part 2: business objects"의 EVSE ID와의 호환성을 보장하기 위해 선택되었습니다.
|===

==== `OrganizationName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|OrganizationName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|이 구성 변수는 CSO의 조직 이름 또는 CSO가 신뢰하는 조직을 설정하는 데 사용됩니다. 클라이언트 인증서의 주체 필드에 O(_organizationName_) RDN을 설정하는 데 사용됩니다. 또한 A00.FR.509를 참조하세요.
|===

==== `CertificateEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|CertificateEntries
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of Certificates installed at any time.
|Description 3+d|현재 충전기에 설치된 인증서 수입니다.
|===

[[security_profile]]
==== `SecurityProfile`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|SecurityProfile
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 구성 변수는 충전기에서 사용되는 보안 프로필을 보고하는 데 사용됩니다.
|===

[[additional_root_certificate_check]]
==== `AdditionalRootCertificateCheck`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|AdditionalRootCertificateCheck
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면 certificateType <<install_certificate_use_enum_type,CSMSRootCertificate>>의 인증서 하나만(임시 대체 인증서까지) 한 번에 설치할 수 있습니다. 새 CSMS 루트 인증서를 설치할 때 새 인증서는 이전 인증서를 대체해야 하며 새 CSMS 루트 인증서는 대체하는 이전 CSMS 루트 인증서로 서명해야 합니다. +
이 구성 변수는 "security profile 1 - Unsecured Transport with Basic Authentication"이 구현되지 않는 한 필수입니다. 보안 프로필 1은 신뢰할 수 있는 네트워크에서만 사용해야 합니다.

  _참고: 이 추가 보안 메커니즘을 사용할 때는 충전기에서 새 CSMS 루트 인증서를 설치할 때 전체 인증서 체인 검증을 수행해야 한다는 점에 유의하세요. 그러나 이전 CSMS 루트 인증서가 대체 인증서로 설정되면 충전기에서 TLS handshake 중에 서버 인증서를 검증할 때 부분 인증서 체인 검증을 수행해야 합니다. 그렇지 않으면 이전 CSMS 루트(대체) 인증서가 만료되거나 제거될때 검증이 실패합니다._

_참고 2: 변수가 필수라는 문구는 구성 변수가 있어야 하지만 기능을 구현해야 한다는 것을 나타내지는 않습니다. 이것은 선택 사항입니다. 값을 false로 설정하면 충전기에서 이 기능을 지원하지 않는다는 것을 나타내는 반면, true는 기능을 지원한다는 것을 의미합니다._
|===

[[max_certificate_chainsize]]
==== `MaxCertificateChainSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|MaxCertificateChainSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|10000
|Description 3+d|이 구성 변수는 <<certificate_signed_request,CertificateSignedRequest>> PDU에서 'certificateChain' 필드의 크기를 제한하는 데 사용할 수 있습니다. 이 값은 너무 작게 설정해서는 안 됩니다. 이 값이 작을수록 충전기가 지원하는 보안 아키텍처가 줄어듭니다. 최소 5600의 크기를 설정하는 것이 좋습니다. 이렇게 하면 충전기가 대부분의 보안 아키텍처를 지원할 수 있습니다.
|===

[[cert_signing_wait_minimum]]
==== `CertSigningWaitMinimum`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|CertSigningWaitMinimum
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|이 구성 변수는 CSMS가 SignCertificateRequest를 수락하지만 서명된 인증서를 반환하지 않는 경우 충전기가 다른 CSR을 생성하기 전에 기다려야 하는 시간을 정의합니다. 이 값은 시도할 때마다 두 배가 됩니다. 시도 횟수는 <<cert_signing_repeat_times,CertSigningRepeatTimes>>에서 구성됩니다. 인증서 서명 프로세스가 느린 경우 이 설정을 통해 CSMS가 충전기에 더 많은 시간을 허용하라고 알릴 수 있습니다.
|===

[[cert_signing_repeat_times]]
==== `CertSigningRepeatTimes`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|CertSigningRepeatTimes
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 변수는 충전기가 이전 백오프 시간을 두 배로 늘려야 하는 횟수를 구성하는 데 사용할 수 있으며, <<cert_signing_wait_minimum,CertSigningWaitMinimum>>에서 구성된 초 수부터 시작하여 백오프 시간이 CSR에서 생성된 서명된 인증서가 포함된 CertificateSignedRequest를 수신하지 않고 만료될 때마다 시작합니다. 최대 증가 횟수에 도달하면 충전기는 CSMS가 TriggerMessageRequest를 사용하여 요청할 때까지 SignCertificateRequest를 다시 보내는 것을 중지해야 합니다.
|===

[[authorization_related]]
=== Authorization related

[[auth_enabled]]
==== AuthEnabled

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_false_ 로 설정하면 트랜잭션을 시작하기 전이나 idToken을 읽을 때 인증하지 않습니다. idToken이 제공된 경우 TransactionEventRequest의 _idToken_ 필드에 저장됩니다. idToken이 제공되지 않은 경우 TransactionEventRequest의 _idToken_ 은 비어 있고 type은 `NoAuthorization` 으로 설정됩니다.
|===

[[additional_info_items_permessage]]
==== `AdditionalInfoItemsPerMessage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|AdditionalInfoItemsPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|한 메시지에서 보낼 수 있는 AdditionalInfo 항목의 최대 수입니다. 이 구성 변수는 AdditionalInfo가 구현될 때만 구현하면 됩니다.
|===

[[offline_tx_for_unknown_id_enabled]]
==== `OfflineTxForUnknownIdEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|OfflineTxForUnknownIdEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 키가 있으면 충전기는 <<unknown_offline_authorization,Unknown Offline Authorization>>을 지원합니다. 이 키가 _true_ 값일 경우 <<unknown_offline_authorization,Unknown Offline Authorization>>이 활성화됩니다.
|===

[[authorize_remote_start]]
==== `AuthorizeRemoteStart`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|AuthorizeRemoteStart
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|<<request_start_transaction_request,RequestStartTransactionRequest>> 메시지 형태로 트랜잭션을 시작하기 위한 원격 요청시 로컬 트랜잭션 시작 작업처럼 사전에 인증되어야 하는지 여부.
|===

[[local_authorize_offline]]
==== `LocalAuthorizeOffline`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|LocalAuthorizeOffline
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 _offline_ 일 때 현지에서 인증된 식별자에 대한 트랜잭션을 시작할지 여부입니다.
|===

[[local_pre_authorize]]
==== `LocalPreAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|LocalPreAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|온라인일 경우 현지 인증된 식별자에 대해 충전기가 대기하거나 <<authorize_response,AuthorizeResponse>> 를 CSMS에 요청하기 전에 트랜잭션을 시작할지 여부입니다.
|===

[[master_pass_group_id]]
==== `MasterPassGroupId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.4+|Variable |variableName 2+d|MasterPassGroupId
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit |36 (The maximum string length of MasterPassGroupId)
|Description 3+d|이 ID를 그룹 ID로 갖는 ID 토큰은 마스터 패스 그룹에 속합니다. 즉, 진행 중인 모든 트랜잭션을 중단할 수 있지만 트랜잭션을 시작할 수는 없습니다. 예를 들어, 법 집행 기관이 EV를 견인해야 할 때 진행 중인 모든 트랜잭션을 중단하는 데 사용할 수 있습니다.
|===

==== `DisableRemoteAuthorization`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|DisableRemoteAuthorization
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면 충전기가 AuthorizationRequests를 발행하지 않고 Authorization Cache와 Local Authorization List만 사용하여 idTokens의 유효성을 확인하도록 지시합니다.

참고: *AuthCtrlr.DisableRemoteAuthorization* 과 *AuthCacheCtrlr.DisablePostAuthorization* 의 차이점은 후자는 Authorization Cache 또는 Local Authorization List에서 not-Accepted로 표시된 토큰의 재인증만 비활성화하는 반면, *AuthCtrlr.DisableRemoteAuthorization* 은 CSMS를 사용한 모든 인증을 비활성화한다는 것입니다.
|===

[[authorization_cache_related]]
=== Authorization Cache related

[[auth_cache_enabled]]
==== `AuthCacheEnabled`

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |이 변수의 값이 변경되어도 인증 캐시의 내용은 변경되어서는 안 됩니다.
|===

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 _true_ 값일 경우 인증 캐시가 활성화됩니다.
|===

==== `AuthCacheAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable exists and reports a value of _true_, Authorization Cache is supported, but not necessarily enabled.
|===

[[auth_cache_lifetime]]
==== `AuthCacheLifeTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|LifeTime
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Indicates how long it takes until a token expires in the authorization cache since it is last used.
|===

==== `AuthCacheStorage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|Storage
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of bytes
|Description 3+d|Indicates the number of bytes currently used by the <<authorization_cache,Authorization Cache>>. MaxLimit indicates the maximum number of bytes that can be used by the <<authorization_cache,Authorization Cache>>.
|===

==== `AuthCachePolicy`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|Policy
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valuesList d|LRU, LFU, FIFO, CUSTOM
|Description 3+d|Cache Entry Replacement Policy: least recently used, least frequently used, first in first out, other custom mechanism.
|===

==== `AuthCacheDisablePostAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|DisablePostAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|When set to true this variable disables the behavior to request authorization for an idToken that is stored in the cache with a status other than Accepted, as stated in C10.FR.03 and C12.FR.05.
|===

[[local_authorization_list_management_related]]
=== Local Authorization List Management related

[[local_auth_list_enabled]]
==== `LocalAuthListEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable exists and reports a value of _true_, <<local_authorization_list,Local Authorization List>> is enabled.
|===

[[local_auth_list_entries]]
==== `LocalAuthListEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.4+|Variable |variableName 2+d|Entries
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of IdTokens that can be stored in the <<local_authorization_list,Local Authorization List>>.
|Description 3+d|Amount of IdTokens currently in the <<local_authorization_list,Local Authorization List>>. +
  The maxLimit of this variable SHALL be provided to report the maximum number of IdTokens that can be stored in the <<local_authorization_list,Local Authorization List>>.
|===

[[local_auth_list_available]]
==== `LocalAuthListAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable exists and reports a value of _true_, <<local_authorization_list,Local Authorization List>> is supported.
|===

[[items_per_message_send_local_list]]
==== `ItemsPerMessageSendLocalList`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|ItemsPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|===

[[bytes_per_message_send_local_list]]
==== `BytesPerMessageSendLocalList`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|BytesPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|===

==== `LocalAuthListStorage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.4+|Variable |variableName 2+d|Storage
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of bytes
|Description 3+d|Indicates the number of bytes currently used by the <<local_authorization_list,Local Authorization List>>. MaxLimit indicates the maximum number of bytes that can be used by the <<local_authorization_list,Local Authorization List>>.
|===

==== `LocalAuthListDisablePostAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|DisablePostAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|When set to _true_ this variable disables the behavior to request authorization for an idToken that is stored in the local authorization list with a status other than Accepted, as stated in C14.FR.03.
|===

==== `LocalAuthListSupportsExpiryDateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|SupportsExpiryDateTime
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|When set to _true_ Charging Station will disregard idTokens for authorization as if not present in the Local Authorization List when current date/time is past the value of _cacheExpiryDateTime_. +
  Note, that _cacheExpiryDateTime_ does not affect the behavior of SendLocalListRequest or GetLocalListRequest messages.
|===

[[transaction_related]]
=== Transaction related

[[ev_connection_timeout]]
==== `EVConnectionTimeOut`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|EVConnectionTimeOut
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Interval from between "starting" of a transaction until incipient transaction is automatically canceled, due to failure of EV driver to (correctly) insert the charging cable connector(s) into the appropriate socket(s). The Charging Station SHALL go back to the original state, probably: 'Available'. "Starting" might be the swiping of the RFID, pressing a start button, a RequestStartTransactionRequest being received etc.
|===

[[stop_tx_on_ev_side_disconnect]]
==== `StopTxOnEVSideDisconnect`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|StopTxOnEVSideDisconnect
  |variableAttributes |mutability d|ReadWrite or ReadOnly, depending on Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|When set to _true_, the Charging Station SHALL deauthorize the transaction when the cable is unplugged from the EV.
|===

[[tx_before_accepted_enabled]]
==== `TxBeforeAcceptedEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|TxBeforeAcceptedEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|With this configuration variable the Charging Station can be configured to allow charging before having received a <<boot_notification_response,BootNotificationResponse>> with <<registration_status_enum_type,RegistrationStatus>>: Accepted. See: <<transactions_before_being_accepted_by_a_csms,Transactions before being accepted by a CSMS>>.
|===

[[tx_start_point]]
==== `TxStartPoint`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|TxStartPoint
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  .2+|variableCharacteristics |dataType d|MemberList
    |valueList d|See <<tx_start_stop_point_values,TxStartStopPoint values>> for allowed values. It is not required to implement all possible values.
|Description 3+d|Defines when the Charging Station starts a new transaction: first <<transaction_event_request,TransactionEventRequest>>: eventType = Started. +
  When any event in the given list occurs, the Charging Station SHALL start a transaction. +
  The Charging Station SHALL only send the Started event once for every transaction. +
  It is advised to put all events that should be part of a transaction in the list, in case the start event never occurs. Because the possible events don’t always have to come in the same order it is possible to provide a list of events. Which ever comes first will then cause a transaction to be started. For example: EVConnected, Authorized would mean that a transaction is started when an EV is detected (Cable is connected), or when an EV Driver swipes his RFID card en the CSMS successfully authorizes the ID for charging.
|===

[[tx_stop_point]]
==== `TxStopPoint`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|TxStopPoint
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  .2+|variableCharacteristics |dataType d|MemberList
    |valueList d|See <<tx_start_stop_point_values,TxStartStopPoint values>> for allowed values. It is not required to implement all possible values.
|Description 3+d|Defines when the Charging Station ends a transaction: last <<transaction_event_request,TransactionEventRequest>>: eventType = Ended. +
  When any event in the given list is no longer valid, the Charging Station SHALL end the transaction. +
  The Charging Station SHALL only send the Ended event once for every transaction.
|===

[[tx_start_stop_point_values]]
==== TxStartStopPoint values

===== TxStartPoint values

The following table lists the values allowed for the <<tx_start_point,`TxStartPoint`>> variable. These values represent logical steps or events that (may) occur during a charging session. When such an event occurs, and it is listed in in the <<tx_start_point,`TxStartPoint`>> variable, then this marks the start of a transaction.

[cols="<.^3s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Value          |Description

|ParkingBayOccupancy
  |An object (probably an EV) is detected in the parking/charging bay.
|EVConnected
  |Both ends of the Charging Cable have been connected (if this can be detected, else detection of a cable being plugged into the socket), or for wireless charging: initial communication between EVSE and EV is established.
|Authorized
  |Driver or EV has been authorized, this can also be some form of anonymous authorization like a start button.
|PowerPathClosed
  |All preconditions for charging have been met, power can flow. This event is the logical AND of `EVConnected` and `Authorized` and should be used if a transaction is supposed to start when EV is connected and authorized. Despite its name, this event is not related to the state of the power relay. Note: There may be situations where `PowerPathClosed` does not imply that charging starts at that moment, e.g. because of delayed charging or a battery that is too hot.
|EnergyTransfer
  |Energy is being transferred between EV and EVSE.
|DataSigned
  |The moment when the signed meter value is received from the fiscal meter, that is used in the TransactionEventRequest with _context_ = `Transaction.Begin` and _triggerReason_ = `SignedDataReceived`. This TxStartPoint might be applicable when legislation exists that only allows a billable transaction to start when the first signed meter value has been received.
|===

[[tx_stop_point_values]]
===== TxStopPoint values

The following table lists the values allowed for the <<tx_stop_point,`TxStopPoint`>> variable. These values represent logical steps or events that (may) occur during a charging session. When such an event occurs, and it is listed in in the <<tx_stop_point,`TxStopPoint`>> variable, then this marks the end of a transaction.

The values are the same as for <<tx_start_point,`TxStartPoint`>>, but in this case the meaning is different, since it refers to the ending of the event, rather than the start. For use with <<tx_stop_point,`TxStopPoint`>> each value should be interpreted as if it had "Not" prefixed to it. See the following table:

[cols="<.^3s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Value          |Description

|ParkingBayOccupancy 
  |An object (probably an EV) is no longer detected in the parking/charging bay.
|EVConnected 
  |One or both ends of the Charging Cable have been disconnected (if this can be detected, else detection of a cable being unplugged from the socket), or for wireless charging: communication between EVSE and EV is lost.
|Authorized 
  |Driver or EV is no longer authorized, this can also be some form of anonymous authorization like a start button. The end of authorization will cause the Charging Station to stop the energy transfer, after which the TransactionEventRequest with eventType = Ended will be transmitted.
|PowerPathClosed 
  |All preconditions for charging are no longer met. This event is the logical OR of EVConnected and Authorized and should be used if a transaction is supposed to end when EV is disconnected and/or deauthorized. This will cause the Charging Station to stop the energy transfer, after which the TransactionEventRequest with eventType = Ended will be transmitted. It is exactly the same as having the values EVConnected, Authorized in <<tx_stop_point,`TxStopPoint`>>. +
  Despite its name, this event is not related to the state of the power relay.
|EnergyTransfer
  |Energy is not being transferred between EV and EVSE. +
  This is not recommended to use as a `TxStopPoint`, because it will stop the transaction as soon as EV or EVSE (temporarily) suspend the charging.
|DataSigned |This condition has no meaning as a `TxStopPoint` and should not be used as such.
|===

[[max_energy_on_invalid_id]]
==== `MaxEnergyOnInvalidId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|MaxEnergyOnInvalidId
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|Wh
    |dataType d|integer
|Description 3+d|Maximum amount of energy in Wh delivered when an identifier is deauthorized by the CSMS after start of a transaction.
|===

[[stop_tx_on_invalid_id]]
==== `StopTxOnInvalidId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|StopTxOnInvalidId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|whether the Charging Station will deauthorize an ongoing transaction when it receives a non-_Accepted_ authorization status in <<transaction_event_response,TransactionEventResponse>> for this transaction.
|===

[[metering_related]]
=== Metering related

==== `SampledDataEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable reports a value of _true_, Sampled Data is enabled.
|===

==== `SampledDataAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable reports a value of _true_, Sampled Data is supported.
|===

[[sampled_data_sign_readings]]
==== `SampledDataSignReadings`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|SignReadings
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If set to _true_, the Charging Station SHALL include signed meter values in the <<transaction_event_request,TransactionEventRequest>> to the CSMS. Some Charging Stations might only be able to sign `Transaction.Begin` and `Transaction.End` meter values. When a Charging Station does not support signed meter values it SHALL NOT report this variable.
|===

[[sampled_data_tx_ended_measurands]]
==== `SampledDataTxEndedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxEndedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|Sampled measurands to be included in the _meterValues_ element of <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>), every <<sampled_data_tx_ended_interval,`SampledDataTxEndedInterval`>> seconds from the start of the transaction until and including the last measurands at the end of the transaction. +
  The Charging Station reports the list of supported <<measurand_enum_type,Measurands>> in <<variable_characteristics_type,VariableCharacteristicsType.valuesList>> of this variable. This way the CSMS knows which <<measurand_enum_type,Measurands>> it can put in the `TxEndedSampledData`.

  When left empty, no sampled measurands SHALL be put into the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>).
|===

[[sampled_data_tx_ended_interval]]
==== `SampledDataTxEndedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxEndedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Interval between sampling of metering (or other) data, intended to be transmitted in the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) message. For transaction data (evseId>0), samples are acquired and transmitted only in the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) message.

  A value of "0" (numeric zero), by convention, is to be interpreted to mean that only the values taken at the start and end of a transaction SHALL be transmitted (no intermediate values). A TxEndedInterval = 0 is recommended, since other values may result in a lot of data to be transmitted in the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) message.
|===

[[sampled_data_tx_started_measurands]]
==== `SampledDataTxStartedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxStartedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|Sampled measurand(s) to be taken at the start of any transaction to be included in the meterValues field of the first <<transaction_event_request,TransactionEventRequest>> message send at the start of a transaction (eventType = Started). +
  The Charging Station reports the list of supported <<measurand_enum_type,Measurands>> in <<variable_characteristics_type,VariableCharacteristicsType.valuesList>> of this variable. This way the CSMS knows which <<measurand_enum_type,Measurands>> it can put in the `SampledDataTxStartedMeasurands`.

  If the Charging Station has a meter, recommended to use as default: "Energy.Active.Import.Register"
|===

[[sampled_data_tx_updated_measurands]]
==== `SampledDataTxUpdatedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxUpdatedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|Sampled measurands to be included in the meterValues element of every <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Updated>>), every <<sampled_data_tx_updated_interval,`SampledDataTxUpdatedInterval`>> seconds from the start of the transaction. +
  The Charging Station reports the list of supported <<measurand_enum_type,Measurands>> in <<variable_characteristics_type,VariableCharacteristicsType.valuesList>> of this variable. This way the CSMS knows which <<measurand_enum_type,Measurands>> it can put in the `SampledDataTxUpdatedMeasurands`.

  If the Charging Station has a meter, recommended to use as default: "Energy.Active.Import.Register"
|===

[[sampled_data_tx_updated_interval]]
==== `SampledDataTxUpdatedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxUpdatedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Interval between sampling of metering (or other) data, intended to be transmitted via <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Updated>>) messages. For transaction data (evseId>0), samples are acquired and transmitted periodically at this interval from the start of the charging transaction.

A value of "0" (numeric zero), by convention, is to be interpreted to mean that no sampled data should be transmitted during the transaction.
|===

==== `AlignedDataEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable reports a value of _true_, Aligned Data is enabled.
|===

==== `AlignedDataAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable reports a value of _true_, Aligned Data is supported.
|===

[[aligned_data_measurands]]
==== `AlignedDataMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|Measurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|Clock-aligned measurand(s) to be included in <<metervalues_request,MeterValuesRequest>> or <<transaction_event_request,TransactionEventRequest>>, every <<aligned_data_interval,`AlignedDataInterval`>> seconds. For all the allowed values see: <<measurand_enum_type,Measurand>>. +
  The Charging Station reports the list of supported <<measurand_enum_type,Measurands>> in <<variable_characteristics_type,VariableCharacteristicsType.valuesList>> of this variable. This way the CSMS knows which <<measurand_enum_type,Measurands>> it can put in the `AlignedDataMeasurands`.
|===

[[aligned_data_interval]]
==== `AlignedDataInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|Interval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Size (in seconds) of the clock-aligned data interval, intended to be transmitted in the <<metervalues_request,MeterValuesRequest>> or <<transaction_event_request,TransactionEventRequest>> message. This is the size (in seconds) of the set of evenly spaced aggregation intervals per day, starting at 00:00:00 (midnight). For example, a value of 900 (15 minutes) indicates that every day should be broken into 96 15-minute intervals. +
  When clock aligned data is being transmitted, the interval in question is identified by the start time and (optional) duration interval value, represented according to the ISO8601 standard. +
  A value of "0" (numeric zero), by convention, is to be interpreted to mean that no clock-aligned data should be transmitted.
|===

[[aligned_data_send_during_idle]]
==== `AlignedDataSendDuringIdle`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|AlignedDataCtrlr
  |evse 2+d|*
.3+|Variable |variableName 2+d|SendDuringIdle
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If set to _true_, the Charging Station SHALL NOT send clock aligned meter values when a transaction is ongoing. When an EVSE is specified, it SHALL stop sending the clock aligned meter values for this EVSE when it has an ongoing transaction. When no EVSE is specified, it SHALL stop sending the clock aligned meter values when any transaction is ongoing on this Charging Station.
|===

[[aligned_data_sign_readings]]
==== `AlignedDataSignReadings`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|SignReadings
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If set to _true_, the Charging Station SHALL include signed meter values in the <<sampled_value_type,SampledValueType>> in the <<transaction_event_request,TransactionEventRequest>> to the CSMS for those measurands defined in `AlignedDataTxEndedMeasurands`. +
  When a Charging Station does not support signed meter values it SHALL NOT report this variable.
|===

[[aligned_data_tx_ended_measurands]]
==== `AlignedDataTxEndedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|TxEndedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|Clock-aligned periodic measurand(s) to be included in the meterValues element of <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) for every <<aligned_data_tx_ended_interval,`AlignedDataTxEndedInterval`>> of the transaction. +
  The Charging Station reports the list of supported <<measurand_enum_type,Measurands>> in <<variable_characteristics_type,VariableCharacteristicsType.valuesList>> of this variable. This way the CSMS knows which <<measurand_enum_type,Measurands>> it can put in the `TxEndedAlignedData`.

  When left empty, no Clock-aligned measurands SHALL be put into the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>).
|===

[[aligned_data_tx_ended_interval]]
==== `AlignedDataTxEndedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|TxEndedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|Size (in seconds) of the clock-aligned data interval, intended to be transmitted in the <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) message. This is the size (in seconds) of the set of evenly spaced aggregation intervals per day, starting at 00:00:00 (midnight). For example, a value of 900 (15 minutes) indicates that every day should be broken into 96 15-minute intervals. +
  When clock aligned data is being collected, the interval in question is identified by the start time and (optional) duration interval value, represented according to the ISO8601 standard. All intervals are transmitted (if so enabled) at the end of the transaction in 1 TransactionEventRequest (<<transaction_event_enum_type,eventType = Ended>>) message. +
  This is not a recommended practice, since the size of the message can become very large.
|===

==== `PublicKeyWithSignedMeterValue`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|PublicKeyWithSignedMeterValue
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valueList d|Never,OncePerTransaction,EveryMeterValue
|Description 3+d|This Configuration Variable can be used to configure whether a public key needs to be sent with a signed meter value. Note, that the field is required, so it needs to be present as an empty string when the public key is not sent.
|===

[[sampled_data_register_values_without_phases]]
==== `SampledDataRegisterValuesWithoutPhases`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|RegisterValuesWithoutPhases
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable reports a value of _true_, then meter values of measurand `Energy.Active.Import.Register` will only report the total energy over all phases without reporting the individual phase values. +
  If this variable is absent or _false_, then the value for each phase is reported, possibly also with a total value (depending on the meter).
|===

[[reservation_related]]
=== Reservation related

==== `ReservationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Reservation is enabled.
|===

==== `ReservationAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Reservation is supported.
|===

[[reservation_non_evse_specific]]
==== `ReservationNonEvseSpecific`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|NonEvseSpecific
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this configuration variable is present and set to _true_: Charging Station supports Reservation where EVSE id is not specified.
|===

[[smart_charging_related]]
=== Smart Charging related

==== `SmartChargingEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Smart Charging is enabled.
|===

==== `SmartChargingAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Smart Charging is supported.
|===

[[ac_phase_switching_supported]]
==== `ACPhaseSwitchingSupported`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ACPhaseSwitchingSupported
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|This variable can be used to indicate an on-load/in-transaction capability. If defined and true, this EVSE supports the selection of which phase to use for 1 phase AC charging.
|===

==== `ChargingProfileMaxStackLevel`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ProfileStackLevel
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Maximum acceptable value for _stackLevel_ in a ChargingProfile. Since the lowest _stackLevel_ is 0, this means that if SmartChargingCtrlr.ProfileStackLevel = 1, there can be at most 2 valid charging profiles per <<charging_profile_purpose,Charging Profile Purpose>> per EVSE.
|===

==== `ChargingScheduleChargingRateUnit`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|RateUnit
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|A list of supported quantities for use in a <<charging_schedule_type,ChargingSchedule>>. +
  Allowed values: 'A' and 'W'
|===

==== `PeriodsPerSchedule`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|PeriodsPerSchedule
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Maximum number of periods that may be defined per <<charging_schedule_type,ChargingSchedule>>.
|===

==== `ExternalControlSignalsEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ExternalControlSignalsEnabled
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Indicates whether a Charging Station should respond to external control signals that influence charging.
|===

[[notify_charging_limit_with_schedule]]
==== `NotifyChargingLimitWithSchedules`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|NotifyChargingLimitWithSchedules
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Indicates if the Charging Station should include the externally set charging limit/schedule in the message when it sends a <<notify_charging_limit_request,NotifyChargingLimitRequest>> message. This might increase the data usage significantly, especially when an external system sends new profiles/limits with a short interval. Default is false when omitted.
|===

[[phases_3_to_1]]
==== Phases3to1

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Phases3to1
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If defined and true, this Charging Station supports switching from 3 to 1 phase during a transaction.
|===

[[charging_profile_entries]]
==== `ChargingProfileEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.5+|Variable |variableName 2+d|Entries
  |variableInstance 2+d|ChargingProfiles
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of Charging profiles installed at any time.
|Description 3+d|Amount of Charging profiles currently installed on the Charging Station.
|===

[[limit_change_significance]]
==== `LimitChangeSignificance`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|LimitChangeSignificance
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|decimal
|Description 3+d|If at the Charging Station side a change in the limit in a ChargingProfile is lower than this percentage, the Charging Station MAY skip sending a <<notify_charging_limit_request,NotifyChargingLimitRequest>> or a <<transaction_event_request,TransactionEventRequest>> message to the CSMS. It is RECOMMENDED to set this key to a low value. See <<smart_charging_signals_to_a_charging_station_from_multiple_actors,Smart Charging signals to a Charging Station from multiple actors>>.
|===

[[tariff_cost_related]]
=== Tariff & Cost related

==== `TariffEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Enabled
  |variableInstance 2+d|Tariff
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Tariff is enabled.
|===

==== `TariffAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Available
  |variableInstance 2+d|Tariff
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Tariff is supported.
|===

[[tariff_fallback_message]]
==== `TariffFallbackMessage`

Required for Charging Stations supporting Tariff Information.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|TariffFallbackMessage
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|255
|Description 3+d|Message (and/or tariff information) to be shown to an EV Driver when there is no driver specific tariff information available.
|===

==== `CostEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Enabled
  |variableInstance 2+d|Cost
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Cost is enabled.
|===

==== `CostAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Available
  |variableInstance 2+d|Cost
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Cost is supported.
|===

[[total_cost_fallback_message]]
==== `TotalCostFallbackMessage`

Required for Charging Stations supporting Tariff Information.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|TotalCostFallbackMessage
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|255
|Description 3+d|Message to be shown to an EV Driver when the Charging Station cannot retrieve the cost for a transaction at the end of the transaction.
|===

[[currency]]
==== `Currency`

Required for Charging Stations supporting Tariff Information.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Currency
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|3
|Description 3+d|Currency used by this Charging Station in a ISO 4217 <<iso4217,[ISO4217]>> formatted currency code.
|===

[[diagnostics_related]]
=== Diagnostics related

==== `MonitoringEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Monitoring is enabled.
|===

==== `MonitoringAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Monitoring is supported.
|===

[[items_per_message_clear_variable_monitoring]]
==== `ItemsPerMessageClearVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|ClearVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Maximum number of IDs in a <<clear_variable_monitoring_request,ClearVariableMonitoringRequest>>.
|===

[[items_per_message_set_variable_monitoring]]
==== `ItemsPerMessageSetVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|SetVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Maximum number of <<set_monitoring_data_type,SetMonitoringData>> elements that can be sent in one <<set_variable_monitoring_request,SetVariableMonitoringRequest>> message.
|===

[[bytes_per_message_clear_variable_monitoring]]
==== `BytesPerMessageClearVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|ClearVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Message Size (in bytes) - puts constraint on <<clear_variable_monitoring_request,ClearVariableMonitoringRequest>> message size.
|===

[[bytes_per_message_set_variable_monitoring]]
==== `BytesPerMessageSetVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|SetVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Message Size (in bytes) - puts constraint on <<set_variable_monitoring_request,SetVariableMonitoringRequest>> message size.
|===

[[offline_monitoring_event_queuing_severity]]
==== `OfflineMonitoringEventQueuingSeverity`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|OfflineQueuingSeverity
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|When set and the Charging Station is offline , the Charging Station shall queue any <<notify_event_request,NotifyEventRequest>> messages triggered by a monitor with a severity number equal to or lower than the severity configured here. Value ranging from 0 (Emergency) to 9 (Debug).
|===

==== `ActiveMonitoringBase`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|ActiveMonitoringBase
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|OptionList
|Description 3+d|Shows the currently used MonitoringBase. Valid values according MonitoringBaseEnumType: `All`, `FactoryDefault`, `HardwiredOnly`.
|===

==== `ActiveMonitoringLevel`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|ActiveMonitoringLevel
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Shows the currently used MonitoringLevel. Valid values are severity levels of SetMonitoringLevelRequest: 0-9.
|===

[[display_message_related]]
=== Display Message related

==== `DisplayMessageEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Display Message is enabled.
|===

==== `DisplayMessageAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Whether Display Message is supported.
|===

[[number_of_display_messages]]
==== `NumberOfDisplayMessages`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.4+|Variable |variableName 2+d|DisplayMessages
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of different messages that can configured in this Charging Station simultaneous, via <<set_display_message_request,SetDisplayMessageRequest>>.
|Description 3+d|Amount of different messages that are currently configured in this Charging Station, via <<set_display_message_request,SetDisplayMessageRequest>>
|===

[[display_message_supported_formats]]
==== `DisplayMessageSupportedFormats`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|SupportedFormats
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|List of message formats supported by this Charging Station. Possible values: <<message_format_enum_type,MessageFormat>>.
|===

[[display_message_supported_priorities]]
==== `DisplayMessageSupportedPriorities`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|SupportedPriorities
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|List of the priorities supported by this Charging Station. Possible values: <<message_priority_enum_type,MessagePriority>>.
|===

[[charging_infrastructure_related]]
=== Charging Infrastructure related

[[available]]
==== `Available`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.4+|Components .3+|componentName 2+d|ChargingStation
    2+d|EVSE
    2+d|Connector
  |evse 2+d|* (_for EVSE and Connector_)
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|When _true_ the Component exists and is locally configured/wired for use, but may not be (remotely) Enabled. This variable is required on any Component that can be reported by the Charging Station. As a minimum it shall exist on ChargingStation, EVSE and Connector.
|Note 3+d|If any other variables are reported for a Component, then reporting _Available_ does not add much value and may be omitted. However, the variable needs to exist, because it can be queried for by a GetCustomReport request for all Components that are 'available'.

  EVSE and Connector components are addressed on their respective tier. So, EVSE #1 is addressed as component EVSE on tier _evse_ = 1 and connector #1 on this EVSE is addressed as component Connector on tier _evse_ = 1, _connector_ = 1.
|===

==== `AvailabilityState`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.3+|Components .2+|componentName 2+d|ChargingStation
    2+d|EVSE
  |evse 2+d|* (_for EVSE_)
.4+|Variable |variableName 2+d|AvailabilityState
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|optionList
    |valuesList d|Available, Occupied, Reserved, Unavailable, Faulted
|Description 3+d|This variable reports current availability state for the ChargingStation and EVSE. If a Connector has its own availability state independent of the EVSE, then this variable may be used to report the Connector’s availability state. As such it replicates ConnectorStatus values reported in StatusNotification messages.

  An EVSE component is addressed on its own tier. So, EVSE #1 is addressed as component EVSE on tier _evse_ = 1.
|===

[[allow_reset]]
==== `AllowReset`
[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.3+|Variable |variableName 2+d|AllowReset
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Component can be reset. Can be used to announce that an EVSE can be reset individually.
|===

==== `ConnectorType`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.2+|Component |componentName 2+d|Connector
    |evse 2+d|*
.3+|Variable |variableName 2+d|ConnectorType
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|Value of the type of connector as defined by ConnectorEnumType in "Part 2 - Specification" plus additionally: `cGBT`, `cChaoJi`, `OppCharge`.
|===

[[phase_rotation]]
==== `PhaseRotation`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|*
    |evse 2+d|*
.3+|Variable |variableName 2+d|PhaseRotation
  |variableAttributes |mutability d|ReadOnly or ReadWrite.
  |variableCharacteristics |dataType d|String
|Description 3+d|This variable describes the phase rotation of a Component relative to its parent Component, using a three letter string consisting of the letters: R, S, T and x.

  {nbsp}

  The letter 'R' can be identified as phase 1 (L1), 'S' as phase 2 (L2), 'T' as phase 3 (L3). +
  The lower case 'x' is used to designate a phase that is not connected. +
  An empty string means that phase rotation is not applicable or not known.

  {nbsp}

  Certain measurands, like voltage and current, are reported with a phase relative to the grid connection. In order to support this, all components in the chain from Connector to ElectricalFeed need to have a value for PhaseRotation.

  {nbsp}

  Some examples: +
  "" (unknown) +
  "RST" (Standard Reference Phasing) +
  "RTS" (Reversed Reference Phasing) +
  "SRT" (Reversed 240 degree rotation) +
  "STR" (Standard 120 degree rotation) +
  "TRS" (Standard 240 degree rotation) +
  "TSR" (Reversed 120 degree rotation) +
  "RSx" (Two phases connected) +
  "Rxx" (One phase connected)
|===

==== `SupplyPhases`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.4+|Components .3+|componentName 2+d|ChargingStation
    2+d|EVSE
    2+d|Connector
  |evse 2+d|* (_for EVSE and Connector_)
.3+|Variable |variableName 2+d|SupplyPhases
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|Number of alternating current phases connected/available. 1 or 3 for AC, 0 means DC (no alternating phases). Null value indicates that the number of phases (e.g. in use) is unknown.
|===

==== `Power`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes (_maxLimit only_)
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.4+|Variable |variableName 2+d|Power
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|decimal
    |maxLimit d|decimal
|Description 3+d|The variableCharacteristic _maxLimit_, that holds the maximum power that this EVSE can provide, is required. The _Actual_ value of the instantaneous (real) power is desired, but not required.
|===

==== Example Reporting of EVSEs and Connectors via device model

The following example illustrates how the device model reports EVSEs and Connectors for an example charging station that has two EVSEs, of which EVSE #1 has one Type2 connector and EVSE #2 has two connectors: CCS and CHAdeMO.

[cols="<.^3,<.^1,<.^1,<.^2,<.^3,<.^2,<.^2,<.^3,<.^2,<.^2,<.^2",%autowidth.stretch,options="header",frame=all,grid=all]
|===
4+|Component 2+|Variable 2+|VariableAttribute 3+|VariableCharacteristics

s|name s|evse id s|evse connectorId s|instance s|name s|instance s|type s|value s|dataType s|maxLimit s|supportsMonitoring

|ChargingStation |{nbsp} |{nbsp} |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |AvailabilityState |{nbsp} |Actual |Available |boolean |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |SupplyPhases |{nbsp} |Actual |integer |3 |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L1" |Actual |decimal |45.0 |{nbsp} |true
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L2" |Actual |decimal |44.9 |{nbsp} |true
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L3" |Actual |decimal |44.9 |{nbsp} |true
|EVSE |1 |{nbsp} |"left" |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |AvailabilityState |{nbsp} |Actual |Available |optionList |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |SupplyPhases |{nbsp} |Actual |3 |integer |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |Power |{nbsp} |Actual |0.0 |decimal |22000.0 |true
|Connector |1 |1 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |1 |1 |{nbsp} |ConnectorType |{nbsp} |Actual |sType2 |string |{nbsp} |false
|Connector |1 |1 |{nbsp} |SupplyPhases |{nbsp} |Actual |3 |integer |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |AvailabilityState |{nbsp} |Actual |Occupied |optionList |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |Power |{nbsp} |Actual |41000.0 |decimal |50000.0 |true
|Connector |2 |1 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |2 |1 |{nbsp} |AvailabilityState |{nbsp} |Actual |Occupied |optionList |{nbsp} |false
|Connector |2 |1 |{nbsp} |ConnectorType |{nbsp} |Actual |cCCS2 |string |{nbsp} |false
|Connector |2 |1 |{nbsp} |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|Connector |2 |2 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |2 |2 |{nbsp} |AvailabilityState |{nbsp} |Actual |Unavailable |optionList |{nbsp} |false
|Connector |2 |2 |{nbsp} |ConnectorType |{nbsp} |Actual |cG105 |string |{nbsp} |false
|Connector |2 |2 |{nbsp} |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|===

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |An instance name has been given to the EVSEs in this example. This is to illustrate that it is allowed to provide an instance name even if only one instance of the component exists. It is not required to do so. +
  The variable Voltage of ChargingStation has been added to show an example of a multi-instance variable. +
  Not all VariableAttributes and VariableCharacteristics are shown in the table.
|===

=== ISO 15118 Related

[[central_contract_validation_allowed]]
==== `CentralContractValidationAllowed`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|CentralContractValidationAllowed
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable exists and has the value _true_, then Charging Station can provide a contract certificate that it cannot validate, to the CSMS for validation as part of the AuthorizeRequest.
|===

[[contract_validation_offline]]
==== `ContractValidationOffline`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|ContractValidationOffline
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable is _true_, then Charging Station will try to validate a contract certificate when it is offline.
|===

==== `ProtocolSupportedByEV`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ConnectedEV
  |evse 2+d|*
.4+|Variable |variableName 2+d|ProtocolSupportedByEV
  |variableInstance 2+d|<Priority>
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|A string with the following comma-separated items: +
  "<uri>,<major>,<minor>". +
  This is information from the SupportedAppProtocolReq message from ISO 15118 +
  Each priority is given its own variable instance. Priority is a number from 1 to 20 as a string. E.g. "1" or "2". +
  Example: +
  - ConnectedEV.ProtocolSupportedByEV["1"]  "urn:iso:15118:2:2013:MsgDef,2,0" +
  - ConnectedEV.ProtocolSupportedByEV["2"]  "urn:iso:15118:2:2010:MsgDef,1,0"
|===

==== `ProtocolAgreed`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ConnectedEV
  |evse 2+d|*
.3+|Variable |variableName 2+d|ProtocolAgreed
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|A string with the following comma-separated items: +
  "<uri>,<major>,<minor>". +
  This is the protocol uri and version information that was agreed upon between EV and EVSE in the supportedAppProtocolReq handshake from ISO 15118. +
  Example: "urn:iso:15118:2:2013:MsgDef,2,0"
|===

[[iso15118_pnc_enabled]]
==== `ISO15118PnCEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|PnCEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable is _true_, then ISO 15118 plug and charge as described by use case <<authorization_using_contract_certificates,C07 - Authorization using Contract Certificates>> is enabled. +
  If this variable is _false_, then ISO 15118 plug and charge as described by use case <<authorization_using_contract_certificates,C07 - Authorization using Contract Certificates>> is disabled.
|===

==== `ISO15118V2GCertificateInstallationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|V2GCertificateInstallationEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable is _true_, then ISO 15118 V2G Charging Station certificate installation as described by use case <<update_charging_station_certificate_by_request_of_csms,A02 - Update Charging Station Certificate by request of CSMS>> and <<update_charging_station_certificate_initiated_by_the_charging_station,A03 - Update Charging Station Certificate initiated by the Charging Station>> is enabled. +
  If this variable is _false_, then ISO 15118 V2G Charging Station certificate installation as described by use case <<update_charging_station_certificate_by_request_of_csms,A02 - Update Charging Station Certificate by request of CSMS>> and <<update_charging_station_certificate_initiated_by_the_charging_station,A03 - Update Charging Station Certificate initiated by the Charging Station>> is disabled.
|===

==== `ISO15118ContractCertificateInstallationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|ContractCertificateInstallationEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable is _true_, then ISO 15118 contract certificate installation/update as described by use case <<m01_certificate_installation_ev,M01 - Certificate installation EV>> and <<m02_certificate_update_ev,M02 - Certificate Update EV is enabled>>. +
  If this variable is _false_, then ISO 15118 contract certificate installation/update as described by use case <<m01_certificate_installation_ev,M01 - Certificate installation EV>> and <<m02_certificate_update_ev,M02 - Certificate Update EV is disabled>>.
|===

==== `ISO15118RequestMeteringReceipt`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|RequestMeteringReceipt
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|If this variable is _true_, then Charging Station shall request a metering receipt from EV before sending a fiscal meter value to CSMS.
|===

==== `ISO15118SeccId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ISO15118Ctrlr
  |evse 2+d|* (optional)
.3+|Variable |variableName 2+d|SeccId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|The name of the SECC in the string format as required by ISO 15118. +
  It is used as the *commonName* (CN) of the SECC leaf certificate. +
  Example: "DE-ICE-S-0003C4D5578786756453309675436-2"
|===

==== `ISO15118CountryName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
evse * (optional)
.3+|Variable |variableName 2+d|CountryName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|The countryName of the SECC in the ISO 3166-1 format. +
  It is used as the *countryName* (C) of the SECC leaf certificate. +
  Example: "DE"
|===

==== `ISO15118OrganizationName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
evse * (optional)
.3+|Variable |variableName 2+d|OrganizationName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|The organizationName of the CSO operating the charging station. +
  It is used as the *organizationName* (O) of the SECC leaf certificate. +
  Example: "John Doe Charging Services Ltd" +
  Note: This value will usually be identical to SecurityCtrlr.OrganizationName, but it does not have to be.
|===

==== `ISO15118EvseId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.3+|Variable |variableName 2+d|ISO15118EvseId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|The name of the EVSE in the string format as required by ISO 15118 and IEC 63119-2. +
  Example: "DE*ICE*E*1234567890*1"
|===
