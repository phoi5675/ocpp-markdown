= Referenced Components and Variables
:!chapter-number:

:sectnums:
[[controller_components]]
== Controller Components

이 섹션에서는 OCPP 2.0에 도입된 '컨트롤러' 구성 요소에 대한 개요를 제공합니다. 컨트롤러 구성 요소는 'Ctrlr' 접미사로 인식할 수 있으며 특정 기능의 구성을 담당합니다. 이 문서에서 설명하는 대부분의 <<referenced_components_and_variables,'Referenced' components>>는 '컨트롤러' 구성 요소입니다.

아래 표에는 모든 컨트롤러 구성 요소의 요약이 포함되어 있습니다. 자세한 내용은 2부 - 부록을 참조하세요.


[cols="<.^2,<.^6",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Controller     |Component Description

|AlignedDataCtrlr |클럭 정렬 미터 데이터 보고와 관련된 구성을 담당합니다.
|AuthCacheCtrlr |충전기 사용 인증을 위한 로컬 캐시 사용과 관련된 구성을 담당합니다.
|AuthCtrlr |충전기 사용 인증 사용과 관련된 구성을 담당합니다.
|CHAdeMOCtrlr |CHAdeMO 컨트롤러와 관련된 구성을 담당합니다.
|ClockCtrlr |충전기에서 시간 추적 관리를 구성하는 수단을 제공합니다.
|CustomizationCtrlr |DataTransfer 메시지와 CustomData 확장을 사용하여 사용자 지정 공급업체별 구현과 관련된 구성을 담당합니다.
|DeviceDataCtrlr |충전기 장치 모델 데이터의 교환 및 저장과 관련된 구성을 담당합니다.
|DisplayMessageCtrlr |충전기 사용자에게 메시지를 표시하는 것과 관련된 구성을 담당합니다.
|ISO15118Ctrlr |ISO 15118 컨트롤러와 관련된 구성을 담당합니다.
|LocalAuthListCtrlr |충전기 사용을 위한 로컬 인증 목록 사용과 관련된 구성을 담당합니다.
|MonitoringCtrlr |모니터링 이벤트 데이터 교환과 관련된 구성을 담당합니다.
|OCPPCommCtrlr |충전기와 CSMS 간의 정보 교환과 관련된 구성을 담당합니다.
|ReservationCtrlr |예약과 관련된 구성을 담당합니다.
|SampledDataCtrlr |샘플링된 미터 데이터 보고와 관련된 구성을 담당합니다.
|SecurityCtrlr |충전기와 CSMS 간의 통신 보안과 관련된 구성을 담당합니다.
|SmartChargingCtrlr |스마트 충전과 관련된 구성을 담당합니다.
|TariffCostCtrlr |요금 및 비용 표시와 관련된 구성을 담당합니다.
|TxCtrlr |트랜잭션 특성 및 동작과 관련된 구성을 담당합니다.
|===

모든 컨트롤러 구성 요소에는 '활성화됨' 변수가 있습니다. 이 변수는 특정 기능을 활성화/비활성화하는 데 사용할 수 있습니다. 충전기의 모든 데이터는 컨트롤러 구성 요소의 일부가 아니므로 기능을 비활성화할 때 충전기에 저장된 관련 데이터는 변경되거나 제거되지 않습니다. +
예를 들어, 활성된 예약이 있을 때 ReservationCtrlr이 비활성화되면 EVSE를 사용할 수 있지만 예약 항목은 여전히 ​​그대로 있습니다. 사용되지 않을 뿐입니다. 나중에 ReservationCtrlr이 다시 활성화되면 예약 항목이 만료되지 않고 진행 중인 거래가 없는 한 예약 항목이 다시 활성화됩니다. 그 사이에 거래가 시작된 경우 해당 거래는 활성 상태로 유지됩니다. 그러면 예약이 만료된 것으로 간주됩니다.

<<<

[[referenced_components_and_variables]]
== Referenced Components and Variables

아래는 이 사양에서 표준화된 역할을 가진 모든 구성 변수 조합의 목록입니다.

이러한 구성 변수는 OCPP 1.x의 구성 키를 대체합니다.

목록은 기능에 따라 나뉩니다. <<general, General>>, <<security_related, Security>>, <<authorization_related,Authorization>>, <<local_authorization_list_management_related, Local Authorization List Management related>>, <<authorization_cache_related, Authorization Cache>>, <<transaction_related, Transaction>>, <<metering_related, Metering>>, <<reservation_related, Reservation>>, <<smart_charging_related, Smart Charging>>, <<tariff_cost_related, Tariff & Cost>>, <<diagnostics_related, Diagnostics>>, <<display_message_related, Display Message>> 및 <<charging_infrastructure_related, Charging Infrastructure related>>.

특정 기능 블록에 언급된 필수 구성 변수는 해당 기능 블록을 지원하는 경우에만 충전기에서 지원해야 합니다.

"Part 1 - Architecture & Topology"의 4장에서 장치 모델의 구성 요소 및 변수 주소 지정에 대해 참조하세요.

이 문서의 모든 구성 변수에 대한 요구 사항:

- 쓰기 가능한 모든 변수는 VariableAttribute 필드 _persistence_ = true를 가져야 하며 따라서 영구적인 방식으로 저장해야 합니다.
- 정의되지 않은 모든 필드는 비워두어야 합니다.
- *(별표)로 표시된 모든 필드는 가능한 모든 값을 가질 수 있습니다.
- AttributeType이 제공되지 않으면 CSMS 및 충전기는 AttributeType이 Actual이라고 가정해야 합니다.

[cols="^.^1s,10",%autowidth.stretch]
|===
|참고 |JSON/Websocket 동작을 제어하는 ​​데 특화된 여러 구성 변수에 대해서는 _'OCPP 2.0 Part 4 - JSON over Websockets implementation guide'_ 를 참조하세요.
|===

[[general]]
=== General

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |WebSocket 관련 변수는 <<ocpp2_0_part4,"OCPP-2.0.1 Part 4 JSON over WebSockets">>에 설명되어 있습니다.
|===

==== `ActiveNetworkProfile`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|ActiveNetworkProfile
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기가 네트워크에 연결할때 사용하는 구성 프로필을 나타냅니다. 이 구성 변수는 NetworkConnectionProfile이 구현될 때만 구현하면 됩니다.
|===

[[allow_new_sessions_pending_firmware_update]]
==== `AllowNewSessionsPendingFirmwareUpdate`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ChargingStation
.3+|Variable |variableName 2+d|AllowNewSessionsPendingFirmwareUpdate
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 펌웨어 업데이트를 위해 모든 EVSE가 Available상태를 기다리고 있을 때 EVSE에 새로운 세션이 시작할 수 없는지를 나타냅니다. +
  펌웨어 업데이트가 설치를 대기하고 있고, 해당 변수가 _true_ 값일때, 충전기는 사용가능한 EVSE들을 Unavailable 상태로 바꿔 업데이트를 보류합니다. 즉 펌웨어 업데이트를 수행하기 위해 충전기의 모든 EVSE가 사용가능할 시점까지 더 많은 시간이 소요될 수 있습니다.
|===

==== `DefaultMessageTimeout`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|MessageTimeout
  |variableInstance 2+d|Default
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|메시지 타임아웃의 목적은 통신 오류나 소프트웨어 오류로 인해 메시지가 도착하지 않았을 때 요청 메시지를 보내지 않은 것으로 간주하고 다른 작업을 계속할 수 있도록 하는 것입니다. 충전기의 메시지 타임아웃 설정은 _NetworkConnectionProfile_ 의 messageTimeout 필드에서 구성할 수 있습니다.
|===

[[file_transfer_protocols]]
==== `FileTransferProtocols`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|FileTransferProtocols
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|지원되는 파일 전송 프로토콜의 목록입니다.

  사용 가능한 값: FTP, FTPS, HTTP, HTTPS, SFTP.
|===

==== `HeartbeatInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|HeartbeatInterval
  |variableAttributes |mutability d|ReadWrite
  .3+|variableCharacteristics |unit d|s
      |dataType d|integer
      |minLimit d|1
|Description 3+d|CSMS와의 OCPP 교환 없는 비활성 간격이후 충전기가 보내야하는 <<heartbeat_request,HeartbeatRequest>>.
|===

[[network_configuration_priority]]
==== `NetworkConfigurationPriority`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.5+|Variable |variableName 2+d|NetworkConfigurationPriority
  .2+|variableAttributes |attributeType d|Actual
    |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|SequenceList
    |valueList d|List of possible values
|Description 3+d|사용 가능한 네트워크 연결 프로필의 우선순위를 쉼표로 구분하여 정렬한 목록입니다. 네트워크 구성 프로필에 사용 가능한 프로필 슬롯 목록은 이 변수의 valueList 특성을 통해 보고되어야 합니다.
|===

[[network_profile_connection_attempts]]
==== `NetworkProfileConnectionAttempts`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|NetworkProfileConnectionAttempts
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기가 다른 프로필로 전환하기 전에 시도하는 연결 횟수를 지정합니다.
|===

[[offline_threshold]]
==== `OfflineThreshold`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|OfflineThreshold
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|충전기의 오프라인 기간이 OfflineThreshold를 초과했다면 충전기가 다시 온라인이 되었을때 자신의 커넥터의 <<status_notification_request,StatusNotificationRequest>>를 보내는것을 권장합니다.
|===

==== `QueueAllMessages`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|QueueAllMessages
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 로 설정되면 충전기는 모든 메시지를 CSMS에 전달될 때까지 대기열에 넣습니다. +
  _false _로 설정되면 충전기는 E04.FR.01 및 기타 요구 사항에서 요구하는 대로 거래 관련 메시지만 대기열에 넣습니다. +
  이 변수가 _true_ 로 설정되고 충전기의 메모리가 부족하면 충전기는 TransactionEvent 메시지를 마지막으로 삭제해야 하며 측정/미터 데이터를 삭제할 때 충전기는 중간 값을 먼저 삭제해야 하며(첫 번째 값, 세 번째 값, 다섯 번째 등) 측정/미터 데이터의 시작 또는 끝에서 값을 삭제하지 않아야 합니다. 기본값 = false
|===

[[message_attempts_transaction_event]]
==== `MessageAttemptsTransactionEvent`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|MessageAttempts
  |variableInstance 2+d|TransactionEvent
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|CSMS가 <<transaction_event_request,TransactionEventRequest>> 메시지 처리를 실패할때 충전기가 얼마나 자주 이것을 전송하는것을 시도 할지에 대한 값입니다.
|===

[[message_attempt_interval_transaction_event]]
==== `MessageAttemptIntervalTransactionEvent`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.6+|Variable |variableName 2+d|MessageAttemptInterval
  |variableInstance 2+d|TransactionEvent
  .2+|variableAttributes |attributeType d|Actual
    |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|CSMS가 <<transaction_event_request,TransactionEventRequest>> 메시지 처리를 실패하였을때 충전기가 메시지를 재전송전 대기하는 기간입니다.
|===

[[unlock_on_ev_side_disconnect]]
==== `UnlockOnEVSideDisconnect`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|UnlockOnEVSideDisconnect
  |variableAttributes |mutability d|ReadWrite/ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면, 충전기는 EV에서 케이블이 분리될 때 충전기 쪽의 케이블을 잠금 해제해야 합니다. 고정 케이블만 있는 EVSE의 경우 가변성은 ReadOnly여야 하고 실제 값은 false여야 합니다. 고정 케이블과 소켓이 있는 충전기의 경우 변수는 소켓에만 적용됩니다.
|===

==== `WebSocketPingInterval`

이 구성 변수는 <<ocpp2_0_part4,"OCPP-2.0.1 Part 4 JSON over WebSockets">>에 설명되어 있습니다..

==== `ResetRetries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|OCPPCommCtrlr
.3+|Variable |variableName 2+d|ResetRetries
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|충전기 리셋이 실패했을 때 리셋을 재시도하는 횟수입니다.
|===

==== `MessageFieldLength`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|FieldLength
  |variableInstance 2+d|<message>.<field>
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 변수는 표준 OCPP 메시지 스키마에 정의된 길이보다 <메시지>의 <필드> 길이가 클 경우 해당 길이를 보고하는 데 사용됩니다.
|===

[[items_per_message_get_report]]
==== `ItemsPerMessageGetReport`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|GetReport
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|하나의 <<get_report_request,GetReportRequest>> 또는 <<get_monitoring_report_request,GetMonitoringReportRequest>> 메시지로 전송할 수 있는 ComponentVariable 항목의 최대 수입니다.
|===

[[items_per_message_get_variables]]
==== `ItemsPerMessageGetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|GetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<get_variables_request,GetVariablesRequest>>의 GetVariableData 객체의 최대 개수입니다.
|===

[[bytes_per_message_get_report]]
==== `BytesPerMessageGetReport`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|GetReport
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<get_report_request,GetReportRequest>> 또는 <<get_monitoring_report_request,GetMonitoringReportRequest>> 메시지 크기에 제약을 둡니다.
|===

[[bytes_per_message_get_variables]]
==== `BytesPerMessageGetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|GetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<get_variables_request,GetVariablesRequest>> 메시지 크기에 제약을 둡니다.
|===

[[configuration_value_size]]
==== `ConfigurationValueSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ConfigurationValueSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|1000
|Description 3+d|이 구성 변수는 SetVariableData.attributeValue 및 VariableCharacteristics.valueList 필드를 제한하는 데 사용할 수 있습니다. 이러한 값의 최대 크기는 항상 동일하게 유지됩니다.
|===

[[reporting_value_size]]
==== `ReportingValueSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ReportingValueSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|2500
|Description 3+d|이 구성 변수는 GetVariableResult.attributeValue, VariableAttribute.value 및 EventData.actualValue 필드를 제한하는 데 사용할 수 있습니다. 이러한 값의 최대 크기는 항상 동일하게 유지됩니다.
|===

[[items_per_message_set_variables]]
==== `ItemsPerMessageSetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|SetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<set_variables_request,SetVariablesRequest>>에서 SetVariableData 객체의 최대 개수입니다.
|===

==== `BytesPerMessageSetVariables`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DeviceDataCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|SetVariables
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<set_variables_request,SetVariablesRequest>> 메시지 크기에 제약을 둡니다.
|===

==== `DateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|DateTime
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|DateTime
|Description 3+d|현재 날짜와 시간을 포함합니다. 
|===

[[ntp_source]]
==== `NtpSource`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|NtpSource
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valuesList |DHCP, manual
|Description 3+d|NTP 클라이언트가 구현되면 이 변수를 사용하여 클라이언트를 구성할 수 있습니다. DHCP를 통해 제공된 NTP 서버를 사용하거나 수동으로 구성된 NTP 서버를 사용합니다.
|===

[[ntp_server_uri]]
==== `NtpServerUri`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|NtpServerUri
  |variableInstance 2+d|Single digit, multiple servers allowed, primary NtpServer has instance '1', the secondary has instance '2'. etc
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|NTP 클라이언트가 구현되면 이 변수를 사용하여 클라이언트를 구성할 수 있습니다. 여기에는 NTP 서버의 주소가 포함됩니다.

여러 NTP 서버를 구성할 수 있습니다. 이는 백업 NTP 서버가 될 수 있습니다. NTP 클라이언트를 지원하는 경우 동시에 여러 NTP 서버에 연결하여 보다 안정적인 시간 소스를 얻을 수도 있습니다.
|===

[[timeoffset]]
==== `TimeOffset`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|TimeOffset
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|구성된 현재 로컬 시간 오프셋은 "+01:00", "-02:00" 등의 형식으로 제공됩니다.

TimeOffset을 사용하는 경우 <<timezone,`TimeZone`>>을 구현하지 않는 것이 좋습니다. 충전기에 <<timeoffset,`TimeOffset`>>과 <<timezone,`TimeZone`>>을 모두 구현한 경우 두 가지를 동시에 사용하지 않는 것을 권장합니다.

시간 오프셋은 화면표시 목적입니다.
|===

[[next_time_offset_transition_datetime]]
==== `NextTimeOffsetTransitionDateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|NextTimeOffsetTransitionDateTime
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|DateTime
|Description 3+d|다음 시간 오프셋 전환의 날짜 시간. 이 날짜 시간에 EV 운전자에게 표시되는 시계에는 <<time_offset_next_transition,`TimeOffsetNextTransition`>>을 통해 구성된 대로 새 오프셋이 지정됩니다. +
이를 사용하여 일광 절약 시간 기간의 다음 시작 또는 종료를 수동으로 구성할 수 있습니다.
|===

[[time_offset_next_transition]]
==== `TimeOffsetNextTransition`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeOffset
  |variableInstance 2+d|NextTransition
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|다음 로컬 시간 오프셋은 "+01:00", "-02:00" 등의 형식으로 표시됩니다. +
<<next_time_offset_transition_datetime,`NextTimeOffsetTransitionDateTime`>>을 통해 구성된 대로 다음 시간 오프셋 전환에 설정되는 새 오프셋입니다. +
이를 사용하여 일광 절약 시간 기간의 시작 또는 종료에 대한 오프셋을 수동으로 구성할 수 있습니다.
|===

[[timesource]]
==== `TimeSource`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeSource
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|SequenceList
    |valuesList d|List of all implemented time sources. Possible values: Heartbeat, NTP, GPS, RealTimeClock, MobileNetwork, RadioTimeTransmitter
|Description 3+d|이 변수를 통해 충전기는 1개 이상이 구현된 경우 CSMS에 클록 소스를 구성하는 옵션을 제공합니다.

가능한 소스 목록을 제공함으로써 CSO는 대체 소스를 구성할 수 있습니다.

예: +
"NTP,Heartbeat"는 NTP를 사용하지만 NTP 서버 중 어느 것도 응답하지 않으면 Heartbeat를 통한 시간 동기화를 사용한다는 것을 의미합니다.

참고: RadioTimeTransmitter: 전 세계 여러 지역에서 저주파 무선 송신기는 정확한 현지 시간 정보를 제공합니다(예: 독일의 DCF77, 영국의 MSF, 일본의 JJY 등). 이러한 무선 시간 클록은 충전기의 시간 소스로 사용할 수 있습니다. 충전기는 방송된 시간을 UTC로 변환해야 합니다. 이 경우 <<timezone,`TimeZone`>>, <<timeoffset,`TimeOffset`>>, <<next_time_offset_transition_datetime,`NextTimeOffsetTransitionDateTime`>> 및 <<time_offset_next_transition,`TimeOffsetNextTransition`>>을 사용할 수 있습니다.
|===

[[timezone]]
==== TimeZone

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.3+|Variable |variableName 2+d|TimeZone
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|"Europe/Oslo", "Asia/Singapore" 등의 형식으로 구성된 현재 로컬 시간대

시간대를 사용하는 경우 <<timeoffset,`TimeOffset`>>을 구현하지 않는 것이 좋습니다. 충전기에 <<timeoffset,`TimeOffset`>>과 <<timezone,`TimeZone`>>을 모두 구현한 경우 두 가지를 동시에 사용하지 않는 것이 좋습니다.

시간대는 표시 목적으로 사용됩니다.
|===

==== `TimeAdjustmentReportingThreshold`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ClockCtrlr
.4+|Variable |variableName 2+d|TimeAdjustmentReportingThreshold
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|시계 시간이 TimeAdjustmentReportingThreshold 초보다 더 앞이나 뒤로 조정되면 충전기에서 SecurityEventNotification("SettingSystemTime")을 보냅니다. 적절한 값은 20초입니다.
|===

==== `CustomImplementationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|CustomizationCtrlr
.4+|Variable |variableName 2+d|CustomImplementationEnabled
  |variableInstance 2+d|<VendorId>
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 표준 구성 변수는 충전기가 지원하는 사용자 정의 구현을 활성화/비활성화하는 데 사용할 수 있습니다.

{nbsp}

It is recommended to first check if the custom behavior is able to be implemented using the device model, otherwise DataTransfer message(s) and/or CustomData fields can be used.
|===

[[security_related]]
=== Security related

[[basic_auth_password]]
==== `BasicAuthPassword`

기본 인증 암호는 HTTP 기본 인증에 사용됩니다. 구성 값은 쓰기 전용이므로 CSMS가 모든 구성 값을 읽을 때 실수로 일반 텍스트로 저장할 수 없습니다.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|BasicAuthPassword
  |variableAttributes |mutability d|WriteOnly
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|40 (Max length of the BasicAuthPassword)
|Description 3+d|기본 인증 암호는 HTTP 기본 인증에 사용됩니다. 암호는 최소 16자에서 최대 40자(영숫자 문자 및 passwordString에서 허용하는 특수 문자)로 구성된 충분히 높은 엔트로피를 가진 임의로 선택된 passwordString이어야 합니다. 암호는 UTF-8로 인코딩된 문자열로 전송되어야 합니다(옥텟 문자열이나 base64로 인코딩되면 안됨). 이 구성 변수는 CSMS가 모든 구성 변수를 읽을 때 실수로 일반 텍스트로 저장할 수 없습도록 쓰기 전용으로 되어있습니다. 이 구성 변수는 "Security profile 3 -TLS with client side certificates"이 구현되지 않는 한 필수입니다.
|===

==== `Identity`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|Identity
  |variableAttributes |mutability d|ReadOnly or ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|48 (Charging Station Identity)
|Description 3+d|충전기 ID. ID는 <<primitive_datatypes,identifierString>>이지만 이 값은 기본 인증 사용자 이름으로도 사용되므로 콜론 문자 ':'는 사용하면 안 됩니다. +
최대 길이는 <<emi3_b0,[EMI3-BO]>> "Part 2: business objects"의 EVSE ID와의 호환성을 보장하기 위해 선택되었습니다.
|===

==== `OrganizationName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|OrganizationName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|이 구성 변수는 CSO의 조직 이름 또는 CSO가 신뢰하는 조직을 설정하는 데 사용됩니다. 클라이언트 인증서의 주체 필드에 O(_organizationName_) RDN을 설정하는 데 사용됩니다. 또한 A00.FR.509를 참조하세요.
|===

==== `CertificateEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|CertificateEntries
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of Certificates installed at any time.
|Description 3+d|현재 충전기에 설치된 인증서 수입니다.
|===

[[security_profile]]
==== `SecurityProfile`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|SecurityProfile
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 구성 변수는 충전기에서 사용되는 보안 프로필을 보고하는 데 사용됩니다.
|===

[[additional_root_certificate_check]]
==== `AdditionalRootCertificateCheck`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|AdditionalRootCertificateCheck
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면 certificateType <<install_certificate_use_enum_type,CSMSRootCertificate>>의 인증서 하나만(임시 대체 인증서까지) 한 번에 설치할 수 있습니다. 새 CSMS 루트 인증서를 설치할 때 새 인증서는 이전 인증서를 대체해야 하며 새 CSMS 루트 인증서는 대체하는 이전 CSMS 루트 인증서로 서명해야 합니다. +
이 구성 변수는 "security profile 1 - Unsecured Transport with Basic Authentication"이 구현되지 않는 한 필수입니다. 보안 프로필 1은 신뢰할 수 있는 네트워크에서만 사용해야 합니다.

  _참고: 이 추가 보안 메커니즘을 사용할 때는 충전기에서 새 CSMS 루트 인증서를 설치할 때 전체 인증서 체인 검증을 수행해야 한다는 점에 유의하세요. 그러나 이전 CSMS 루트 인증서가 대체 인증서로 설정되면 충전기에서 TLS handshake 중에 서버 인증서를 검증할 때 부분 인증서 체인 검증을 수행해야 합니다. 그렇지 않으면 이전 CSMS 루트(대체) 인증서가 만료되거나 제거될때 검증이 실패합니다._

_참고 2: 변수가 필수라는 문구는 구성 변수가 있어야 하지만 기능을 구현해야 한다는 것을 나타내지는 않습니다. 이것은 선택 사항입니다. 값을 false로 설정하면 충전기에서 이 기능을 지원하지 않는다는 것을 나타내는 반면, true는 기능을 지원한다는 것을 의미합니다._
|===

[[max_certificate_chainsize]]
==== `MaxCertificateChainSize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|MaxCertificateChainSize
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|10000
|Description 3+d|이 구성 변수는 <<certificate_signed_request,CertificateSignedRequest>> PDU에서 'certificateChain' 필드의 크기를 제한하는 데 사용할 수 있습니다. 이 값은 너무 작게 설정해서는 안 됩니다. 이 값이 작을수록 충전기가 지원하는 보안 아키텍처가 줄어듭니다. 최소 5600의 크기를 설정하는 것이 좋습니다. 이렇게 하면 충전기가 대부분의 보안 아키텍처를 지원할 수 있습니다.
|===

[[cert_signing_wait_minimum]]
==== `CertSigningWaitMinimum`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.4+|Variable |variableName 2+d|CertSigningWaitMinimum
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|이 구성 변수는 CSMS가 SignCertificateRequest를 수락하지만 서명된 인증서를 반환하지 않는 경우 충전기가 다른 CSR을 생성하기 전에 기다려야 하는 시간을 정의합니다. 이 값은 시도할 때마다 두 배가 됩니다. 시도 횟수는 <<cert_signing_repeat_times,CertSigningRepeatTimes>>에서 구성됩니다. 인증서 서명 프로세스가 느린 경우 이 설정을 통해 CSMS가 충전기에 더 많은 시간을 허용하라고 알릴 수 있습니다.
|===

[[cert_signing_repeat_times]]
==== `CertSigningRepeatTimes`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SecurityCtrlr
.3+|Variable |variableName 2+d|CertSigningRepeatTimes
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|이 변수는 충전기가 이전 백오프 시간을 두 배로 늘려야 하는 횟수를 구성하는 데 사용할 수 있으며, <<cert_signing_wait_minimum,CertSigningWaitMinimum>>에서 구성된 초 수부터 시작하여 백오프 시간이 CSR에서 생성된 서명된 인증서가 포함된 CertificateSignedRequest를 수신하지 않고 만료될 때마다 시작합니다. 최대 증가 횟수에 도달하면 충전기는 CSMS가 TriggerMessageRequest를 사용하여 요청할 때까지 SignCertificateRequest를 다시 보내는 것을 중지해야 합니다.
|===

[[authorization_related]]
=== Authorization related

[[auth_enabled]]
==== AuthEnabled

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_false_ 로 설정하면 트랜잭션을 시작하기 전이나 idToken을 읽을 때 인증하지 않습니다. idToken이 제공된 경우 TransactionEventRequest의 _idToken_ 필드에 저장됩니다. idToken이 제공되지 않은 경우 TransactionEventRequest의 _idToken_ 은 비어 있고 type은 `NoAuthorization` 으로 설정됩니다.
|===

[[additional_info_items_permessage]]
==== `AdditionalInfoItemsPerMessage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|AdditionalInfoItemsPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|한 메시지에서 보낼 수 있는 AdditionalInfo 항목의 최대 수입니다. 이 구성 변수는 AdditionalInfo가 구현될 때만 구현하면 됩니다.
|===

[[offline_tx_for_unknown_id_enabled]]
==== `OfflineTxForUnknownIdEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|OfflineTxForUnknownIdEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 키가 있으면 충전기는 <<unknown_offline_authorization,Unknown Offline Authorization>>을 지원합니다. 이 키가 _true_ 값일 경우 <<unknown_offline_authorization,Unknown Offline Authorization>>이 활성화됩니다.
|===

[[authorize_remote_start]]
==== `AuthorizeRemoteStart`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|AuthorizeRemoteStart
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|<<request_start_transaction_request,RequestStartTransactionRequest>> 메시지 형태로 트랜잭션을 시작하기 위한 원격 요청시 로컬 트랜잭션 시작 작업처럼 사전에 인증되어야 하는지 여부.
|===

[[local_authorize_offline]]
==== `LocalAuthorizeOffline`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|LocalAuthorizeOffline
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 _offline_ 일 때 현지에서 인증된 식별자에 대한 트랜잭션을 시작할지 여부입니다.
|===

[[local_pre_authorize]]
==== `LocalPreAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|LocalPreAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|온라인일 경우 현지 인증된 식별자에 대해 충전기가 대기하거나 <<authorize_response,AuthorizeResponse>> 를 CSMS에 요청하기 전에 트랜잭션을 시작할지 여부입니다.
|===

[[master_pass_group_id]]
==== `MasterPassGroupId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.4+|Variable |variableName 2+d|MasterPassGroupId
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit |36 (The maximum string length of MasterPassGroupId)
|Description 3+d|이 ID를 그룹 ID로 갖는 ID 토큰은 마스터 패스 그룹에 속합니다. 즉, 진행 중인 모든 트랜잭션을 중단할 수 있지만 트랜잭션을 시작할 수는 없습니다. 예를 들어, 법 집행 기관이 EV를 견인해야 할 때 진행 중인 모든 트랜잭션을 중단하는 데 사용할 수 있습니다.
|===

==== `DisableRemoteAuthorization`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCtrlr
.3+|Variable |variableName 2+d|DisableRemoteAuthorization
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|true로 설정하면 충전기가 AuthorizationRequests를 발행하지 않고 Authorization Cache와 Local Authorization List만 사용하여 idTokens의 유효성을 확인하도록 지시합니다.

참고: *AuthCtrlr.DisableRemoteAuthorization* 과 *AuthCacheCtrlr.DisablePostAuthorization* 의 차이점은 후자는 Authorization Cache 또는 Local Authorization List에서 not-Accepted로 표시된 토큰의 재인증만 비활성화하는 반면, *AuthCtrlr.DisableRemoteAuthorization* 은 CSMS를 사용한 모든 인증을 비활성화한다는 것입니다.
|===

[[authorization_cache_related]]
=== Authorization Cache related

[[auth_cache_enabled]]
==== `AuthCacheEnabled`

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |이 변수의 값이 변경되어도 인증 캐시의 내용은 변경되어서는 안 됩니다.
|===

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 _true_ 값일 경우 인증 캐시가 활성화됩니다.
|===

==== `AuthCacheAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 _true_ 값일 경우 인증 캐시가 지원되지만 반드시 활성화된 것은 아닙니다.
|===

[[auth_cache_lifetime]]
==== `AuthCacheLifeTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|LifeTime
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|마지막으로 사용된 이후 인증 캐시에서 토큰이 만료되기까지 걸리는 시간을 나타냅니다.
|===

==== `AuthCacheStorage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|Storage
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of bytes
|Description 3+d|현재 <<authorization_cache,Authorization Cache>>에서 사용하는 바이트 수를 나타냅니다. MaxLimit은 <<authorization_cache,Authorization Cache>>에서 사용할 수 있는 최대 바이트 수를 나타냅니다.
|===

==== `AuthCachePolicy`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.4+|Variable |variableName 2+d|Policy
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valuesList d|LRU, LFU, FIFO, CUSTOM
|Description 3+d|캐시 항목 교체 정책: 가장 오래 사용됨(LRU), 가장 덜 자주 사용됨(LFU), 선입 선출(FIFO), 기타 사용자 정의 메커니즘(CUSTOM).
|===

==== `AuthCacheDisablePostAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AuthCacheCtrlr
.3+|Variable |variableName 2+d|DisablePostAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수를 true로 설정하면 C10.FR.03 및 C12.FR.05에 명시된 대로 허용됨 이외의 상태로 캐시에 저장된 idToken에 대한 인증을 요청하는 동작이 비활성화됩니다.
|===

[[local_authorization_list_management_related]]
=== Local Authorization List Management related

[[local_auth_list_enabled]]
==== `LocalAuthListEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 _true_ 값일 경우 <<local_authorization_list,Local Authorization List>>가 활성화됩니다.
|===

[[local_auth_list_entries]]
==== `LocalAuthListEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.4+|Variable |variableName 2+d|Entries
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of IdTokens that can be stored in the <<local_authorization_list,Local Authorization List>>.
|Description 3+d|현재 <<local_authorization_list,Local Authorization List>>에 있는 IdToken의 양. +
이 변수의 maxLimit은 <<local_authorization_list,Local Authorization List>>에 저장할 수 있는 최대 IdToken 수를 보고하기 위해 제공되어야 합니다.
|===

[[local_auth_list_available]]
==== `LocalAuthListAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 _true_ 값일 경우, <<local_authorization_list,Local Authorization List>>를 지원합니다.
|===

[[items_per_message_send_local_list]]
==== `ItemsPerMessageSendLocalList`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|ItemsPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|===

[[bytes_per_message_send_local_list]]
==== `BytesPerMessageSendLocalList`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|when `LocalAuthListAvailable` is _true_
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|BytesPerMessage
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|===

==== `LocalAuthListStorage`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.4+|Variable |variableName 2+d|Storage
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|The maximum number of bytes
|Description 3+d|현재 <<local_authorization_list,Local Authorization List>>에서 사용하는 바이트 수를 나타냅니다. MaxLimit은 <<local_authorization_list,Local Authorization List>>에서 사용할 수 있는 최대 바이트 수를 나타냅니다.
|===

==== `LocalAuthListDisablePostAuthorize`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|DisablePostAuthorize
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수를 _true_ 로 설정하면 C14.FR.03에 명시된 대로 Accepted됨 이외의 상태로 로컬 인증 목록에 저장된 idToken에 대한 인증 동작이 비활성화됩니다.
|===

==== `LocalAuthListSupportsExpiryDateTime`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|LocalAuthListCtrlr
.3+|Variable |variableName 2+d|SupportsExpiryDateTime
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 로 설정하면 현재 날짜/시간이 _cacheExpiryDateTime_ 값을 지난 경우, 충전기는 로컬 인증 목록에 없는 것처럼 인증을 위해 idToken을 무시합니다. +
_cacheExpiryDateTime_ 은 SendLocalListRequest 또는 GetLocalListRequest 메시지의 동작에 영향을 미치지 않습니다.
|===

[[transaction_related]]
=== Transaction related

[[ev_connection_timeout]]
==== `EVConnectionTimeOut`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|EVConnectionTimeOut
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|EV 운전자가 충전 케이블 커넥터를 적절한 소켓에 (올바르게) 삽입하지 못해 트랜잭션이 "시작"되는 순간부터 초기 트랜잭션이 자동으로 취소되는 순간까지의 간격. 충전기는 원래 상태, 아마도 'Available'으로 돌아가야 합니다. "시작"은 RFID를 스와이프하거나, 시작 버튼을 누르거나, RequestStartTransactionRequest를 수신하는 것일 수 있습니다.
|===

[[stop_tx_on_ev_side_disconnect]]
==== `StopTxOnEVSideDisconnect`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|StopTxOnEVSideDisconnect
  |variableAttributes |mutability d|ReadWrite or ReadOnly, depending on Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 로 설정하면, 케이블이 EV에서 분리될 때 충전기는 트랜잭션을 인증 취소해야 합니다.
|===

[[tx_before_accepted_enabled]]
==== `TxBeforeAcceptedEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|TxBeforeAcceptedEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 구성 변수를 사용하면 충전기가 <<registration_status_enum_type,RegistrationStatus>>: Accepted를 포함하는 <<boot_notification_response,BootNotificationResponse>>를 받기 전에 충전을 허용하도록 구성할 수 있습니다. 참조: <<transactions_before_being_accepted_by_a_csms,Transactions before being accepted by a CSMS>>.
|===

[[tx_start_point]]
==== `TxStartPoint`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|TxStartPoint
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  .2+|variableCharacteristics |dataType d|MemberList
    |valueList d|See <<tx_start_stop_point_values,TxStartStopPoint values>> for allowed values. It is not required to implement all possible values.
|Description 3+d|충전기가 언제 새 트랜잭션을 시작할지를 정의합니다. 첫 번째 <<transaction_event_request,TransactionEventRequest>>: eventType = Started. +
주어진 목록의 이벤트가 발생하면 충전기는 트랜잭션을 시작해야 합니다. +
충전기는 모든 트랜잭션에 대해 Started 이벤트를 한 번만 전송해야 합니다. +
시작 이벤트가 발생하지 않는 경우를 대비하여 트랜잭션의 일부가 되어야 하는 모든 이벤트를 목록에 넣는 것이 좋습니다. 사용 가능한 이벤트가 항상 같은 순서로 발생하지 않으므로 이벤트 목록을 제공할 수 있습니다. 먼저 발생하는 이벤트에 따라 트랜잭션이 시작됩니다. 예를 들어 EVConnected, Authorized는 EV가 감지되거나(케이블이 연결됨) EV 운전자가 RFID 카드를 긁어 CSMS가 충전을 위해 ID를 성공적으로 승인할 때 트랜잭션이 시작됨을 의미합니다.
|===

[[tx_stop_point]]
==== `TxStopPoint`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|TxStopPoint
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  .2+|variableCharacteristics |dataType d|MemberList
    |valueList d|See <<tx_start_stop_point_values,TxStartStopPoint values>> for allowed values. It is not required to implement all possible values.
|Description 3+d|충전기가 트랜잭션을 종료하는 시점을 정의합니다. 마지막 <<transaction_event_request,TransactionEventRequest>>: eventType = Ended. +
주어진 목록의 이벤트가 더 이상 유효하지 않으면 충전기는 트랜잭션을 종료해야 합니다. +
충전기는 모든 트랜잭션에 대해 Ended 이벤트를 한 번만 보내야 합니다.
|===

[[tx_start_stop_point_values]]
==== TxStartStopPoint values

===== TxStartPoint values

다음 표는 <<tx_start_point,`TxStartPoint`>> 변수에 허용되는 값을 나열합니다. 이러한 값은 충전 세션 중에 발생할 수 있는 논리적 단계 또는 이벤트를 나타냅니다. 이러한 이벤트가 발생하고 <<tx_start_point,`TxStartPoint`>> 변수에 나열된 경우 이는 트랜잭션의 시작을 표시합니다.

[cols="<.^3s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Value          |Description

|ParkingBayOccupancy
  |주차/충전 베이에서 물체(아마도 EV)가 감지되었습니다.
|EVConnected
  |충전 케이블의 양쪽 끝이 연결되었습니다(감지할 수 있는 경우, 그렇지 않은 경우 소켓에 케이블이 꽂힌 것이 감지됨) 또는 무선 충전의 경우 EVSE와 EV 간의 초기 통신이 설정되었습니다.
|Authorized
  |운전자 또는 EV가 인증되었습니다. 시작 버튼과 같은 일종의 익명 인증일 수도 있습니다.
|PowerPathClosed
  |충전을 위한 모든 전제 조건이 충족되었으며 전력이 흐를 수 있습니다. 이 이벤트는 `EVConnected`와 `Authorized`의 논리적 AND이며 EV가 연결되고 인증될 때 트랜잭션이 시작되어야 하는 경우 사용해야 합니다. 이름과 달리 이 이벤트는 전원 릴레이의 상태와 관련이 없습니다. 참고: `PowerPathClosed`가 그 순간에 충전이 시작됨을 의미하지 않는 상황이 있을 수 있습니다(예: 충전이 지연되거나 배터리가 너무 뜨거워짐).
|EnergyTransfer
  |EV와 EVSE 간에 에너지가 전송되고 있습니다.
|DataSigned
  |재정 미터에서 서명된 미터 값을 수신하는 순간으로, _context_ = `Transaction.Begin` 및 _triggerReason_ = `SignedDataReceived` 인 TransactionEventRequest에서 사용됩니다. 이 TxStartPoint는 첫 번째 서명된 미터 값을 수신했을 때만 청구 가능한 트랜잭션을 시작할 수 있도록 허용하는 법률이 있는 경우 적용될 수 있습니다.
|===

[[tx_stop_point_values]]
===== TxStopPoint values

다음 표는 <<tx_stop_point,`TxStopPoint`>> 변수에 허용되는 값을 나열합니다. 이러한 값은 충전 세션 중에 발생할 수 있는 논리적 단계 또는 이벤트를 나타냅니다. 이러한 이벤트가 발생하고 <<tx_stop_point,`TxStopPoint`>> 변수에 나열된 경우 이는 트랜잭션의 끝을 표시합니다.

값은 <<tx_start_point,`TxStartPoint`>>와 동일하지만 이 경우 의미가 다릅니다. 시작이 아닌 이벤트의 끝을 의미하기 때문입니다. <<tx_stop_point,`TxStopPoint`>>와 함께 사용하려면 각 값을 접두사 "Not"이 붙은 것처럼 해석해야 합니다. 다음 표를 참조하세요.

[cols="<.^3s,<.^7",%autowidth.stretch,options="header",frame=all,grid=all]
|===
|Value          |Description

|ParkingBayOccupancy 
  |주차/충전 베이에서 물체(아마도 EV)가 더이상 감지되지 않습니다.
|EVConnected 
  |충전 케이블의 한쪽 또는 양쪽 끝이 분리되었습니다(이것이 감지될 수 있는 경우, 그렇지 않으면 소켓에서 케이블이 분리된 것을 감지합니다). 무선 충전의 경우: EVSE와 EV 간의 통신이 끊어졌습니다.
|Authorized
  |운전자 또는 EV가 더 이상 인증되지 않은 경우입니다. 이는 시작 버튼과 같은 일종의 익명 인증일 수도 있습니다. 인증이 종료되면 충전기에서 에너지 전송이 중단되고 그 후 eventType = Ended인 TransactionEventRequest가 전송됩니다.
|PowerPathClosed
  |충전을 위한 모든 전제 조건이 더 이상 충족되지 않습니다. 이 이벤트는 EVConnected와 Authorized의 논리적 OR이며 EV가 분리되거나 인증이 해제될 때 트랜잭션이 종료되어야 하는 경우 사용해야 합니다. 그러면 충전기에서 에너지 전송이 중단되고 그 후 eventType = Ended인 TransactionEventRequest가 전송됩니다. <<tx_stop_point,`TxStopPoint`>>에 EVConnected, Authorized 값을 갖는 것과 정확히 같습니다. +
이름과 달리 이 이벤트는 전원 릴레이의 상태와 관련이 없습니다.
|EnergyTransfer
  |EV와 EVSE 간에 에너지가 전송되지 않습니다. +
  이것은 `TxStopPoint` 로 사용하는 것이 좋지 않습니다. EV 또는 EVSE가 (일시적으로) 충전을 중단하자마자 트랜잭션이 중단되기 때문입니다.
|DataSigned |이 조건은 `TxStopPoint` 로서 의미가 없으므로 그렇게 사용해서는 안 됩니다.
|===

[[max_energy_on_invalid_id]]
==== `MaxEnergyOnInvalidId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TxCtrlr
.4+|Variable |variableName 2+d|MaxEnergyOnInvalidId
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|Wh
    |dataType d|integer
|Description 3+d|트랜잭션이 시작된 후 CSMS에서 식별자의 인증을 박탈할 때 전달되는 최대 에너지량(Wh)입니다.
|===

[[stop_tx_on_invalid_id]]
==== `StopTxOnInvalidId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TxCtrlr
.3+|Variable |variableName 2+d|StopTxOnInvalidId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|<<transaction_event_response,TransactionEventResponse>>에서 이 트랜잭션에 대한 인증 상태가 _Accepted_ 되지 않음으로 수신될 경우 충전기가 진행 중인 트랜잭션을 인증 취소할지 여부입니다.
|===

[[metering_related]]
=== Metering related

==== `SampledDataEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 값일 경우, Sampled Data가 활성화됩니다.
|===

==== `SampledDataAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 값일 경우, Sampled Data를 지원합니다.
|===

[[sampled_data_sign_readings]]
==== `SampledDataSignReadings`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|SignReadings
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 로 설정하면 충전기는 <<transaction_event_request,TransactionEventRequest>>에 서명된 미터 값을 CSMS에 포함해야 합니다. 일부 충전기는 `Transaction.Begin` 및 `Transaction.End` 미터 값만 서명할 수 있습니다. 충전기가 서명된 미터 값을 지원하지 않는 경우 이 변수를 보고해서는 안 됩니다.
|===

[[sampled_data_tx_ended_measurands]]
==== `SampledDataTxEndedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxEndedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|트랜잭션 시작부터 트랜잭션 종료 시 마지막 측정량까지 <<sampled_data_tx_ended_interval,`SampledDataTxEndedInterval`>>초마다 <<transaction_event_request,TransactionEventRequest>>의 _meterValues_ 요소에 포함될 샘플링된 측정량(<<transaction_event_enum_type,eventType = Ended>>)입니다. +
  충전기는 이 변수의 <<variable_characteristics_type,VariableCharacteristicsType.valuesList>>에 지원되는 <<measurand_enum_type,Measurands>> 목록을 보고합니다. 이렇게 하면 CSMS가 `TxEndedSampledData` 에 넣을 수 있는 <<measurand_enum_type,Measurands>>를 알 수 있습니다.

  비어 있는 경우, 샘플링된 측정값은 <<transaction_event_request,TransactionEventRequest>>(<<transaction_event_enum_type,eventType = Ended>>)에 넣지 않아야 합니다.
|===

[[sampled_data_tx_ended_interval]]
==== `SampledDataTxEndedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxEndedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|<<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지에서 전송되도록 의도된 미터링(또는 기타) 데이터 샘플링 간격. 트랜잭션 데이터샘플(evseId>0)의 경우 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지에서만 수집 및 전송됩니다.

  관례에 따라 "0"(숫자 0) 값은 트랜잭션의 시작과 끝에서 가져온 값만 전송되어야 함을 의미하는 것으로 해석해야 합니다(중간 값은 전송되지 않음). 다른 값을 사용하면 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지에서 많은 데이터가 전송될 수 있으므로 TxEndedInterval = 0이 권장됩니다.
|===

[[sampled_data_tx_started_measurands]]
==== `SampledDataTxStartedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxStartedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|트랜잭션 시작 시 샘플링된 측정 대상은 트랜잭션 시작 시 전송되는 첫 번째 <<transaction_event_request,TransactionEventRequest>>(eventType = Started) 메시지의 meterValues ​​필드에 포함됩니다. +
  충전기는 이 변수의 <<variable_characteristics_type,VariableCharacteristicsType.valuesList>>에서 지원되는 <<measurand_enum_type,Measurands>> 목록을 보고합니다. 이를 통해 CSMS가 `SampledDataTxStartedMeasurands` 에 넣을 수 있는 <<measurand_enum_type,Measurands>>를 알 수 있습니다.

  충전기에 미터가 있는 경우 기본값으로 사용하는 것이 좋습니다: "Energy.Active.Import.Register"
|===

[[sampled_data_tx_updated_measurands]]
==== `SampledDataTxUpdatedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxUpdatedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|샘플링된 측정량은 모든 <<transaction_event_request,TransactionEventRequest>>(<<transaction_event_enum_type,eventType = Updated>>)의 meterValues ​​요소에 포함됩니다, 트랜잭션 시작 후 <<sampled_data_tx_updated_interval,`SampledDataTxUpdatedInterval`>>초마다. +
충전기는 이 변수의 <<variable_characteristics_type,VariableCharacteristicsType.valuesList>>에서 지원되는 <<measurand_enum_type,Measurands>> 목록을 보고합니다. 이를 통해 CSMS는 `SampledDataTxUpdatedMeasurands` 에 넣을 수 있는 <<measurand_enum_type,Measurands>>를 알 수 있습니다.

  충전기에 미터가 있는 경우 기본값으로 사용하는 것이 좋습니다: "Energy.Active.Import.Register"
|===

[[sampled_data_tx_updated_interval]]
==== `SampledDataTxUpdatedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SampledDataCtrlr
.4+|Variable |variableName 2+d|TxUpdatedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|<<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Updated>>) 메시지를 통해 전송되도록 의도된 미터링(또는 기타) 데이터 샘플링 간격. 트랜잭션 데이터(evseId>0)의 경우, 샘플은 충전 트랜잭션 시작부터 이 간격으로 주기적으로 수집되어 전송됩니다.

관례에 따라 "0"(숫자 0) 값은 트랜잭션 중에 샘플링된 데이터가 전송되지 않아야 함을 의미하는 것으로 해석됩니다.
|===

==== `AlignedDataEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 일 경우, Aligned Data가 활성화됩니다.
|===

==== `AlignedDataAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 일 경우, Aligned Data를 지원합니다.
|===

[[aligned_data_measurands]]
==== `AlignedDataMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|Measurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|<<aligned_data_interval,`AlignedDataInterval`>>초마다 포함될 <<metervalues_request, MeterValuesRequest>> 또는 <<transaction_event_request,TransactionEventRequest>>의 시계 정렬 측정 대상(들). 허용되는 모든 값은 <<measurand_enum_type,Measurand>>에서 확인하세요. +
충전기는 이 변수의 <<variable_characteristics_type,VariableCharacteristicsType.valuesList>>에서 지원되는 <<measurand_enum_type,Measurands>> 목록을 보고합니다. 이렇게 하면 CSMS가 `AlignedDataMeasurands` 에 넣을 수 있는 <<measurand_enum_type,Measurands>>를 알 수 있습니다.
|===

[[aligned_data_interval]]
==== `AlignedDataInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|Interval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|<<metervalues_request, MeterValuesRequest>> 또는 <<transaction_event_request,TransactionEventRequest>> 메시지에서 전송되도록 의도된 클록 정렬 데이터 간격의 크기(초)입니다. 이는 00:00:00(자정)부터 시작하여 하루에 균등하게 간격을 둔 집계 간격 세트의 크기(초)입니다. 예를 들어, 값 900(15분)은 매일을 96개의 15분 간격으로 나누어야 함을 나타냅니다. +
클록 정렬 데이터가 전송되는 경우 해당 간격은 ISO8601 표준에 따라 표현된 시작 시간과(선택 사항) 지속 시간 간격 값으로 식별됩니다. +
관례에 따라 "0"(숫자 0) 값은 클록 정렬 데이터를 전송해서는 안 된다는 의미로 해석해야 합니다.
|===

[[aligned_data_send_during_idle]]
==== `AlignedDataSendDuringIdle`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|AlignedDataCtrlr
  |evse 2+d|*
.3+|Variable |variableName 2+d|SendDuringIdle
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 로 설정하면 충전기는 트랜잭션이 진행 중일 때 클록 정렬 미터 값을 보내지 않아야 합니다. EVSE가 지정된 경우 진행 중인 트랜잭션이 있을 때 이 EVSE에 대한 클록 정렬 미터 값 전송을 중지해야 합니다. EVSE가 지정되지 않은 경우 이 충전기에서 어떠한 트랜잭션이 진행 중일 때도 클록 정렬 미터 값 전송을 중지해야 합니다.
|===

[[aligned_data_sign_readings]]
==== `AlignedDataSignReadings`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|AlignedDataCtrlr
.3+|Variable |variableName 2+d|SignReadings
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 로 설정하면 충전기는 `AlignedDataTxEndedMeasurands` 에 정의된 측정량에 대해 CSMS에 <<transaction_event_request,TransactionEventRequest>>의 <<sampled_value_type,SampledValueType>>에 서명 미터 값을 포함해야 합니다. +
충전기가 서명 미터 값을 지원하지 않는 경우 이 변수를 보고해서는 안 됩니다.
|===

[[aligned_data_tx_ended_measurands]]
==== `AlignedDataTxEndedMeasurands`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|TxEndedMeasurands
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|MemberList
    |maxLimit d|The maximum length of the CSV formatted string, to be defined by the implementer.
|Description 3+d|트랜잭션의 모든 <<aligned_data_tx_ended_interval,`AlignedDataTxEndedInterval`>>에 대해 적용되는 <<transaction_event_request,TransactionEventRequest>>(<<transaction_event_enum_type,eventType = Ended>>)의 meterValues ​​요소에 포함될 시계 정렬 주기적 측정 대상. +
충전기는 이 변수의 <<variable_characteristics_type,VariableCharacteristicsType.valuesList>>에서 지원되는 <<measurand_enum_type,Measurands>> 목록을 보고합니다. 이런 방식으로 CSMS는 `TxEndedAlignedData` 에 넣을 수 있는 <<measurand_enum_type,Measurands>>를 알 수 있습니다.

비어 있는 경우, Clock-aligned 측정값은 <<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>)에 입력되지 않습니다.
|===

[[aligned_data_tx_ended_interval]]
==== `AlignedDataTxEndedInterval`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|AlignedDataCtrlr
.4+|Variable |variableName 2+d|TxEndedInterval
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |unit d|s
    |dataType d|integer
|Description 3+d|<<transaction_event_request,TransactionEventRequest>> (<<transaction_event_enum_type,eventType = Ended>>) 메시지에서 전송되도록 의도된 클록 정렬 데이터 간격의 크기(초). 이는 00:00:00(자정)부터 시작하여 하루에 균등하게 간격을 둔 집계 간격 세트의 크기(초)입니다. 예를 들어, 값 900(15분)은 매일을 96개의 15분 간격으로 나누어야 함을 나타냅니다. +
클록 정렬 데이터가 수집되는 경우 해당 간격은 ISO8601 표준에 따라 표현된 시작 시간과(선택 사항) 지속 시간 간격 값으로 식별됩니다. 모든 간격은 트랜잭션이 끝날 때 1개의 TransactionEventRequest (<<transaction_event_enum_type,eventType = Ended>>) 메시지로 전송됩니다(활성화된 경우). +
이것은 권장되는 관행이 아닙니다. 메시지 크기가 매우 커질 수 있기 때문입니다.
|===

==== `PublicKeyWithSignedMeterValue`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|OCPPCommCtrlr
.4+|Variable |variableName 2+d|PublicKeyWithSignedMeterValue
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|OptionList
    |valueList d|Never,OncePerTransaction,EveryMeterValue
|Description 3+d|이 구성 변수는 공개 키를 서명된 미터 값과 함께 보내야 하는지 여부를 구성하는 데 사용할 수 있습니다. 이 필드는 필수이므로 공개 키가 전송되지 않을 때는 빈 문자열로 표시되어야 합니다.
|===

[[sampled_data_register_values_without_phases]]
==== `SampledDataRegisterValuesWithoutPhases`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SampledDataCtrlr
.3+|Variable |variableName 2+d|RegisterValuesWithoutPhases
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 값을 보고하는 경우 측정 대상 `Energy.Active.Import.Register` 의 미터 값은 개별 단계 값을 보고하지 않고 모든 단계에 대한 총 에너지만 보고합니다. +
이 변수가 없거나 _false_ 인 경우 각 단계에 대한 값이 보고되고 총 값도 함께 보고될 수 있습니다(미터에 따라 다름).
|===

[[reservation_related]]
=== Reservation related

==== `ReservationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|예약이 활성화되어 있는지 여부.
|===

==== `ReservationAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|예약이 지원되는지 여부.
|===

[[reservation_non_evse_specific]]
==== `ReservationNonEvseSpecific`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ReservationCtrlr
.3+|Variable |variableName 2+d|NonEvseSpecific
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 구성 변수가 존재하고 _true_ 로 설정된 경우: 충전기는 EVSE ID가 지정되지 않은 예약을 지원합니다.
|===

[[smart_charging_related]]
=== Smart Charging related

==== `SmartChargingEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|스마트 차징이 활성화되어 있는지 여부.
|===

==== `SmartChargingAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|스마트 차징이 지원되는지 여부.
|===

[[ac_phase_switching_supported]]
==== `ACPhaseSwitchingSupported`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ACPhaseSwitchingSupported
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수는 부하/트랜잭션 중 기능을 나타내는 데 사용할 수 있습니다. 정의되고 true인 경우 이 EVSE는 1상 AC 충전에 사용할 위상을 선택하는 것을 지원합니다.
|===

==== `ChargingProfileMaxStackLevel`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ProfileStackLevel
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|ChargingProfile에서 _stackLevel_ 에 허용되는 최대값입니다. 가장 낮은 _stackLevel_ 은 0이므로 SmartChargingCtrlr.ProfileStackLevel = 1인 경우 EVSE당 <<charging_profile_purpose,Charging Profile Purpose>>당 최대 2개의 유효한 충전 프로필이 있을 수 있음을 의미합니다.
|===

==== `ChargingScheduleChargingRateUnit`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|RateUnit
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|<<charging_schedule_type,ChargingSchedule>>에서 사용할 수 있는 지원 수량 목록. +
  허용 값: 'A' 및 'W'
|===

==== `PeriodsPerSchedule`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|PeriodsPerSchedule
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<charging_schedule_type,ChargingSchedule>>당 정의할 수 있는 최대 기간 수입니다.
|===

==== `ExternalControlSignalsEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|ExternalControlSignalsEnabled
  |variableAttributes |mutability d|ReadOnly or ReadWrite. Choice is up to Charging Station implementation.
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 충전에 영향을 미치는 외부 제어 신호에 반응해야 하는지 여부를 나타냅니다.
|===

[[notify_charging_limit_with_schedule]]
==== `NotifyChargingLimitWithSchedules`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|NotifyChargingLimitWithSchedules
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|충전기가 <<notify_charging_limit_request,NotifyChargingLimitRequest>> 메시지를 보낼 때 외부에서 설정한 충전 한도/일정을 메시지에 포함해야 하는지 여부를 나타냅니다. 특히 외부 시스템이 짧은 간격으로 새 프로필/한도를 보낼 때 데이터 사용량이 크게 증가할 수 있습니다. 생략하면 기본값은 false입니다.
|===

[[phases_3_to_1]]
==== Phases3to1

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|Phases3to1
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|정의되어 있고 true인 경우, 이 충전기는 트랜잭션 중에 3위상에서 1위상으로 전환하는 것을 지원합니다.
|===

[[charging_profile_entries]]
==== `ChargingProfileEntries`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.5+|Variable |variableName 2+d|Entries
  |variableInstance 2+d|ChargingProfiles
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of Charging profiles installed at any time.
|Description 3+d|현재 충전기에 설치된 충전 프로필의 수입니다.
|===

[[limit_change_significance]]
==== `LimitChangeSignificance`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|SmartChargingCtrlr
.3+|Variable |variableName 2+d|LimitChangeSignificance
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|decimal
|Description 3+d|충전기 측에서 ChargingProfile의 한도 변경이 이 백분율보다 낮으면 충전기는 <<notify_charging_limit_request,NotifyChargingLimitRequest>> 또는 <<transaction_event_request,TransactionEventRequest>> 메시지를 CSMS로 보내는 것을 건너뛸 수 있습니다. 이 키를 낮은 값으로 설정하는 것이 좋습니다. <<smart_charging_signals_to_a_charging_station_from_multiple_actors,Smart Charging signals to a Charging Station from multiple actors>>를 참조하세요.
|===

[[tariff_cost_related]]
=== Tariff & Cost related

==== `TariffEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Enabled
  |variableInstance 2+d|Tariff
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|요금가 활성화되어 있는지 여부.
|===

==== `TariffAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Available
  |variableInstance 2+d|Tariff
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|요금가 지원되는지 여부
|===

[[tariff_fallback_message]]
==== `TariffFallbackMessage`

요금 정보를 지원하는 충전기에 필요합니다.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|TariffFallbackMessage
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|255
|Description 3+d|운전자별 요금 정보가 없는 경우, EV 운전자에게 표시되는 메시지(및/또는 요금 정보)입니다.
|===

==== `CostEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Enabled
  |variableInstance 2+d|Cost
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|비용이 활성화되어 있는지 여부.
|===

==== `CostAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Available
  |variableInstance 2+d|Cost
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|비용을 지원하는지 여부
|===

[[total_cost_fallback_message]]
==== `TotalCostFallbackMessage`

요금 정보를 지원하는 충전기에 필요합니다.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|TotalCostFallbackMessage
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|255
|Description 3+d|트랜잭션이 끝난 후 충전기에서 트랜잭션 비용을 검색할 수 없을 때 EV 운전자에게 표시되는 메시지입니다.
|===

[[currency]]
==== `Currency`

요금 정보를 지원하는 충전기에 필요합니다.

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|TariffCostCtrlr
.4+|Variable |variableName 2+d|Currency
  |variableAttributes |mutability d|ReadWrite
  .2+|variableCharacteristics |dataType d|string
    |maxLimit d|3
|Description 3+d|이 충전기에서 사용하는 통화는 ISO 4217 <<iso4217,[ISO4217]>> 형식의 통화 코드입니다.
|===

[[diagnostics_related]]
=== Diagnostics related

==== `MonitoringEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|모니터링이 활성화되어 있는지 여부.
|===

==== `MonitoringAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|모니터링 지원 여부.
|===

[[items_per_message_clear_variable_monitoring]]
==== `ItemsPerMessageClearVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|ClearVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|<<clear_variable_monitoring_request,ClearVariableMonitoringRequest>>의 ID 최대 개수.
|===

[[items_per_message_set_variable_monitoring]]
==== `ItemsPerMessageSetVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|ItemsPerMessage
  |variableInstance 2+d|SetVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|하나의 <<set_variable_monitoring_request,SetVariableMonitoringRequest>> 메시지에서 전송할 수 있는 <<set_monitoring_data_type,SetMonitoringData>> 요소의 최대 수.
|===

[[bytes_per_message_clear_variable_monitoring]]
==== `BytesPerMessageClearVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|ClearVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<clear_variable_monitoring_request,ClearVariableMonitoringRequest>> 메시지 크기에 제약을 둡니다.
|===

[[bytes_per_message_set_variable_monitoring]]
==== `BytesPerMessageSetVariableMonitoring`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|MonitoringCtrlr
.4+|Variable |variableName 2+d|BytesPerMessage
  |variableInstance 2+d|SetVariableMonitoring
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|메시지 크기(바이트) - <<set_variable_monitoring_request,SetVariableMonitoringRequest>> 메시지 크기에 제약을 둡니다.
|===

[[offline_monitoring_event_queuing_severity]]
==== `OfflineMonitoringEventQueuingSeverity`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|OfflineQueuingSeverity
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|integer
|Description 3+d|설정 시 충전기가 오프라인이면 충전기는 여기서 구성된 심각도보다 낮거나 같은 심각도 번호를 가진 모니터에서 트리거된 모든 <<notify_event_request,NotifyEventRequest>> 메시지를 대기열에 넣습니다. 0(Emergency)에서 9(Debug)까지의 값입니다.
|===

==== `ActiveMonitoringBase`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|ActiveMonitoringBase
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|OptionList
|Description 3+d|현재 사용 중인 MonitoringBase를 보여줍니다. MonitoringBaseEnumType에 따른 유효한 값: `All`, `FactoryDefault`, `HardwiredOnly`.
|===

==== `ActiveMonitoringLevel`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|MonitoringCtrlr
.3+|Variable |variableName 2+d|ActiveMonitoringLevel
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|현재 사용되는 MonitoringLevel을 표시합니다. 유효한 값은 SetMonitoringLevelRequest: 0-9의 심각도 수준입니다.
|===

[[display_message_related]]
=== Display Message related

==== `DisplayMessageEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|Enabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Display Message가 활성화되어 있는지 여부.
|===

==== `DisplayMessageAvailable`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|Display Message 지원 여부.
|===

[[number_of_display_messages]]
==== `NumberOfDisplayMessages`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.4+|Variable |variableName 2+d|DisplayMessages
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|integer
    |maxLimit d|Maximum number of different messages that can configured in this Charging Station simultaneous, via <<set_display_message_request,SetDisplayMessageRequest>>.
|Description 3+d|<<set_display_message_request,SetDisplayMessageRequest>>를 통해 현재 이 충전기에 구성된 다양한 메시지의 양
|===

[[display_message_supported_formats]]
==== `DisplayMessageSupportedFormats`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|SupportedFormats
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|이 충전기에서 지원하는 메시지 형식 목록입니다. 가능한 값: <<message_format_enum_type,MessageFormat>>.
|===

[[display_message_supported_priorities]]
==== `DisplayMessageSupportedPriorities`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|DisplayMessageCtrlr
.3+|Variable |variableName 2+d|SupportedPriorities
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|MemberList
|Description 3+d|이 충전기에서 지원하는 우선순위 목록입니다. 가능한 값: <<message_priority_enum_type,MessagePriority>>.
|===

[[charging_infrastructure_related]]
=== Charging Infrastructure related

[[available]]
==== `Available`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.4+|Components .3+|componentName 2+d|ChargingStation
    2+d|EVSE
    2+d|Connector
  |evse 2+d|* (_for EVSE and Connector_)
.3+|Variable |variableName 2+d|Available
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|_true_ 인 경우 구성 요소가 존재하고 로컬에서 사용하도록 구성/배선되었지만 (원격으로) 활성화되지 않을 수 있습니다. 이 변수는 충전기에서 보고할 수 있는 모든 구성 요소에 필요합니다. 최소한 충전기, EVSE 및 커넥터에 존재해야 합니다.
|Note 3+d|구성 요소에 대해 다른 변수가 보고된 경우 _Available_ 을 보고해도 큰 가치가 없으므로 생략할 수 있습니다. 그러나 변수는 존재해야 합니다. 'available'한 모든 구성 요소에 대한 GetCustomReport 요청에서 쿼리할 수 있기 때문입니다.

  EVSE 및 커넥터 구성 요소는 해당 계층에서 주소가 지정됩니다. 따라서 EVSE #1은 계층 _evse_ = 1에서 구성 요소 EVSE로 주소가 지정되고 이 EVSE의 커넥터 #1은 계층 _evse_ = 1, _connector_ = 1에서 구성 요소 커넥터로 주소가 지정됩니다.
|===

==== `AvailabilityState`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.3+|Components .2+|componentName 2+d|ChargingStation
    2+d|EVSE
  |evse 2+d|* (_for EVSE_)
.4+|Variable |variableName 2+d|AvailabilityState
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|optionList
    |valuesList d|Available, Occupied, Reserved, Unavailable, Faulted
|Description 3+d|이 변수는 ChargingStation 및 EVSE의 현재 가용성 상태를 보고합니다. 커넥터가 EVSE와 독립적인 자체 가용성 상태를 가지고 있는 경우 이 변수를 사용하여 커넥터의 가용성 상태를 보고할 수 있습니다. 따라서 StatusNotification 메시지에서 보고된 ConnectorStatus 값을 복제합니다.

EVSE 구성 요소는 자체 계층에서 주소가 지정됩니다. 따라서 EVSE #1은 계층 _evse_ = 1에서 구성 요소 EVSE로 주소가 지정됩니다.
|===

[[allow_reset]]
==== `AllowReset`
[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.3+|Variable |variableName 2+d|AllowReset
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|boolean
|Description 3+d|구성 요소를 리셋할 수 있습니다. EVSE를 개별적으로 리셋할 수 있음을 알리는 데 사용할 수 있습니다.
|===

==== `ConnectorType`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.2+|Component |componentName 2+d|Connector
    |evse 2+d|*
.3+|Variable |variableName 2+d|ConnectorType
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|"Part 2 - Specification"에 있는 ConnectorEnumType에 정의된 커넥터 유형의 값에 추가로 `cGBT`, `cChaoJi`, `OppCharge`가 추가됩니다.
|===

[[phase_rotation]]
==== `PhaseRotation`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|*
    |evse 2+d|*
.3+|Variable |variableName 2+d|PhaseRotation
  |variableAttributes |mutability d|ReadOnly or ReadWrite.
  |variableCharacteristics |dataType d|String
|Description 3+d|이 변수는 R, S, T, x로 구성된 세 글자 문자열을 사용하여 상위 구성 요소에 대한 구성 요소의 위상 회전을 설명합니다.

  {nbsp}

  문자 'R'은 위상 1(L1), 'S'는 위상 2(L2), 'T'는 위상 3(L3)으로 식별할 수 있습니다. +
  소문자 'x'는 연결되지 않은 위상을 지정하는 데 사용됩니다. +
  빈 문자열은 위상 회전이 적용되지 않거나 알 수 없음을 의미합니다.

  {nbsp}

  전압 및 전류와 같은 특정 측정량은 그리드 연결에 대한 위상으로 보고됩니다. 이를 지원하기 위해 Connector에서 ElectricalFeed까지의 체인에 있는 모든 구성 요소에는 PhaseRotation 값이 있어야 합니다.

  {nbsp}

  Some examples: +
  "" (unknown) +
  "RST" (Standard Reference Phasing) +
  "RTS" (Reversed Reference Phasing) +
  "SRT" (Reversed 240 degree rotation) +
  "STR" (Standard 120 degree rotation) +
  "TRS" (Standard 240 degree rotation) +
  "TSR" (Reversed 120 degree rotation) +
  "RSx" (Two phases connected) +
  "Rxx" (One phase connected)
|===

==== `SupplyPhases`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
.4+|Components .3+|componentName 2+d|ChargingStation
    2+d|EVSE
    2+d|Connector
  |evse 2+d|* (_for EVSE and Connector_)
.3+|Variable |variableName 2+d|SupplyPhases
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|integer
|Description 3+d|연결/사용 가능한 교류 전류 위상 수. AC의 경우 1 또는 3, DC(교류 위상 없음)를 의미합니다. Null 값은 위상 수(예: 사용 중)를 알 수 없음을 나타냅니다.
|===

==== `Power`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes (_maxLimit only_)
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.4+|Variable |variableName 2+d|Power
  |variableAttributes |mutability d|ReadOnly
  .2+|variableCharacteristics |dataType d|decimal
    |maxLimit d|decimal
|Description 3+d|이 EVSE가 제공할 수 있는 최대 전력을 보유하는 변수 특성 _maxLimit_ 가 필요합니다. 순간(실제) 전력의 _Actual_ 값은 바람직하지만 필수는 아닙니다.
|===

==== Example Reporting of EVSEs and Connectors via device model

다음 예는 두 개의 EVSE가 있는 예시 충전기에 대한 EVSE 및 커넥터를 장치 모델이 보고하는 방식을 보여줍니다. EVSE #1에는 Type2 커넥터가 하나 있고 EVSE #2에는 CCS와 CHAdeMO 커넥터가 두 개 있습니다.

[cols="<.^3,<.^1,<.^1,<.^2,<.^3,<.^2,<.^2,<.^3,<.^2,<.^2,<.^2",%autowidth.stretch,options="header",frame=all,grid=all]
|===
4+|Component 2+|Variable 2+|VariableAttribute 3+|VariableCharacteristics

s|name s|evse id s|evse connectorId s|instance s|name s|instance s|type s|value s|dataType s|maxLimit s|supportsMonitoring

|ChargingStation |{nbsp} |{nbsp} |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |AvailabilityState |{nbsp} |Actual |Available |boolean |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |SupplyPhases |{nbsp} |Actual |integer |3 |{nbsp} |false
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L1" |Actual |decimal |45.0 |{nbsp} |true
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L2" |Actual |decimal |44.9 |{nbsp} |true
|ChargingStation |{nbsp} |{nbsp} |{nbsp} |ACCurrent |"L3" |Actual |decimal |44.9 |{nbsp} |true
|EVSE |1 |{nbsp} |"left" |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |AvailabilityState |{nbsp} |Actual |Available |optionList |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |SupplyPhases |{nbsp} |Actual |3 |integer |{nbsp} |false
|EVSE |1 |{nbsp} |"left" |Power |{nbsp} |Actual |0.0 |decimal |22000.0 |true
|Connector |1 |1 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |1 |1 |{nbsp} |ConnectorType |{nbsp} |Actual |sType2 |string |{nbsp} |false
|Connector |1 |1 |{nbsp} |SupplyPhases |{nbsp} |Actual |3 |integer |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |AvailabilityState |{nbsp} |Actual |Occupied |optionList |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|EVSE |2 |{nbsp} |"right" |Power |{nbsp} |Actual |41000.0 |decimal |50000.0 |true
|Connector |2 |1 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |2 |1 |{nbsp} |AvailabilityState |{nbsp} |Actual |Occupied |optionList |{nbsp} |false
|Connector |2 |1 |{nbsp} |ConnectorType |{nbsp} |Actual |cCCS2 |string |{nbsp} |false
|Connector |2 |1 |{nbsp} |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|Connector |2 |2 |{nbsp} |Available |{nbsp} |Actual |true |boolean |{nbsp} |false
|Connector |2 |2 |{nbsp} |AvailabilityState |{nbsp} |Actual |Unavailable |optionList |{nbsp} |false
|Connector |2 |2 |{nbsp} |ConnectorType |{nbsp} |Actual |cG105 |string |{nbsp} |false
|Connector |2 |2 |{nbsp} |SupplyPhases |{nbsp} |Actual |0 |integer |{nbsp} |false
|===

[cols="^.^1s,10",%autowidth.stretch]
|===
|NOTE |이 예에서 EVSE에 인스턴스 이름이 지정되었습니다. 이는 구성 요소의 인스턴스가 하나만 있는 경우에도 인스턴스 이름을 제공할 수 있음을 보여주기 위한 것입니다. 반드시 그렇게 할 필요는 없습니다. +
  충전기의 Voltage 변수는 다중 인스턴스 변수의 예를 보여주기 위해 추가되었습니다. +
  모든 VariableAttributes 및 VariableCharacteristics가 표에 표시되는 것은 아닙니다.
|===

=== ISO 15118 Related

[[central_contract_validation_allowed]]
==== `CentralContractValidationAllowed`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|CentralContractValidationAllowed
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 존재하고 값이 _true_ 이면 충전기는 자신이 검증할 수 없는 계약 인증서를 AuthorizeRequest의 일부로 검증을 위해 CSMS에 제공할 수 있습니다.
|===

[[contract_validation_offline]]
==== `ContractValidationOffline`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|yes
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|ContractValidationOffline
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 이면 충전기는 오프라인일 때 계약 인증서의 유효성을 검사하려고 시도합니다.
|===

==== `ProtocolSupportedByEV`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ConnectedEV
  |evse 2+d|*
.4+|Variable |variableName 2+d|ProtocolSupportedByEV
  |variableInstance 2+d|<Priority>
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|다음 항목을 쉼표로 구분하여 포함하는 문자열: +
  "<uri>,<major>,<minor>". +
  이는 ISO 15118의 SupportedAppProtocolReq 메시지에서 가져온 정보입니다. +
  각 우선순위에는 자체 변수 인스턴스가 지정됩니다. 우선순위는 1에서 20까지의 숫자로 된 문자열입니다. 예: "1" 또는 "2". +
  Example: +
  - ConnectedEV.ProtocolSupportedByEV["1"]  "urn:iso:15118:2:2013:MsgDef,2,0" +
  - ConnectedEV.ProtocolSupportedByEV["2"]  "urn:iso:15118:2:2010:MsgDef,1,0"
|===

==== `ProtocolAgreed`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ConnectedEV
  |evse 2+d|*
.3+|Variable |variableName 2+d|ProtocolAgreed
  |variableAttributes |mutability d|ReadOnly
  |variableCharacteristics |dataType d|string
|Description 3+d|다음 항목을 쉼표로 구분하여 포함하는 문자열: +
  "<uri>,<major>,<minor>". +
  이는 ISO 15118의 supportedAppProtocolReq 핸드셰이크에서 EV와 EVSE가 합의한 프로토콜 uri 및 버전 정보입니다. +
  Example: "urn:iso:15118:2:2013:MsgDef,2,0"
|===

[[iso15118_pnc_enabled]]
==== `ISO15118PnCEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|PnCEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 이면 사용 사례 <<authorization_using_contract_certificates,C07 - Authorization using Contract Certificates>>에서 설명한 대로 ISO 15118 플러그 앤 충전이 활성화됩니다. +
  이 변수가 _false_ 이면 사용 사례 <<authorization_using_contract_certificates,C07 - Authorization using Contract Certificates>>에서 설명한 대로 ISO 15118 플러그 앤 충전이 비활성화됩니다.
|===

==== `ISO15118V2GCertificateInstallationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|V2GCertificateInstallationEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 이면 사용 사례 <<update_charging_station_certificate_by_request_of_csms,A02 - Update Charging Station Certificate by request of CSMS>> 및 <<update_charging_station_certificate_initiated_by_the_charging_station,A03 - Update Charging Station Certificate initiated by the Charging Station>>에 설명된 대로 ISO 15118 V2G 충전기 인증서 설치가 활성화됩니다. +
  이 변수가 _false_ 이면 사용 사례 <<update_charging_station_certificate_by_request_of_csms,A02 - Update Charging Station Certificate by request of CSMS>> 및 <<update_charging_station_certificate_initiated_by_the_charging_station,A03 - Update Charging Station Certificate initiated by the Charging Station>>에 설명된 대로 ISO 15118 V2G 충전기 인증서 설치가 비활성화됩니다.
|===

==== `ISO15118ContractCertificateInstallationEnabled`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|ContractCertificateInstallationEnabled
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 이면 ISO 15118 계약 인증서 설치/업데이트는 사용 사례 <<m01_certificate_installation_ev,M01 - Certificate installation EV>> 및 <<m02_certificate_update_ev,M02 - Certificate Update EV is enabled>>에서 설명한 대로입니다. +
이 변수가 _false_ 이면 ISO 15118 계약 인증서 설치/업데이트는 사용 사례 <<m01_certificate_installation_ev,M01 - Certificate installation EV>> 및 <<m02_certificate_update_ev,M02 - Certificate Update EV is disabled>>에서 설명한 대로입니다.
|===

==== `ISO15118RequestMeteringReceipt`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
.3+|Variable |variableName 2+d|RequestMeteringReceipt
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|boolean
|Description 3+d|이 변수가 _true_ 이면 충전기는 CSMS에 재정 미터 값을 보내기 전에 EV에 계량 영수증을 요청해야 합니다.
|===

==== `ISO15118SeccId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|ISO15118Ctrlr
  |evse 2+d|* (optional)
.3+|Variable |variableName 2+d|SeccId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|ISO 15118에서 요구하는 문자열 형식의 SECC 이름입니다. +
  SECC 리프 인증서의 *commonName* (CN)으로 사용됩니다. +
  Example: "DE-ICE-S-0003C4D5578786756453309675436-2"
|===

==== `ISO15118CountryName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
evse * (optional)
.3+|Variable |variableName 2+d|CountryName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|ISO 3166-1 형식의 SECC 국가명입니다. +
  SECC 리프 인증서의 *countryName* (C)으로 사용됩니다. +
  Example: "DE"
|===

==== `ISO15118OrganizationName`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
|Component |componentName 2+d|ISO15118Ctrlr
evse * (optional)
.3+|Variable |variableName 2+d|OrganizationName
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|충전기를 운영하는 CSO의 organizationName. +
  SECC 리프 인증서의 *organizationName* (O)으로 사용됩니다. +
  Example: "John Doe Charging Services Ltd" +
  Note: 이 값은 일반적으로 SecurityCtrlr.OrganizationName과 동일하지만 반드시 그럴 필요는 없습니다.
|===

==== `ISO15118EvseId`

[cols="<.^2s,<.^3s,<.^3s,<.^5",%autowidth.stretch,frame=all,grid=all]
|===
|Required 3+d|no
.2+|Component |componentName 2+d|EVSE
  |evse 2+d|*
.3+|Variable |variableName 2+d|ISO15118EvseId
  |variableAttributes |mutability d|ReadWrite
  |variableCharacteristics |dataType d|string
|Description 3+d|ISO 15118 및 IEC 63119-2에서 요구하는 문자열 형식의 EVSE 이름입니다.
  Example: "DE*ICE*E*1234567890*1"
|===
